<expression tag="Formulae.Script" Modules="org.formulae.typesetting,org.formulae.text.string,org.formulae.list,org.formulae.visualization,org.formulae.math.arithmetic,org.formulae.symbolic,org.formulae.math.complex,org.formulae.diagramming,org.formulae.logic,org.formulae.programming,org.formulae.relation,org.formulae.time">
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Typesetting.MultiParagraph">
			<expression tag="Typesetting.Paragraph">
				<expression tag="Typesetting.BoldChunk">
					<expression tag="String.Text" Value="Arithmetic tutorial"/>
				</expression>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="In this tutorial, you will know the expression related to arithmetics."/>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Typesetting.MultiParagraph">
			<expression tag="Typesetting.Paragraph">
				<expression tag="Typesetting.BoldChunk">
					<expression tag="String.Text" Value="Numbers"/>
				</expression>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="Typesetting.BoldChunk">
					<expression tag="String.Text" Value="Integer and decimal numbers."/>
				</expression>
				<expression tag="String.Text" Value="The first category is to manage integer numbers exclusively, the second one can hold both integer and decimal numbers."/>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="Normally, integer numbers are easily distinguishable from decimal ones, because the latter contain a decimal separator and fractional part (for example 12.34), while the former ones do not (for example 50)."/>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="How could we distinguish a given integer number from the decimal number with the same value? this is, to differentiate the (integer) number 50 from the decimal number 50? The answer is easy, a decimal number always shows the decimal separator, even if it contains an integer number."/>
			</expression>
			<expression tag="Typesetting.Centering">
				<expression tag="List.Table">
					<expression tag="List.List">
						<expression tag="List.List">
							<expression tag="Visualization.Bold" Value="True" Set="True">
								<expression tag="String.Text" Value="Example"/>
							</expression>
							<expression tag="Visualization.Bold" Value="True" Set="True">
								<expression tag="String.Text" Value="Type"/>
							</expression>
						</expression>
						<expression tag="List.List">
							<expression tag="Math.Number" Value="235"/>
							<expression tag="String.Text" Value="Integer number"/>
						</expression>
						<expression tag="List.List">
							<expression tag="Math.Number" Value="12.5"/>
							<expression tag="String.Text" Value="Decimal number"/>
						</expression>
						<expression tag="List.List">
							<expression tag="Math.Number" Value="5"/>
							<expression tag="String.Text" Value="Integer 5"/>
						</expression>
						<expression tag="List.List">
							<expression tag="Math.Number" Value="5."/>
							<expression tag="String.Text" Value="Decimal 5"/>
						</expression>
						<expression tag="List.List">
							<expression tag="Math.Number" Value="0"/>
							<expression tag="String.Text" Value="Integer zero"/>
						</expression>
						<expression tag="List.List">
							<expression tag="Math.Number" Value="0."/>
							<expression tag="String.Text" Value="Decimal zero"/>
						</expression>
					</expression>
				</expression>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="Typesetting.BoldChunk">
					<expression tag="String.Text" Value="Negative numbers"/>
				</expression>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="To create negative numbers, you can use a"/>
				<expression tag="Internet.UniformResourceLocator" Value="/?script=reference/Math.Arithmetic.Negative" Description="Negative"/>
				<expression tag="String.Text" Value="expression, holding a number, such as"/>
				<expression tag="Math.Arithmetic.Negative">
					<expression tag="Math.Number" Value="45"/>
				</expression>
				<expression tag="String.Text" Value="."/>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="Numbers and negative numbers do not reduce to other expression when evaluated:"/>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="List.List">
			<expression tag="Math.Number" Value="5"/>
			<expression tag="Math.Arithmetic.Negative">
				<expression tag="Math.Number" Value="5"/>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="1">
		<expression tag="List.List">
			<expression tag="Math.Number" Value="5"/>
			<expression tag="Math.Arithmetic.Negative">
				<expression tag="Math.Number" Value="5"/>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Typesetting.Paragraph">
			<expression tag="String.Text" Value="Excepting negative zeros"/>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="List.List">
			<expression tag="Math.Arithmetic.Negative">
				<expression tag="Math.Number" Value="0"/>
			</expression>
			<expression tag="Math.Arithmetic.Negative">
				<expression tag="Math.Number" Value="0."/>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="1">
		<expression tag="List.List">
			<expression tag="Math.Number" Value="0"/>
			<expression tag="Math.Number" Value="0."/>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Typesetting.MultiParagraph">
			<expression tag="Typesetting.Paragraph">
				<expression tag="Typesetting.BoldChunk">
					<expression tag="String.Text" Value="Rational numbers"/>
				</expression>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="A rational number is represented using the"/>
				<expression tag="Internet.UniformResourceLocator" Value="/?script=reference/Math.Arithmetic.Division" Description="Division"/>
				<expression tag="String.Text" Value="expression, holding two integer numbers as the numerator and denominator, such as"/>
				<expression tag="Math.Arithmetic.Division">
					<expression tag="Math.Number" Value="2"/>
					<expression tag="Math.Number" Value="3"/>
				</expression>
				<expression tag="String.Text" Value="."/>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="Sometimes, rational numbers reduce to a rational number in simpler terms:"/>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Math.Arithmetic.Division">
			<expression tag="Math.Number" Value="18"/>
			<expression tag="Math.Number" Value="27"/>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="1">
		<expression tag="Math.Arithmetic.Division">
			<expression tag="Math.Number" Value="2"/>
			<expression tag="Math.Number" Value="3"/>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Typesetting.Paragraph">
			<expression tag="String.Text" Value="Sometimes, rational numbers reduce to other kind of numbers"/>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="List.List">
			<expression tag="Math.Arithmetic.Division">
				<expression tag="Math.Number" Value="6"/>
				<expression tag="Math.Number" Value="3"/>
			</expression>
			<expression tag="Math.Arithmetic.Division">
				<expression tag="Math.Number" Value="0"/>
				<expression tag="Math.Number" Value="5"/>
			</expression>
			<expression tag="Math.Arithmetic.Division">
				<expression tag="Math.Number" Value="34"/>
				<expression tag="Math.Number" Value="1"/>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="1">
		<expression tag="List.List">
			<expression tag="Math.Number" Value="2"/>
			<expression tag="Math.Number" Value="0"/>
			<expression tag="Math.Number" Value="34"/>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="List.List">
			<expression tag="Math.Arithmetic.Division">
				<expression tag="Math.Arithmetic.Negative">
					<expression tag="Math.Number" Value="2"/>
				</expression>
				<expression tag="Math.Number" Value="3"/>
			</expression>
			<expression tag="Math.Arithmetic.Division">
				<expression tag="Math.Number" Value="2"/>
				<expression tag="Math.Arithmetic.Negative">
					<expression tag="Math.Number" Value="3"/>
				</expression>
			</expression>
			<expression tag="Math.Arithmetic.Division">
				<expression tag="Math.Arithmetic.Negative">
					<expression tag="Math.Number" Value="2"/>
				</expression>
				<expression tag="Math.Arithmetic.Negative">
					<expression tag="Math.Number" Value="3"/>
				</expression>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="1">
		<expression tag="List.List">
			<expression tag="Math.Arithmetic.Negative">
				<expression tag="Math.Arithmetic.Division">
					<expression tag="Math.Number" Value="2"/>
					<expression tag="Math.Number" Value="3"/>
				</expression>
			</expression>
			<expression tag="Math.Arithmetic.Negative">
				<expression tag="Math.Arithmetic.Division">
					<expression tag="Math.Number" Value="2"/>
					<expression tag="Math.Number" Value="3"/>
				</expression>
			</expression>
			<expression tag="Math.Arithmetic.Division">
				<expression tag="Math.Number" Value="2"/>
				<expression tag="Math.Number" Value="3"/>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="List.List">
			<expression tag="Math.Arithmetic.Division">
				<expression tag="Math.Number" Value="2.5"/>
				<expression tag="Math.Number" Value="4"/>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="1">
		<expression tag="List.List">
			<expression tag="Math.Number" Value="0.625"/>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Typesetting.MultiParagraph">
			<expression tag="Typesetting.Paragraph">
				<expression tag="Typesetting.BoldChunk">
					<expression tag="String.Text" Value="Complex numbers"/>
				</expression>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="A complex number is an expression of the form"/>
				<expression tag="Math.Arithmetic.Addition">
					<expression tag="Symbolic.Symbol" Name="a"/>
					<expression tag="Math.Arithmetic.Multiplication">
						<expression tag="Symbolic.Symbol" Name="b"/>
						<expression tag="Math.Complex.ImaginaryUnit"/>
					</expression>
				</expression>
				<expression tag="String.Text" Value="where "/>
				<expression tag="Symbolic.Symbol" Name="a"/>
				<expression tag="String.Text" Value="and"/>
				<expression tag="Symbolic.Symbol" Name="b"/>
				<expression tag="String.Text" Value="are positive or negative, integer, decimal or rational numbers."/>
			</expression>
			<expression tag="Null"/>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Math.Arithmetic.Addition">
			<expression tag="Math.Arithmetic.Division">
				<expression tag="Math.Number" Value="2"/>
				<expression tag="Math.Number" Value="5."/>
			</expression>
			<expression tag="Math.Arithmetic.Negative">
				<expression tag="Math.Arithmetic.Multiplication">
					<expression tag="Math.Arithmetic.Division">
						<expression tag="Math.Number" Value="36"/>
						<expression tag="Math.Number" Value="16"/>
					</expression>
					<expression tag="Math.Complex.ImaginaryUnit"/>
				</expression>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="1">
		<expression tag="Math.Arithmetic.Addition">
			<expression tag="Math.Number" Value="0.4"/>
			<expression tag="Math.Arithmetic.Negative">
				<expression tag="Math.Arithmetic.Multiplication">
					<expression tag="Math.Arithmetic.Division">
						<expression tag="Math.Number" Value="9"/>
						<expression tag="Math.Number" Value="4"/>
					</expression>
					<expression tag="Math.Complex.ImaginaryUnit"/>
				</expression>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Typesetting.MultiParagraph">
			<expression tag="Typesetting.Paragraph">
				<expression tag="Typesetting.BoldChunk">
					<expression tag="String.Text" Value="Arithmetic operations"/>
				</expression>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="You can do simple arithmetic operation, like with a calculator:"/>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Math.Arithmetic.Addition">
			<expression tag="Math.Number" Value="2"/>
			<expression tag="Math.Number" Value="3"/>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="1">
		<expression tag="Math.Number" Value="5"/>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Typesetting.Paragraph">
			<expression tag="String.Text" Value="Unlike a calculator, you can use numbers arbitrarily big, and you get the correct result:"/>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Math.Arithmetic.Multiplication">
			<expression tag="Math.Number" Value="43527523745327544348387423403743649237423"/>
			<expression tag="Math.Number" Value="1721636126531240394772345234782356"/>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="1">
		<expression tag="Math.Number" Value="74938557378402302950981353841212336257569523576832850335412654934775308588"/>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Math.Arithmetic.Exponentiation">
			<expression tag="Math.Number" Value="2"/>
			<expression tag="Math.Number" Value="256"/>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="1">
		<expression tag="Math.Number" Value="115792089237316195423570985008687907853269984665640564039457584007913129639936"/>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Typesetting.MultiParagraph">
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="Unfortunately, several mathematical operations such as the division, the exponentiation (in several specific cases), trigonometric or hyperbolic functions (such as sine, cosine, etc.), or transcendental functions (such as logarithms) can produce numbers that cannot be represented in an exact form, because it would require an infinite numbers of digits."/>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="The following are well known examples of values that would require an infinite number of digits, if they were represented numerically:"/>
			</expression>
			<expression tag="Typesetting.BulletedList">
				<expression tag="Typesetting.Paragraph">
					<expression tag="String.Text" Value="The result of the division 1 ÷ 3. A truncated representation could be "/>
					<expression tag="Math.Number" Value="0.3333333333"/>
				</expression>
				<expression tag="Typesetting.Paragraph">
					<expression tag="String.Text" Value="π, the ratio of a circle's circumference to its diameter. A truncated representation would be"/>
					<expression tag="Math.Number" Value="3.141592654"/>
				</expression>
				<expression tag="Typesetting.Paragraph">
					<expression tag="String.Text" Value="The length of the diagonals of a 1 × 1 square, which is "/>
					<expression tag="Math.Arithmetic.SquareRoot">
						<expression tag="Math.Number" Value="2"/>
					</expression>
					<expression tag="String.Text" Value=" with a truncated representation"/>
					<expression tag="Math.Number" Value="1.414213562"/>
				</expression>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="If you make the division 1 ÷ 3 in a calculator, you surely will get something like &quot;0.3333333333&quot; (the number of 3's depends of the precision supported by the calculator). This result is not exact, because if is later multiplied by 3, you might not get back the number 1, but something like &quot;0.9999999999&quot;. It is said that truncating or rounding a number with infinite representation up to a finite number of digits does not preserve accuracy. This is because the correct answer has an infinite number of digits, but this is not manageable by computers."/>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="So, is there a way to represent the result of the division 1 ÷ 3 as an exact form? Yes, it is just the fraction"/>
				<expression tag="Math.Arithmetic.Division">
					<expression tag="Math.Number" Value="1"/>
					<expression tag="Math.Number" Value="3"/>
				</expression>
				<expression tag="String.Text" Value=". Is there a form to represent the number π without lossing information? It is precisely π, this is why it was invented. Is there a way to represent"/>
				<expression tag="Math.Arithmetic.SquareRoot">
					<expression tag="Math.Number" Value="2"/>
				</expression>
				<expression tag="String.Text" Value="using a finite set of symbols? Yes, it is precisely"/>
				<expression tag="Math.Arithmetic.SquareRoot">
					<expression tag="Math.Number" Value="2"/>
				</expression>
				<expression tag="String.Text" Value="."/>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="These representations are exact and they preserve accuracy. They are also known as"/>
				<expression tag="Typesetting.BoldChunk">
					<expression tag="String.Text" Value="symbolic"/>
				</expression>
				<expression tag="String.Text" Value="or"/>
				<expression tag="Typesetting.BoldChunk">
					<expression tag="String.Text" Value="algebraic"/>
				</expression>
				<expression tag="String.Text" Value=", and they are very common in symbolic languages such as Fōrmulæ."/>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="Then, in Fōrmulæ:"/>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Math.Arithmetic.Division">
			<expression tag="Math.Number" Value="1"/>
			<expression tag="Math.Number" Value="3"/>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="1">
		<expression tag="Math.Arithmetic.Division">
			<expression tag="Math.Number" Value="1"/>
			<expression tag="Math.Number" Value="3"/>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Math.Constant.Pi"/>
	</expression>
	<expression tag="Formulae.Script.Row" type="1">
		<expression tag="Math.Constant.Pi"/>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Math.Arithmetic.SquareRoot">
			<expression tag="Math.Number" Value="2"/>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="1">
		<expression tag="Math.Arithmetic.SquareRoot">
			<expression tag="Math.Number" Value="2"/>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Typesetting.MultiParagraph">
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="This is so because they already are in their exact forms."/>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="Hence they preserve accuracy:"/>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Math.Arithmetic.Multiplication">
			<expression tag="Math.Arithmetic.Division">
				<expression tag="Math.Number" Value="1"/>
				<expression tag="Math.Number" Value="3"/>
			</expression>
			<expression tag="Math.Number" Value="3"/>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="1">
		<expression tag="Math.Number" Value="1"/>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Typesetting.Paragraph">
			<expression tag="String.Text" Value="Now, let us do the following operation:"/>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Math.Arithmetic.Division">
			<expression tag="Math.Number" Value="6"/>
			<expression tag="Math.Number" Value="9"/>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="1">
		<expression tag="Math.Arithmetic.Division">
			<expression tag="Math.Number" Value="2"/>
			<expression tag="Math.Number" Value="3"/>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Typesetting.MultiParagraph">
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="Although the input expression "/>
				<expression tag="Math.Arithmetic.Division">
					<expression tag="Math.Number" Value="6"/>
					<expression tag="Math.Number" Value="9"/>
				</expression>
				<expression tag="String.Text" Value=" is exact, there is another simpler expression having the same mathematical value: "/>
				<expression tag="Math.Arithmetic.Division">
					<expression tag="Math.Number" Value="2"/>
					<expression tag="Math.Number" Value="3"/>
				</expression>
				<expression tag="String.Text" Value=" (because they are"/>
				<expression tag="Internet.UniformResourceLocator" Value="https://en.wikipedia.org/wiki/Fraction#Equivalent_fractions" Description="equivalent fractions"/>
				<expression tag="String.Text" Value="), in fact the fraction "/>
				<expression tag="Math.Arithmetic.Division">
					<expression tag="Math.Number" Value="6"/>
					<expression tag="Math.Number" Value="9"/>
				</expression>
				<expression tag="String.Text" Value=" has infinitely many equivalent fractions, but the simplest one is "/>
				<expression tag="Math.Arithmetic.Division">
					<expression tag="Math.Number" Value="2"/>
					<expression tag="Math.Number" Value="3"/>
				</expression>
				<expression tag="String.Text" Value="."/>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="Fōrmulæ tries to give the"/>
				<expression tag="Typesetting.BoldChunk">
					<expression tag="String.Text" Value="exact"/>
				</expression>
				<expression tag="String.Text" Value="and"/>
				<expression tag="Typesetting.BoldChunk">
					<expression tag="String.Text" Value="simplest"/>
				</expression>
				<expression tag="String.Text" Value="result."/>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="See the following examples:"/>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Math.Arithmetic.Division">
			<expression tag="Math.Number" Value="20"/>
			<expression tag="Math.Number" Value="5"/>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="1">
		<expression tag="Math.Number" Value="4"/>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Math.Arithmetic.Addition">
			<expression tag="Math.Arithmetic.Division">
				<expression tag="Math.Number" Value="2"/>
				<expression tag="Math.Number" Value="3"/>
			</expression>
			<expression tag="Math.Arithmetic.Division">
				<expression tag="Math.Number" Value="4"/>
				<expression tag="Math.Number" Value="3"/>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="1">
		<expression tag="Math.Number" Value="2"/>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Math.Arithmetic.Addition">
			<expression tag="Math.Arithmetic.Division">
				<expression tag="Math.Number" Value="2"/>
				<expression tag="Math.Number" Value="6"/>
			</expression>
			<expression tag="Math.Arithmetic.Division">
				<expression tag="Math.Number" Value="13"/>
				<expression tag="Math.Number" Value="6"/>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="1">
		<expression tag="Math.Arithmetic.Division">
			<expression tag="Math.Number" Value="5"/>
			<expression tag="Math.Number" Value="2"/>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Typesetting.Paragraph">
			<expression tag="String.Text" Value="Fōrmulæ is able to compute expressions with many operations:"/>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Math.Arithmetic.Addition">
			<expression tag="Math.Number" Value="34"/>
			<expression tag="Math.Arithmetic.Division">
				<expression tag="Math.Number" Value="876"/>
				<expression tag="Math.Arithmetic.Addition">
					<expression tag="Math.Arithmetic.Division">
						<expression tag="Math.Number" Value="56"/>
						<expression tag="Math.Number" Value="5"/>
					</expression>
					<expression tag="Math.Arithmetic.Negative">
						<expression tag="Math.Arithmetic.Multiplication">
							<expression tag="Math.Number" Value="8"/>
							<expression tag="Math.Arithmetic.Division">
								<expression tag="Math.Number" Value="66"/>
								<expression tag="Math.Number" Value="5"/>
							</expression>
						</expression>
					</expression>
				</expression>
			</expression>
			<expression tag="Math.Arithmetic.Negative">
				<expression tag="Math.Arithmetic.Division">
					<expression tag="Math.Arithmetic.Division">
						<expression tag="Math.Number" Value="2"/>
						<expression tag="Math.Arithmetic.Addition">
							<expression tag="Math.Number" Value="10"/>
							<expression tag="Math.Arithmetic.Negative">
								<expression tag="Math.Arithmetic.Division">
									<expression tag="Math.Number" Value="3"/>
									<expression tag="Math.Number" Value="4"/>
								</expression>
							</expression>
							<expression tag="Math.Number" Value="1"/>
						</expression>
					</expression>
					<expression tag="Math.Number" Value="5"/>
				</expression>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="1">
		<expression tag="Math.Arithmetic.Division">
			<expression tag="Math.Number" Value="597041"/>
			<expression tag="Math.Number" Value="24190"/>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Typesetting.Paragraph">
			<expression tag="String.Text" Value="Notice that Fōrmulæ will try to give an exact number as result, when it is possible:"/>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Math.Arithmetic.SquareRoot">
			<expression tag="Math.Number" Value="81"/>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="1">
		<expression tag="Math.Number" Value="9"/>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Math.Arithmetic.SquareRoot">
			<expression tag="Math.Number" Value="10"/>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="1">
		<expression tag="Math.Arithmetic.SquareRoot">
			<expression tag="Math.Number" Value="10"/>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Typesetting.MultiParagraph">
			<expression tag="Typesetting.Paragraph">
				<expression tag="Typesetting.BoldChunk">
					<expression tag="String.Text" Value="Significant digits"/>
				</expression>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="There are two fields where the term &quot;significant digits&quot; is used:"/>
			</expression>
			<expression tag="Typesetting.BulletedList">
				<expression tag="Typesetting.Paragraph">
					<expression tag="String.Text" Value="In measurement theory. It is also known as &quot;significant figures&quot;."/>
				</expression>
				<expression tag="Typesetting.Paragraph">
					<expression tag="String.Text" Value="In computer science. It is related with the minimum information required to store a number. It is the meaning to be used here."/>
				</expression>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="Informally, they are the digits of the number after removing both leading and trailing zeros. Formally, they are the digits of the"/>
				<expression tag="String.Text" Value="mantissa,"/>
				<expression tag="String.Text" Value="when the number is represented in"/>
				<expression tag="String.Text" Value="normalized scientific notation. Zero has no significant digits."/>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="We are not particularly interested in which digits they are, but how many they are."/>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="The"/>
				<expression tag="Typesetting.ItalicChunk">
					<expression tag="String.Text" Value="SignificantDigits(number)"/>
				</expression>
				<expression tag="String.Text" Value="expression returns the"/>
				<expression tag="Typesetting.BoldChunk">
					<expression tag="String.Text" Value="number"/>
				</expression>
				<expression tag="String.Text" Value="of significant digits of the number provided as argument."/>
			</expression>
			<expression tag="Typesetting.Centering">
				<expression tag="List.Table">
					<expression tag="List.List">
						<expression tag="List.List">
							<expression tag="String.Text" Value="Number"/>
							<expression tag="String.Text" Value="Significant digits"/>
						</expression>
						<expression tag="List.List">
							<expression tag="Math.Number" Value="34.567"/>
							<expression tag="Math.Number" Value="5"/>
						</expression>
						<expression tag="List.List">
							<expression tag="Math.Number" Value="12.00013"/>
							<expression tag="Math.Number" Value="7"/>
						</expression>
						<expression tag="List.List">
							<expression tag="Math.Number" Value="25"/>
							<expression tag="Math.Number" Value="2"/>
						</expression>
						<expression tag="List.List">
							<expression tag="Math.Number" Value="250"/>
							<expression tag="Math.Number" Value="2"/>
						</expression>
						<expression tag="List.List">
							<expression tag="Math.Number" Value="2500000"/>
							<expression tag="Math.Number" Value="2"/>
						</expression>
						<expression tag="List.List">
							<expression tag="Math.Number" Value="0.0002048"/>
							<expression tag="Math.Number" Value="4"/>
						</expression>
					</expression>
				</expression>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Typesetting.MultiParagraph">
			<expression tag="Typesetting.Paragraph">
				<expression tag="Typesetting.BoldChunk">
					<expression tag="String.Text" Value="Precision"/>
				</expression>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="As it was said before, there are exact expression, such as"/>
				<expression tag="Math.Arithmetic.Division">
					<expression tag="Math.Number" Value="1"/>
					<expression tag="Math.Number" Value="3"/>
				</expression>
				<expression tag="String.Text" Value="would require an infinite number of digits when represented as a decimal number (0.333...) so it is necessary to use a finite number of them. This is when the concept of"/>
				<expression tag="Typesetting.BoldChunk">
					<expression tag="String.Text" Value="precision"/>
				</expression>
				<expression tag="String.Text" Value="arises. It is said that a operation is performed with a"/>
				<expression tag="Typesetting.ItalicChunk">
					<expression tag="String.Text" Value="precision"/>
				</expression>
				<expression tag="String.Text" Value="of"/>
				<expression tag="Typesetting.ItalicChunk">
					<expression tag="String.Text" Value="n"/>
				</expression>
				<expression tag="String.Text" Value="digits if all the calculation involved are performed using"/>
				<expression tag="Typesetting.BoldChunk">
					<expression tag="String.Text" Value="at most"/>
				</expression>
				<expression tag="Typesetting.ItalicChunk">
					<expression tag="String.Text" Value="n"/>
				</expression>
				<expression tag="String.Text" Value="significant digits. So, the operation of converting the exact expression"/>
				<expression tag="Math.Arithmetic.Division">
					<expression tag="Math.Number" Value="1"/>
					<expression tag="Math.Number" Value="3"/>
				</expression>
				<expression tag="String.Text" Value="to a decimal number, using 5-digit precision produces the number 0.33333."/>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="The definition says &quot;at most&quot; because sometimes an operation produces a result with less significant digits that the precision specifies, for example the addition of 1.234 (4 significant digits) and 3.766 (4 significant digits) is equal to 5 (1 significan digit)."/>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Math.Arithmetic.GetPrecision"/>
	</expression>
	<expression tag="Formulae.Script.Row" type="1">
		<expression tag="Math.Number" Value="20"/>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Typesetting.MultiParagraph">
			<expression tag="Typesetting.Paragraph">
				<expression tag="Typesetting.BoldChunk">
					<expression tag="String.Text" Value="Rounding"/>
				</expression>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="Rounding refers to subtitute a number for another, which is an approximation of the former."/>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="In the previous example, the conversion of"/>
				<expression tag="Math.Arithmetic.Division">
					<expression tag="Math.Number" Value="1"/>
					<expression tag="Math.Number" Value="3"/>
				</expression>
				<expression tag="String.Text" Value="to a decimal number with 5-digit precision  is 0.33333.  However, what is the result of the conversion from"/>
				<expression tag="Math.Arithmetic.Division">
					<expression tag="Math.Number" Value="2"/>
					<expression tag="Math.Number" Value="3"/>
				</expression>
				<expression tag="String.Text" Value="(also with 5-digit precision)? 0.66666  or 0.66667 ? The decision depends of the"/>
				<expression tag="Typesetting.ItalicChunk">
					<expression tag="String.Text" Value="rounding mode"/>
				</expression>
				<expression tag="String.Text" Value="being used."/>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="As you can see, the decision is between two numbers. The rounding mode determines which of these two numbers is selected, acording to the following criteria:"/>
			</expression>
			<expression tag="Typesetting.BulletedList">
				<expression tag="Typesetting.Paragraph">
					<expression tag="Math.Arithmetic.RoundingMode.TowardsZero"/>
					<expression tag="String.Text" Value=": The selected value is the closest to zero. This is also commonly known as the"/>
					<expression tag="Typesetting.ItalicChunk">
						<expression tag="String.Text" Value="Truncation"/>
					</expression>
					<expression tag="String.Text" Value="operation."/>
				</expression>
				<expression tag="Typesetting.Paragraph">
					<expression tag="Math.Arithmetic.RoundingMode.AwayFromZero"/>
					<expression tag="String.Text" Value=": The selected value is the fardest to zero."/>
				</expression>
				<expression tag="Typesetting.Paragraph">
					<expression tag="Math.Arithmetic.RoundingMode.TowardsMinusInfinity"/>
					<expression tag="String.Text" Value=": The selected value is the closest to negative infinite. This is also commonly known as the"/>
					<expression tag="Typesetting.ItalicChunk">
						<expression tag="String.Text" Value="Floor"/>
					</expression>
					<expression tag="String.Text" Value="operation."/>
				</expression>
				<expression tag="Typesetting.Paragraph">
					<expression tag="Math.Arithmetic.RoundingMode.TowardsInfinity"/>
					<expression tag="String.Text" Value=": The selected value is the closest to positive infinite. This is also commonly known as the "/>
					<expression tag="Typesetting.ItalicChunk">
						<expression tag="String.Text" Value="Ceiling"/>
					</expression>
					<expression tag="String.Text" Value="operation."/>
				</expression>
				<expression tag="Typesetting.Paragraph">
					<expression tag="String.Text" Value="Rounding to nearest."/>
					<expression tag="String.Text" Value=": The selected value is the closest to the original number."/>
				</expression>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="The following table shows the rounding of several exact number, to a rounded value, with 5-digit precision, using each rounding mode:"/>
			</expression>
			<expression tag="Typesetting.Centering">
				<expression tag="List.Table">
					<expression tag="List.List">
						<expression tag="List.List">
							<expression tag="String.Text" Value="Exact number"/>
							<expression tag="Math.Arithmetic.RoundingMode.TowardsZero"/>
							<expression tag="Math.Arithmetic.RoundingMode.AwayFromZero"/>
							<expression tag="Math.Arithmetic.RoundingMode.TowardsMinusInfinity"/>
							<expression tag="Math.Arithmetic.RoundingMode.TowardsInfinity"/>
							<expression tag="String.Text" Value="Rounding to nearest"/>
						</expression>
						<expression tag="List.List">
							<expression tag="Math.Arithmetic.Division">
								<expression tag="Math.Number" Value="1"/>
								<expression tag="Math.Number" Value="3"/>
							</expression>
							<expression tag="Math.Number" Value="0.33333"/>
							<expression tag="Math.Number" Value="0.33334"/>
							<expression tag="Math.Number" Value="0.33333"/>
							<expression tag="Math.Number" Value="0.33334"/>
							<expression tag="Math.Number" Value="0.33333"/>
						</expression>
						<expression tag="List.List">
							<expression tag="Math.Arithmetic.Negative">
								<expression tag="Math.Arithmetic.Division">
									<expression tag="Math.Number" Value="1"/>
									<expression tag="Math.Number" Value="3"/>
								</expression>
							</expression>
							<expression tag="Math.Arithmetic.Negative">
								<expression tag="Math.Number" Value="0.33333"/>
							</expression>
							<expression tag="Math.Arithmetic.Negative">
								<expression tag="Math.Number" Value="0.33334"/>
							</expression>
							<expression tag="Math.Arithmetic.Negative">
								<expression tag="Math.Number" Value="0.33334"/>
							</expression>
							<expression tag="Math.Arithmetic.Negative">
								<expression tag="Math.Number" Value="0.33333"/>
							</expression>
							<expression tag="Math.Arithmetic.Negative">
								<expression tag="Math.Number" Value="0.33333"/>
							</expression>
						</expression>
						<expression tag="List.List">
							<expression tag="Math.Arithmetic.Division">
								<expression tag="Math.Number" Value="2"/>
								<expression tag="Math.Number" Value="3"/>
							</expression>
							<expression tag="Math.Number" Value="0.66666"/>
							<expression tag="Math.Number" Value="0.66667"/>
							<expression tag="Math.Number" Value="0.66666"/>
							<expression tag="Math.Number" Value="0.66667"/>
							<expression tag="Math.Number" Value="0.66667"/>
						</expression>
						<expression tag="List.List">
							<expression tag="Math.Arithmetic.Negative">
								<expression tag="Math.Arithmetic.Division">
									<expression tag="Math.Number" Value="2"/>
									<expression tag="Math.Number" Value="3"/>
								</expression>
							</expression>
							<expression tag="Math.Arithmetic.Negative">
								<expression tag="Math.Number" Value="0.66666"/>
							</expression>
							<expression tag="Math.Arithmetic.Negative">
								<expression tag="Math.Number" Value="0.66667"/>
							</expression>
							<expression tag="Math.Arithmetic.Negative">
								<expression tag="Math.Number" Value="0.66667"/>
							</expression>
							<expression tag="Math.Arithmetic.Negative">
								<expression tag="Math.Number" Value="0.66666"/>
							</expression>
							<expression tag="Math.Arithmetic.Negative">
								<expression tag="Math.Number" Value="0.66667"/>
							</expression>
						</expression>
					</expression>
				</expression>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="When the"/>
				<expression tag="Typesetting.ItalicChunk">
					<expression tag="String.Text" Value="rounding to nearest"/>
				</expression>
				<expression tag="String.Text" Value="mode is used, there are cases where the two values are equidistant to the original value, e.g. when the original valus is 0.1235 and we want to use a 4-digit precision. There are two options: the values 0.123 and 0.124. The"/>
				<expression tag="Typesetting.ItalicChunk">
					<expression tag="String.Text" Value="rounding to nearest"/>
				</expression>
				<expression tag="String.Text" Value="mode is actually 5 modes, according to the following criteria:"/>
			</expression>
			<expression tag="Typesetting.BulletedList">
				<expression tag="Typesetting.Paragraph">
					<expression tag="Math.Arithmetic.RoundingMode.Nearest.HalfTowardsZero"/>
					<expression tag="String.Text" Value=": The selected value is the closest to zero."/>
				</expression>
				<expression tag="Typesetting.Paragraph">
					<expression tag="Math.Arithmetic.RoundingMode.Nearest.HalfAwayFromZero"/>
					<expression tag="String.Text" Value=": The selected value is the fardest to zero."/>
				</expression>
				<expression tag="Typesetting.Paragraph">
					<expression tag="Math.Arithmetic.RoundingMode.Nearest.HalfTowardsMinusInfinity"/>
					<expression tag="String.Text" Value=": The selected value is the closest to negative infinite."/>
				</expression>
				<expression tag="Typesetting.Paragraph">
					<expression tag="Math.Arithmetic.RoundingMode.Nearest.HalfTowardsInfinity"/>
					<expression tag="String.Text" Value=": The selected value is the closest to positive infinite."/>
				</expression>
				<expression tag="Typesetting.Paragraph">
					<expression tag="Math.Arithmetic.RoundingMode.Nearest.HalfEven"/>
					<expression tag="String.Text" Value=": The selected value is the one which its last digit is even."/>
				</expression>
			</expression>
			<expression tag="String.Text" Value="The following table shows the rounding of several exact number, to a rounded value, with 4-digit precision, using each rounding mode:"/>
			<expression tag="Typesetting.Centering">
				<expression tag="List.Table">
					<expression tag="List.List">
						<expression tag="List.List">
							<expression tag="String.Text" Value="Number"/>
							<expression tag="Math.Arithmetic.RoundingMode.Nearest.HalfTowardsZero"/>
							<expression tag="Math.Arithmetic.RoundingMode.Nearest.HalfAwayFromZero"/>
							<expression tag="Math.Arithmetic.RoundingMode.Nearest.HalfTowardsMinusInfinity"/>
							<expression tag="Math.Arithmetic.RoundingMode.Nearest.HalfTowardsInfinity"/>
							<expression tag="Math.Arithmetic.RoundingMode.Nearest.HalfEven"/>
						</expression>
						<expression tag="List.List">
							<expression tag="Math.Number" Value="12.345"/>
							<expression tag="Math.Number" Value="12.34"/>
							<expression tag="Math.Number" Value="12.35"/>
							<expression tag="Math.Number" Value="12.34"/>
							<expression tag="Math.Number" Value="12.35"/>
							<expression tag="Math.Number" Value="12.34"/>
						</expression>
						<expression tag="List.List">
							<expression tag="Math.Arithmetic.Negative">
								<expression tag="Math.Number" Value="12.345"/>
							</expression>
							<expression tag="Math.Arithmetic.Negative">
								<expression tag="Math.Number" Value="12.34"/>
							</expression>
							<expression tag="Math.Arithmetic.Negative">
								<expression tag="Math.Number" Value="12.35"/>
							</expression>
							<expression tag="Math.Arithmetic.Negative">
								<expression tag="Math.Number" Value="12.35"/>
							</expression>
							<expression tag="Math.Arithmetic.Negative">
								<expression tag="Math.Number" Value="12.34"/>
							</expression>
							<expression tag="Math.Arithmetic.Negative">
								<expression tag="Math.Number" Value="12.34"/>
							</expression>
						</expression>
						<expression tag="List.List">
							<expression tag="Math.Number" Value="0.0013575"/>
							<expression tag="Math.Number" Value="0.001357"/>
							<expression tag="Math.Number" Value="0.001358"/>
							<expression tag="Math.Number" Value="0.001357"/>
							<expression tag="Math.Number" Value="0.001358"/>
							<expression tag="Math.Number" Value="0.001358"/>
						</expression>
						<expression tag="List.List">
							<expression tag="Math.Arithmetic.Negative">
								<expression tag="Math.Number" Value="0.0013575"/>
							</expression>
							<expression tag="Math.Arithmetic.Negative">
								<expression tag="Math.Number" Value="0.001357"/>
							</expression>
							<expression tag="Math.Arithmetic.Negative">
								<expression tag="Math.Number" Value="0.001358"/>
							</expression>
							<expression tag="Math.Arithmetic.Negative">
								<expression tag="Math.Number" Value="0.001358"/>
							</expression>
							<expression tag="Math.Arithmetic.Negative">
								<expression tag="Math.Number" Value="0.001357"/>
							</expression>
							<expression tag="Math.Arithmetic.Negative">
								<expression tag="Math.Number" Value="0.001358"/>
							</expression>
						</expression>
					</expression>
				</expression>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Math.Arithmetic.GetRoundingMode"/>
	</expression>
	<expression tag="Formulae.Script.Row" type="1">
		<expression tag="Math.Arithmetic.RoundingMode.TowardsZero"/>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Typesetting.MultiParagraph">
			<expression tag="Typesetting.Paragraph">
				<expression tag="Typesetting.BoldChunk">
					<expression tag="String.Text" Value="Overriding accuracy"/>
				</expression>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="There are situations where the user wants to get or manage non-exact values or results."/>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="The accuracy and simplicity is the default behavior that can be overridden. There are two methods to do that."/>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="Typesetting.BoldChunk">
					<expression tag="String.Text" Value="Method 1. Using decimal numbers"/>
				</expression>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="If you specify at least one decimal number in most of the arithmetic operations, it means that you want the result as a decimal number too (and therefore it can be inexact):"/>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Math.Arithmetic.Division">
			<expression tag="Math.Number" Value="1."/>
			<expression tag="Math.Number" Value="2"/>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="1">
		<expression tag="Math.Number" Value="0.5"/>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Math.Arithmetic.Division">
			<expression tag="Math.Number" Value="1"/>
			<expression tag="Math.Number" Value="2."/>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="1">
		<expression tag="Math.Number" Value="0.5"/>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Math.Arithmetic.Division">
			<expression tag="Math.Number" Value="1."/>
			<expression tag="Math.Number" Value="2."/>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="1">
		<expression tag="Math.Number" Value="0.5"/>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Typesetting.MultiParagraph">
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="There are cases (such as the 1 ÷ 3 operation), in which an exact result would have an infinite number of digits, in such a case, the number of digits will be according with the current value of the"/>
				<expression tag="Typesetting.BoldChunk">
					<expression tag="String.Text" Value="maximum precision"/>
				</expression>
				<expression tag="String.Text" Value="."/>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="To know what is the current value of maximum precision:"/>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Math.Arithmetic.GetPrecision"/>
	</expression>
	<expression tag="Formulae.Script.Row" type="1">
		<expression tag="Math.Number" Value="20"/>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Typesetting.Paragraph">
			<expression tag="String.Text" Value="Some of the previous operations can now be performed, with decimal but inexact results:"/>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Math.Arithmetic.Division">
			<expression tag="Math.Number" Value="1."/>
			<expression tag="Math.Number" Value="3"/>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="1">
		<expression tag="Math.Number" Value="0.33333333333333333333"/>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Math.Arithmetic.SquareRoot">
			<expression tag="Math.Number" Value="2."/>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="1">
		<expression tag="Math.Number" Value="1.4142135623730950488"/>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Typesetting.Paragraph">
			<expression tag="String.Text" Value="The name"/>
			<expression tag="Typesetting.ItalicChunk">
				<expression tag="String.Text" Value="maximum precision"/>
			</expression>
			<expression tag="String.Text" Value="is used because if an operation produce a result that requires less precision (than the maximum one), it will be used:"/>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Math.Arithmetic.Addition">
			<expression tag="Math.Number" Value="0.2"/>
			<expression tag="Math.Number" Value="0.3"/>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="1">
		<expression tag="Math.Number" Value="0.5"/>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Math.Arithmetic.Addition">
			<expression tag="Math.Number" Value="0.1125"/>
			<expression tag="Math.Number" Value="0.1125"/>
			<expression tag="Math.Number" Value="0.275"/>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="1">
		<expression tag="Math.Number" Value="0.5"/>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Typesetting.Paragraph">
			<expression tag="String.Text" Value="Notice that when you use decimal numbers, even if the result of the mathematical operation fits as an integer number, the result is always decimal:"/>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Math.Arithmetic.SquareRoot">
			<expression tag="Math.Number" Value="64."/>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="1">
		<expression tag="Math.Number" Value="8."/>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Typesetting.Paragraph">
			<expression tag="String.Text" Value="You can set the value of the maximum precison."/>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Math.Arithmetic.WithPrecision">
			<expression tag="Math.Arithmetic.Division">
				<expression tag="Math.Number" Value="1."/>
				<expression tag="Math.Number" Value="3"/>
			</expression>
			<expression tag="Math.Number" Value="5"/>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="1">
		<expression tag="Math.Number" Value="0.33333"/>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Typesetting.MultiParagraph">
			<expression tag="Typesetting.Paragraph">
				<expression tag="Typesetting.BoldChunk">
					<expression tag="String.Text" Value="Overriding accuracy, method 2. Using the"/>
					<expression tag="Internet.UniformResourceLocator" Value="/?script=reference/Math.Numeric" Description="Numeric"/>
					<expression tag="String.Text" Value="expression"/>
				</expression>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="The"/>
				<expression tag="Internet.UniformResourceLocator" Value="/?script=reference/Math.Numeric" Description="Numeric"/>
				<expression tag="String.Text" Value="expression takes any expression as its input. It converts all the integer numbers into the expression as decimal, and so the operations can be performed as in the first method."/>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="It also convert mathematical constants such as π to numbers, according to the current maximum precision."/>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Math.Numeric">
			<expression tag="Math.Arithmetic.Division">
				<expression tag="Math.Number" Value="1"/>
				<expression tag="Math.Number" Value="3"/>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="1">
		<expression tag="Math.Number" Value="0.33333333333333333333333333333333333333333333333333"/>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Math.Numeric">
			<expression tag="Math.Arithmetic.SquareRoot">
				<expression tag="Math.Number" Value="2"/>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="1">
		<expression tag="Math.Number" Value="1.4142135623730950488016887242096980785696718753769"/>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Math.Numeric">
			<expression tag="Math.Constant.Pi"/>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="1">
		<expression tag="Math.Number" Value="3.1415926535897932384626433832795028841971693993751"/>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Typesetting.Paragraph">
			<expression tag="String.Text" Value="The"/>
			<expression tag="Internet.UniformResourceLocator" Value="/?script=reference/Math.Numeric" Description="Numeric"/>
			<expression tag="String.Text" Value="expression also has a two-parameter version. In this, the second parameter specifies the maximum precision to be used in the calculation of the first expression:"/>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Math.Numeric">
			<expression tag="Math.Arithmetic.Division">
				<expression tag="Math.Number" Value="1"/>
				<expression tag="Math.Number" Value="3"/>
			</expression>
			<expression tag="Math.Number" Value="10"/>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="1">
		<expression tag="Math.Number" Value="0.3333333333"/>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Math.Numeric">
			<expression tag="Math.Arithmetic.SquareRoot">
				<expression tag="Math.Number" Value="2"/>
			</expression>
			<expression tag="Math.Number" Value="100"/>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="1">
		<expression tag="Math.Number" Value="1.414213562373095048801688724209698078569671875376948073176679737990732478462107038850387534327641572"/>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Math.Numeric">
			<expression tag="Math.Constant.Pi"/>
			<expression tag="Math.Number" Value="250"/>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="1">
		<expression tag="Math.Number" Value="3.141592653589793238462643383279502884197169399375105820974944592307816406286208998628034825342117067982148086513282306647093844609550582231725359408128481117450284102701938521105559644622948954930381964428810975665933446128475648233786783165271201909"/>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Typesetting.MultiParagraph">
			<expression tag="Typesetting.Paragraph">
				<expression tag="Typesetting.BoldChunk">
					<expression tag="String.Text" Value="Intoduction to lists"/>
				</expression>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="A lis is a collection of expressions. You can further leran about lists in the"/>
				<expression tag="Internet.UniformResourceLocator" Value="/?script=tutorials/List" Description="Lists"/>
				<expression tag="String.Text" Value="tutorial."/>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="It is not required that elements on a list to be the same type. The following is a list containing both numbers and strings:"/>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Typesetting.Centering">
			<expression tag="List.List">
				<expression tag="Math.Number" Value="1"/>
				<expression tag="String.String" Value="Fōrmulæ"/>
				<expression tag="Math.Arithmetic.Division">
					<expression tag="Math.Number" Value="1"/>
					<expression tag="Math.Number" Value="3"/>
				</expression>
				<expression tag="Math.Arithmetic.Negative">
					<expression tag="Math.Number" Value="847676543223237.32"/>
				</expression>
				<expression tag="String.String" Value="Lorem ipsum"/>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Typesetting.Paragraph">
			<expression tag="String.Text" Value="In a list, all the expressions it contains are sequentially evalauted, from left to right:"/>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="List.List">
			<expression tag="Math.Arithmetic.Addition">
				<expression tag="Math.Number" Value="2"/>
				<expression tag="Math.Number" Value="4"/>
			</expression>
			<expression tag="Math.Arithmetic.Multiplication">
				<expression tag="Math.Number" Value="5"/>
				<expression tag="Math.Number" Value="2"/>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="1">
		<expression tag="List.List">
			<expression tag="Math.Number" Value="6"/>
			<expression tag="Math.Number" Value="10"/>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Typesetting.MultiParagraph">
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="Unlike the"/>
				<expression tag="Internet.UniformResourceLocator" Value="/?script=reference/Math.Arithmetic.SetMaxPrecision" Description="SetMaxPrecision"/>
				<expression tag="String.Text" Value="expression, the precisión applies to the calculation indicated as the first parameter only."/>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="The following expression defines a list, all its elements are evaluated, from left to right:"/>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="List.List">
			<expression tag="Math.Numeric">
				<expression tag="Math.Arithmetic.Division">
					<expression tag="Math.Number" Value="1"/>
					<expression tag="Math.Number" Value="7"/>
				</expression>
				<expression tag="Math.Number" Value="10"/>
			</expression>
			<expression tag="Math.Numeric">
				<expression tag="Math.Arithmetic.Division">
					<expression tag="Math.Number" Value="1"/>
					<expression tag="Math.Number" Value="7"/>
				</expression>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="1">
		<expression tag="List.List">
			<expression tag="Math.Number" Value="0.1428571429"/>
			<expression tag="Math.Number" Value="0.14285714285714285714285714285714285714285714285714"/>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Typesetting.MultiParagraph">
			<expression tag="Typesetting.Paragraph">
				<expression tag="Typesetting.BoldChunk">
					<expression tag="String.Text" Value="Precision"/>
				</expression>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="Previous examples make use of the maximum precision, but what precisely (pun intended) is precison? There seems to be several definitions. The definition we use is equivalent to the number of"/>
				<expression tag="Typesetting.BoldChunk">
					<expression tag="String.Text" Value="significat digits."/>
				</expression>
				<expression tag="String.Text" Value="The number of significat digits of an integer or decimal number is the number of digits the number has, once the trailing and leading zeros are removed."/>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="See the following examples:"/>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Math.Arithmetic.SignificantDigits">
			<expression tag="Math.Number" Value="123"/>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="1">
		<expression tag="Math.Number" Value="3"/>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Math.Arithmetic.SignificantDigits">
			<expression tag="Math.Number" Value="87000"/>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="1">
		<expression tag="Math.Number" Value="2"/>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Math.Arithmetic.SignificantDigits">
			<expression tag="Math.Number" Value="12001"/>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="1">
		<expression tag="Math.Number" Value="5"/>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="List.List">
			<expression tag="Math.Arithmetic.SignificantDigits">
				<expression tag="Math.Number" Value="123.456"/>
			</expression>
			<expression tag="Math.Arithmetic.SignificantDigits">
				<expression tag="Math.Number" Value="123456000000"/>
			</expression>
			<expression tag="Math.Arithmetic.SignificantDigits">
				<expression tag="Math.Number" Value="0.000000000000123456"/>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="1">
		<expression tag="List.List">
			<expression tag="Math.Number" Value="6"/>
			<expression tag="Math.Number" Value="6"/>
			<expression tag="Math.Number" Value="6"/>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Typesetting.Paragraph">
			<expression tag="String.Text" Value="One can think that precision defines how big or small numbers can be used, but it is not true. It is possible to create big or small numbers with few precision:"/>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Math.Arithmetic.SignificantDigits">
			<expression tag="Math.Number" Value="1200000000000000000000000000000000000000000"/>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="1">
		<expression tag="Math.Number" Value="2"/>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Math.Arithmetic.SignificantDigits">
			<expression tag="Math.Number" Value="0.0000000000000000000000000000000000000000000000008"/>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="1">
		<expression tag="Math.Number" Value="1"/>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Typesetting.MultiParagraph">
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="If you are familiar with numbers expressed in"/>
				<expression tag="Internet.UniformResourceLocator" Value="https://en.wikipedia.org/wiki/Scientific_notation" Description="scientific notation,"/>
				<expression tag="String.Text" Value="you will see that precision is the number of digits used for the"/>
				<expression tag="Internet.UniformResourceLocator" Value="https://en.wikipedia.org/wiki/Significand" Description="mantissa,"/>
				<expression tag="String.Text" Value="when the number is represented in such that notation."/>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="So, if you make an operation that involves decimal numbers, and its result exceeds the maximum precision, the number is truncated or rounded, but its magnitud is correct:"/>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Math.Numeric">
			<expression tag="Math.Arithmetic.Addition">
				<expression tag="Math.Number" Value="123456"/>
				<expression tag="Math.Number" Value="72.5"/>
			</expression>
			<expression tag="Math.Number" Value="3"/>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="1">
		<expression tag="Math.Number" Value="124000."/>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Typesetting.Paragraph">
			<expression tag="String.Text" Value="Remenber that the value of maximum precision applies to operations on decimal numbers, but not for integers:"/>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Math.Arithmetic.Exponentiation">
			<expression tag="Math.Number" Value="2"/>
			<expression tag="Math.Number" Value="250"/>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="1">
		<expression tag="Math.Number" Value="1809251394333065553493296640760748560207343510400633813116524750123642650624"/>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Math.Arithmetic.Exponentiation">
			<expression tag="Math.Number" Value="2"/>
			<expression tag="Math.Number" Value="250."/>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="1">
		<expression tag="Math.Number" Value="1809251394333065553493296640760748560207343510400600000000000000000000000000."/>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Typesetting.Paragraph">
			<expression tag="String.Text" Value="ERROR:"/>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Math.Numeric">
			<expression tag="Math.Arithmetic.Exponentiation">
				<expression tag="Math.Number" Value="2"/>
				<expression tag="Math.Number" Value="250"/>
			</expression>
			<expression tag="Math.Number" Value="10"/>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="1">
		<expression tag="Math.Number" Value="1809251394333065553493296640760748560207343510400633813116524750123642650624."/>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Typesetting.MultiParagraph">
			<expression tag="Typesetting.Paragraph">
				<expression tag="Typesetting.BoldChunk">
					<expression tag="String.Text" Value="Representation of expressions as trees"/>
				</expression>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="Fōrmulæ"/>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="The expression 2 + 3, when seen as a tree is:"/>
			</expression>
			<expression tag="Typesetting.Centering">
				<expression tag="Diagramming.Tree" Expanded="True">
					<expression tag="String.Text" Value="+"/>
					<expression tag="Diagramming.Tree" Expanded="True">
						<expression tag="Math.Number" Value="2"/>
					</expression>
					<expression tag="Diagramming.Tree" Expanded="True">
						<expression tag="Math.Number" Value="3"/>
					</expression>
				</expression>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="For a more complex example, the tree representation of the expression"/>
				<expression tag="Math.Arithmetic.Division">
					<expression tag="Math.Arithmetic.SquareRoot">
						<expression tag="Math.Number" Value="5"/>
					</expression>
					<expression tag="Math.Arithmetic.Addition">
						<expression tag="Math.Arithmetic.Exponentiation">
							<expression tag="Math.Number" Value="3"/>
							<expression tag="Math.Number" Value="2"/>
						</expression>
						<expression tag="Math.Number" Value="8"/>
					</expression>
				</expression>
				<expression tag="String.Text" Value="is:"/>
			</expression>
			<expression tag="Typesetting.Centering">
				<expression tag="Diagramming.Tree" Expanded="True">
					<expression tag="String.Text" Value="÷"/>
					<expression tag="Diagramming.Tree" Expanded="True">
						<expression tag="String.Text" Value="square root"/>
						<expression tag="Diagramming.Tree" Expanded="True">
							<expression tag="Math.Number" Value="5"/>
						</expression>
					</expression>
					<expression tag="Diagramming.Tree" Expanded="True">
						<expression tag="String.Text" Value="+"/>
						<expression tag="Diagramming.Tree" Expanded="True">
							<expression tag="String.Text" Value="exponentiation"/>
							<expression tag="Diagramming.Tree" Expanded="True">
								<expression tag="Math.Number" Value="3"/>
							</expression>
							<expression tag="Diagramming.Tree" Expanded="True">
								<expression tag="Math.Number" Value="2"/>
							</expression>
						</expression>
						<expression tag="Diagramming.Tree" Expanded="True">
							<expression tag="Math.Number" Value="8"/>
						</expression>
					</expression>
				</expression>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="Typesetting.BoldChunk">
					<expression tag="String.Text" Value="Negative numbers"/>
				</expression>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="You already know that"/>
				<expression tag="Internet.UniformResourceLocator" Value="/?script=reference/Math.Number" Description="Number"/>
				<expression tag="String.Text" Value="expressions can hold integer and decimal numbers. An importat fact is that they cannot hold negative numbers. They can hold either positive numbers or zero."/>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="The way to represent a negative number is using the"/>
				<expression tag="Internet.UniformResourceLocator" Value="/?script=reference/Math.Arithmetic.Negative" Description="negative"/>
				<expression tag="String.Text" Value="expression, which has always a subexpression, in this case the number."/>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="So, the expression to represent the number -5, is (as a tree):"/>
			</expression>
			<expression tag="Typesetting.Centering">
				<expression tag="Diagramming.Tree" Expanded="True">
					<expression tag="String.Text" Value="-"/>
					<expression tag="Diagramming.Tree" Expanded="True">
						<expression tag="Math.Number" Value="5"/>
					</expression>
				</expression>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="The tree for a negative rational number, such as"/>
				<expression tag="Math.Arithmetic.Negative">
					<expression tag="Math.Arithmetic.Division">
						<expression tag="Math.Number" Value="3"/>
						<expression tag="Math.Number" Value="4"/>
					</expression>
				</expression>
				<expression tag="String.Text" Value="is:"/>
			</expression>
			<expression tag="Typesetting.Centering">
				<expression tag="Diagramming.Tree" Expanded="True">
					<expression tag="String.Text" Value="-"/>
					<expression tag="Diagramming.Tree" Expanded="True">
						<expression tag="String.Text" Value="÷"/>
						<expression tag="Diagramming.Tree" Expanded="True">
							<expression tag="Math.Number" Value="3"/>
						</expression>
						<expression tag="Diagramming.Tree" Expanded="True">
							<expression tag="Math.Number" Value="4"/>
						</expression>
					</expression>
				</expression>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Typesetting.MultiParagraph">
			<expression tag="Typesetting.Paragraph">
				<expression tag="Typesetting.BoldChunk">
					<expression tag="String.Text" Value="There is no subtraction"/>
				</expression>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="So, the expression 5 - 3 is an addition, where the second addend is a negative expression, in other words it is 5 + (-3), or as a tree:"/>
			</expression>
			<expression tag="Typesetting.Centering">
				<expression tag="Diagramming.Tree" Expanded="True">
					<expression tag="String.Text" Value="+"/>
					<expression tag="Diagramming.Tree" Expanded="True">
						<expression tag="Math.Number" Value="5"/>
					</expression>
					<expression tag="Diagramming.Tree" Expanded="True">
						<expression tag="String.Text" Value="-"/>
						<expression tag="Diagramming.Tree" Expanded="True">
							<expression tag="Math.Number" Value="3"/>
						</expression>
					</expression>
				</expression>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="Typesetting.BoldChunk">
					<expression tag="String.Text" Value="Rationalization"/>
				</expression>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="How to proceed if having a non-integer decimal number (i.e. 23.45), and wanting to used it in an exact operation?"/>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="One of the most useful tool for it is rationalization. It is the conversion of a decimal number to its rational form, which is exact and preserves accuracy."/>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="The"/>
				<expression tag="Internet.UniformResourceLocator" Value="/?script=reference/Math.Arithmetic.Rationalize" Description="Rationalize"/>
				<expression tag="String.Text" Value="expression reduces a decimal number to its rational equivalent expression. see the following examples:"/>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Math.Arithmetic.Rationalize">
			<expression tag="Math.Number" Value="0.25"/>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="1">
		<expression tag="Math.Arithmetic.Division">
			<expression tag="Math.Number" Value="1"/>
			<expression tag="Math.Number" Value="4"/>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Math.Arithmetic.Rationalize">
			<expression tag="Math.Number" Value="4.875"/>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="1">
		<expression tag="Math.Arithmetic.Division">
			<expression tag="Math.Number" Value="39"/>
			<expression tag="Math.Number" Value="8"/>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Typesetting.MultiParagraph">
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="Sometimes, we have a number that has infinitely many decimal digits, but they are periodic, this is, there is a pattern that repeats indefinitely, such as 0.3333333333... It is common to represent the repeating set of digits with a line over them, for example 0.0012636363... = 0.00126̅3̅"/>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="The Rationalize expression has a two-parameter form. The first expression is the number to convert expressed a String, and the second one is the number of repeating digits, at the end of such that String. This number must be less or equal to the number of the fractional part of the number."/>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="Let us test the rationalization of 0.3̅ = 0.3333333333..."/>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Math.Arithmetic.Rationalize">
			<expression tag="Math.Number" Value="0.3"/>
			<expression tag="Math.Number" Value="1"/>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="1">
		<expression tag="Math.Arithmetic.Division">
			<expression tag="Math.Number" Value="1"/>
			<expression tag="Math.Number" Value="3"/>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Typesetting.Paragraph">
			<expression tag="String.Text" Value="Example: rationalize the number 12.34567̅8̅ = 12.34567878787878..."/>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Math.Arithmetic.Rationalize">
			<expression tag="Math.Number" Value="12.345678"/>
			<expression tag="Math.Number" Value="2"/>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="1">
		<expression tag="Math.Arithmetic.Division">
			<expression tag="Math.Number" Value="2037037"/>
			<expression tag="Math.Number" Value="165000"/>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Typesetting.Paragraph">
			<expression tag="String.Text" Value="To show that the result is the rational representation of the initial number:"/>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Math.Numeric">
			<expression tag="Math.Arithmetic.Division">
				<expression tag="Math.Number" Value="2037037"/>
				<expression tag="Math.Number" Value="165000"/>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="1">
		<expression tag="Math.Number" Value="12.345678787878787878787878787878787878787878787879"/>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Typesetting.Paragraph">
			<expression tag="String.Text" Value="The following shows that the number 0.9̅ = 0.999999999... is actually the number 1:"/>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Math.Arithmetic.Rationalize">
			<expression tag="Math.Number" Value="0.9"/>
			<expression tag="Math.Number" Value="1"/>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="1">
		<expression tag="Math.Number" Value="1"/>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Typesetting.MultiParagraph">
			<expression tag="Typesetting.Paragraph">
				<expression tag="Typesetting.BoldChunk">
					<expression tag="String.Text" Value="Summation and product"/>
				</expression>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="To calculate 1 + 2 + 3 + … + 100"/>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Math.Arithmetic.Summation">
			<expression tag="Symbolic.Symbol" Name="i"/>
			<expression tag="Symbolic.Symbol" Name="i"/>
			<expression tag="Math.Number" Value="1"/>
			<expression tag="Math.Number" Value="100"/>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="1">
		<expression tag="Math.Number" Value="5050"/>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Math.Arithmetic.Summation">
			<expression tag="Math.Arithmetic.Exponentiation">
				<expression tag="Symbolic.Symbol" Name="x"/>
				<expression tag="Symbolic.Symbol" Name="i"/>
			</expression>
			<expression tag="Symbolic.Symbol" Name="i"/>
			<expression tag="Math.Number" Value="0"/>
			<expression tag="Math.Number" Value="10"/>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="1">
		<expression tag="Math.Arithmetic.Addition">
			<expression tag="Math.Number" Value="1"/>
			<expression tag="Symbolic.Symbol" Name="x"/>
			<expression tag="Math.Arithmetic.Exponentiation">
				<expression tag="Symbolic.Symbol" Name="x"/>
				<expression tag="Math.Number" Value="2"/>
			</expression>
			<expression tag="Math.Arithmetic.Exponentiation">
				<expression tag="Symbolic.Symbol" Name="x"/>
				<expression tag="Math.Number" Value="3"/>
			</expression>
			<expression tag="Math.Arithmetic.Exponentiation">
				<expression tag="Symbolic.Symbol" Name="x"/>
				<expression tag="Math.Number" Value="4"/>
			</expression>
			<expression tag="Math.Arithmetic.Exponentiation">
				<expression tag="Symbolic.Symbol" Name="x"/>
				<expression tag="Math.Number" Value="5"/>
			</expression>
			<expression tag="Math.Arithmetic.Exponentiation">
				<expression tag="Symbolic.Symbol" Name="x"/>
				<expression tag="Math.Number" Value="6"/>
			</expression>
			<expression tag="Math.Arithmetic.Exponentiation">
				<expression tag="Symbolic.Symbol" Name="x"/>
				<expression tag="Math.Number" Value="7"/>
			</expression>
			<expression tag="Math.Arithmetic.Exponentiation">
				<expression tag="Symbolic.Symbol" Name="x"/>
				<expression tag="Math.Number" Value="8"/>
			</expression>
			<expression tag="Math.Arithmetic.Exponentiation">
				<expression tag="Symbolic.Symbol" Name="x"/>
				<expression tag="Math.Number" Value="9"/>
			</expression>
			<expression tag="Math.Arithmetic.Exponentiation">
				<expression tag="Symbolic.Symbol" Name="x"/>
				<expression tag="Math.Number" Value="10"/>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Math.Arithmetic.Product">
			<expression tag="Symbolic.Symbol" Name="i"/>
			<expression tag="Symbolic.Symbol" Name="i"/>
			<expression tag="Math.Number" Value="1"/>
			<expression tag="Math.Number" Value="50"/>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="1">
		<expression tag="Math.Number" Value="30414093201713378043612608166064768844377641568960512000000000000"/>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Math.Arithmetic.Factorial">
			<expression tag="Math.Number" Value="50"/>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="1">
		<expression tag="Math.Number" Value="30414093201713378043612608166064768844377641568960512000000000000"/>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Typesetting.MultiParagraph">
			<expression tag="Typesetting.Paragraph">
				<expression tag="Typesetting.BoldChunk">
					<expression tag="String.Text" Value="Sign of a number"/>
				</expression>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="The"/>
				<expression tag="Internet.UniformResourceLocator" Value="/?script=reference/Math.Arithmetic.Sign" Description="Sign"/>
				<expression tag="String.Text" Value="expression corresponds to the"/>
				<expression tag="Internet.UniformResourceLocator" Value="https://en.wikipedia.org/wiki/Sign_function" Description="sign function,"/>
				<expression tag="String.Text" Value="it returns the sign of the number passed as argument."/>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="In the following example, we are using a"/>
				<expression tag="Internet.UniformResourceLocator" Value="/?script=reference/List.CreateTable" Description="CreateTable"/>
				<expression tag="String.Text" Value="expression, for dinamically creation of a table. You can learn more about it in the"/>
				<expression tag="Internet.UniformResourceLocator" Value="/?script=tutorials/List" Description="Lists"/>
				<expression tag="String.Text" Value="tutorial."/>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="List.CreateTable">
			<expression tag="List.List">
				<expression tag="Symbolic.Symbol" Name="x"/>
				<expression tag="Math.Arithmetic.Sign">
					<expression tag="Symbolic.Symbol" Name="x"/>
				</expression>
			</expression>
			<expression tag="Symbolic.Symbol" Name="x"/>
			<expression tag="List.List">
				<expression tag="Math.Number" Value="3.45"/>
				<expression tag="Math.Arithmetic.Negative">
					<expression tag="Math.Number" Value="70.98"/>
				</expression>
				<expression tag="Math.Number" Value="0"/>
				<expression tag="Math.Arithmetic.Negative">
					<expression tag="Math.Arithmetic.Division">
						<expression tag="Math.Number" Value="3"/>
						<expression tag="Math.Number" Value="4"/>
					</expression>
				</expression>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="1">
		<expression tag="List.Table">
			<expression tag="List.List">
				<expression tag="List.List">
					<expression tag="Symbolic.Symbol" Name="x"/>
					<expression tag="Math.Arithmetic.Sign">
						<expression tag="Symbolic.Symbol" Name="x"/>
					</expression>
				</expression>
				<expression tag="List.List">
					<expression tag="Math.Number" Value="3.45"/>
					<expression tag="Math.Number" Value="1"/>
				</expression>
				<expression tag="List.List">
					<expression tag="Math.Arithmetic.Negative">
						<expression tag="Math.Number" Value="70.98"/>
					</expression>
					<expression tag="Math.Arithmetic.Negative">
						<expression tag="Math.Number" Value="1"/>
					</expression>
				</expression>
				<expression tag="List.List">
					<expression tag="Math.Number" Value="0"/>
					<expression tag="Math.Number" Value="0"/>
				</expression>
				<expression tag="List.List">
					<expression tag="Math.Arithmetic.Negative">
						<expression tag="Math.Arithmetic.Division">
							<expression tag="Math.Number" Value="3"/>
							<expression tag="Math.Number" Value="4"/>
						</expression>
					</expression>
					<expression tag="Math.Arithmetic.Negative">
						<expression tag="Math.Number" Value="1"/>
					</expression>
				</expression>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Typesetting.MultiParagraph">
			<expression tag="Typesetting.Paragraph">
				<expression tag="Typesetting.BoldChunk">
					<expression tag="String.Text" Value="Absolute value"/>
				</expression>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="The"/>
				<expression tag="Internet.UniformResourceLocator" Value="/?script=reference/Math.Arithmetic.AbsoluteValue" Description="Absolute value"/>
				<expression tag="String.Text" Value="expression, represented as"/>
				<expression tag="Math.Arithmetic.AbsoluteValue">
					<expression tag="Symbolic.Symbol" Name="x"/>
				</expression>
				<expression tag="String.Text" Value="return the"/>
				<expression tag="Internet.UniformResourceLocator" Value="https://en.wikipedia.org/wiki/Absolute_value" Description="absolute value"/>
				<expression tag="String.Text" Value="of its argument."/>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="List.CreateTable">
			<expression tag="List.List">
				<expression tag="Symbolic.Symbol" Name="x"/>
				<expression tag="Math.Arithmetic.Sign">
					<expression tag="Symbolic.Symbol" Name="x"/>
				</expression>
				<expression tag="Math.Arithmetic.AbsoluteValue">
					<expression tag="Symbolic.Symbol" Name="x"/>
				</expression>
			</expression>
			<expression tag="Symbolic.Symbol" Name="x"/>
			<expression tag="List.List">
				<expression tag="Math.Number" Value="3.45"/>
				<expression tag="Math.Arithmetic.Negative">
					<expression tag="Math.Number" Value="70.98"/>
				</expression>
				<expression tag="Math.Number" Value="0"/>
				<expression tag="Math.Arithmetic.Negative">
					<expression tag="Math.Arithmetic.Division">
						<expression tag="Math.Number" Value="3"/>
						<expression tag="Math.Number" Value="4"/>
					</expression>
				</expression>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="1">
		<expression tag="List.Table">
			<expression tag="List.List">
				<expression tag="List.List">
					<expression tag="Symbolic.Symbol" Name="x"/>
					<expression tag="Math.Arithmetic.Sign">
						<expression tag="Symbolic.Symbol" Name="x"/>
					</expression>
					<expression tag="Math.Arithmetic.AbsoluteValue">
						<expression tag="Symbolic.Symbol" Name="x"/>
					</expression>
				</expression>
				<expression tag="List.List">
					<expression tag="Math.Number" Value="3.45"/>
					<expression tag="Math.Number" Value="1"/>
					<expression tag="Math.Number" Value="3.45"/>
				</expression>
				<expression tag="List.List">
					<expression tag="Math.Arithmetic.Negative">
						<expression tag="Math.Number" Value="70.98"/>
					</expression>
					<expression tag="Math.Arithmetic.Negative">
						<expression tag="Math.Number" Value="1"/>
					</expression>
					<expression tag="Math.Number" Value="70.98"/>
				</expression>
				<expression tag="List.List">
					<expression tag="Math.Number" Value="0"/>
					<expression tag="Math.Number" Value="0"/>
					<expression tag="Math.Number" Value="0"/>
				</expression>
				<expression tag="List.List">
					<expression tag="Math.Arithmetic.Negative">
						<expression tag="Math.Arithmetic.Division">
							<expression tag="Math.Number" Value="3"/>
							<expression tag="Math.Number" Value="4"/>
						</expression>
					</expression>
					<expression tag="Math.Arithmetic.Negative">
						<expression tag="Math.Number" Value="1"/>
					</expression>
					<expression tag="Math.Arithmetic.Division">
						<expression tag="Math.Number" Value="3"/>
						<expression tag="Math.Number" Value="4"/>
					</expression>
				</expression>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Typesetting.MultiParagraph">
			<expression tag="Typesetting.Paragraph">
				<expression tag="Typesetting.BoldChunk">
					<expression tag="String.Text" Value="Separation of integer and decimal part"/>
				</expression>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="The"/>
				<expression tag="Internet.UniformResourceLocator" Value="/?script=reference/Math.Arithmetic.IntegerPart" Description="IntegerPart"/>
				<expression tag="String.Text" Value="expression returns the integer part (if any) of the number given as argument. It always return an integer number."/>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="The"/>
				<expression tag="Internet.UniformResourceLocator" Value="/?script=reference/Math.Arithmetic.FractionalPart" Description="FractionalPart"/>
				<expression tag="String.Text" Value="expression returns the fractional part (if any) of the number given as argument. It always returns a decimal number if argument is real, or a rational number if the argument is also rational."/>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="Both expression return always a zero or positive number, regardless of the sign of the argument."/>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="List.CreateTable">
			<expression tag="List.List">
				<expression tag="Symbolic.Symbol" Name="x"/>
				<expression tag="Math.Arithmetic.Sign">
					<expression tag="Symbolic.Symbol" Name="x"/>
				</expression>
				<expression tag="Math.Arithmetic.IntegerPart">
					<expression tag="Symbolic.Symbol" Name="x"/>
				</expression>
				<expression tag="Math.Arithmetic.FractionalPart">
					<expression tag="Symbolic.Symbol" Name="x"/>
				</expression>
			</expression>
			<expression tag="Symbolic.Symbol" Name="x"/>
			<expression tag="List.List">
				<expression tag="Math.Number" Value="3.45"/>
				<expression tag="Math.Arithmetic.Negative">
					<expression tag="Math.Number" Value="70.98"/>
				</expression>
				<expression tag="Math.Number" Value="34"/>
				<expression tag="Math.Number" Value="0"/>
				<expression tag="Math.Arithmetic.Division">
					<expression tag="Math.Number" Value="15"/>
					<expression tag="Math.Number" Value="4"/>
				</expression>
				<expression tag="Math.Arithmetic.Negative">
					<expression tag="Math.Arithmetic.Division">
						<expression tag="Math.Number" Value="3"/>
						<expression tag="Math.Number" Value="4"/>
					</expression>
				</expression>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="1">
		<expression tag="List.Table">
			<expression tag="List.List">
				<expression tag="List.List">
					<expression tag="Symbolic.Symbol" Name="x"/>
					<expression tag="Math.Arithmetic.Sign">
						<expression tag="Symbolic.Symbol" Name="x"/>
					</expression>
					<expression tag="Math.Arithmetic.IntegerPart">
						<expression tag="Symbolic.Symbol" Name="x"/>
					</expression>
					<expression tag="Math.Arithmetic.FractionalPart">
						<expression tag="Symbolic.Symbol" Name="x"/>
					</expression>
				</expression>
				<expression tag="List.List">
					<expression tag="Math.Number" Value="3.45"/>
					<expression tag="Math.Number" Value="1"/>
					<expression tag="Math.Number" Value="3"/>
					<expression tag="Math.Number" Value="0.45"/>
				</expression>
				<expression tag="List.List">
					<expression tag="Math.Arithmetic.Negative">
						<expression tag="Math.Number" Value="70.98"/>
					</expression>
					<expression tag="Math.Arithmetic.Negative">
						<expression tag="Math.Number" Value="1"/>
					</expression>
					<expression tag="Math.Number" Value="70"/>
					<expression tag="Math.Number" Value="0.98"/>
				</expression>
				<expression tag="List.List">
					<expression tag="Math.Number" Value="34"/>
					<expression tag="Math.Number" Value="1"/>
					<expression tag="Math.Number" Value="34"/>
					<expression tag="Math.Number" Value="0."/>
				</expression>
				<expression tag="List.List">
					<expression tag="Math.Number" Value="0"/>
					<expression tag="Math.Number" Value="0"/>
					<expression tag="Math.Number" Value="0"/>
					<expression tag="Math.Number" Value="0."/>
				</expression>
				<expression tag="List.List">
					<expression tag="Math.Arithmetic.Division">
						<expression tag="Math.Number" Value="15"/>
						<expression tag="Math.Number" Value="4"/>
					</expression>
					<expression tag="Math.Number" Value="1"/>
					<expression tag="Math.Number" Value="3"/>
					<expression tag="Math.Arithmetic.Division">
						<expression tag="Math.Number" Value="3"/>
						<expression tag="Math.Number" Value="4"/>
					</expression>
				</expression>
				<expression tag="List.List">
					<expression tag="Math.Arithmetic.Negative">
						<expression tag="Math.Arithmetic.Division">
							<expression tag="Math.Number" Value="3"/>
							<expression tag="Math.Number" Value="4"/>
						</expression>
					</expression>
					<expression tag="Math.Arithmetic.Negative">
						<expression tag="Math.Number" Value="1"/>
					</expression>
					<expression tag="Math.Number" Value="0"/>
					<expression tag="Math.Arithmetic.Division">
						<expression tag="Math.Number" Value="3"/>
						<expression tag="Math.Number" Value="4"/>
					</expression>
				</expression>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Typesetting.MultiParagraph">
			<expression tag="Typesetting.Paragraph">
				<expression tag="Typesetting.BoldChunk">
					<expression tag="String.Text" Value="Determining categories of numbers"/>
				</expression>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="Fōrmulæ has the following expressions to test numbers to be in the following categories:"/>
			</expression>
			<expression tag="Typesetting.Centering">
				<expression tag="List.Table">
					<expression tag="List.List">
						<expression tag="List.List">
							<expression tag="Visualization.Bold" Value="True" Set="True">
								<expression tag="String.Text" Value="Expression"/>
							</expression>
							<expression tag="Visualization.Bold" Value="True" Set="True">
								<expression tag="Visualization.HorizontalArray">
									<expression tag="String.Text" Value="Returns"/>
									<expression tag="Logic.True"/>
									<expression tag="String.Text" Value="when"/>
								</expression>
							</expression>
						</expression>
						<expression tag="List.List">
							<expression tag="Internet.UniformResourceLocator" Value="/?script=reference/Math.Arithmetic.IsRealNumber" Description="IsRealNumber"/>
							<expression tag="String.Text" Value="Number is integer or decimal, but not rational"/>
						</expression>
						<expression tag="List.List">
							<expression tag="Internet.UniformResourceLocator" Value="/?script=reference/Math.Arithmetic.IsRationalNumber" Description="IsRationalNumber"/>
							<expression tag="String.Text" Value="Number is rational"/>
						</expression>
						<expression tag="List.List">
							<expression tag="Internet.UniformResourceLocator" Value="/?referenc3=Math.Arithmetic.IsIntegerValue" Description="IsIntegerValue"/>
							<expression tag="String.Text" Value="Number is integer or decimal witn no fractional part"/>
						</expression>
						<expression tag="List.List">
							<expression tag="Internet.UniformResourceLocator" Value="/?script=reference/Math.Arithmetic.IsInteger" Description="IsInteger"/>
							<expression tag="String.Text" Value="Number is integer"/>
						</expression>
						<expression tag="List.List">
							<expression tag="Internet.UniformResourceLocator" Value="/?referenc=Math.Arithmetic.IsDecimal" Description="IsDecimal"/>
							<expression tag="String.Text" Value="Number is decimal, even if it has an integer value"/>
						</expression>
						<expression tag="List.List">
							<expression tag="Internet.UniformResourceLocator" Value="/?script=reference/Math.Arithmetic.IsPositiveNumber" Description="IsPositiveNumber"/>
							<expression tag="String.Text" Value="Number is a positive integer, decimal or rational"/>
						</expression>
						<expression tag="List.List">
							<expression tag="Internet.UniformResourceLocator" Value="/?script=reference/Math.Arithmetic.IsNegativeNumber" Description="IsNegativeNumber"/>
							<expression tag="String.Text" Value="Number is a negative integer, decimal or rational"/>
						</expression>
						<expression tag="List.List">
							<expression tag="Internet.UniformResourceLocator" Value="/?referenc=Math.Arithmetic.IsNumberZero" Description="IsNumberZero"/>
							<expression tag="String.Text" Value="Number is integer or decimal zero"/>
						</expression>
					</expression>
				</expression>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="Notice that zero is neither positive nor negative."/>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="List.CreateTable">
			<expression tag="List.List">
				<expression tag="Symbolic.Symbol" Name="x"/>
				<expression tag="Math.Arithmetic.IsRealNumber">
					<expression tag="Symbolic.Symbol" Name="x"/>
				</expression>
				<expression tag="Math.Arithmetic.IsRationalNumber">
					<expression tag="Symbolic.Symbol" Name="x"/>
				</expression>
				<expression tag="Math.Arithmetic.IsIntegerValue">
					<expression tag="Symbolic.Symbol" Name="x"/>
				</expression>
				<expression tag="Math.Arithmetic.IsInteger">
					<expression tag="Symbolic.Symbol" Name="x"/>
				</expression>
				<expression tag="Math.Arithmetic.IsDecimal">
					<expression tag="Symbolic.Symbol" Name="x"/>
				</expression>
				<expression tag="Math.Arithmetic.IsPositiveNumber">
					<expression tag="Symbolic.Symbol" Name="x"/>
				</expression>
				<expression tag="Math.Arithmetic.IsNegativeNumber">
					<expression tag="Symbolic.Symbol" Name="x"/>
				</expression>
				<expression tag="Math.Arithmetic.IsNumberZero">
					<expression tag="Symbolic.Symbol" Name="x"/>
				</expression>
			</expression>
			<expression tag="Symbolic.Symbol" Name="x"/>
			<expression tag="List.List">
				<expression tag="Math.Number" Value="3.45"/>
				<expression tag="Math.Arithmetic.Negative">
					<expression tag="Math.Number" Value="70.98"/>
				</expression>
				<expression tag="Math.Number" Value="34"/>
				<expression tag="Math.Number" Value="34."/>
				<expression tag="Math.Number" Value="0"/>
				<expression tag="Math.Number" Value="0."/>
				<expression tag="Math.Arithmetic.Division">
					<expression tag="Math.Number" Value="3"/>
					<expression tag="Math.Number" Value="4"/>
				</expression>
				<expression tag="Math.Arithmetic.Negative">
					<expression tag="Math.Arithmetic.Division">
						<expression tag="Math.Number" Value="5"/>
						<expression tag="Math.Number" Value="8"/>
					</expression>
				</expression>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="1">
		<expression tag="List.Table">
			<expression tag="List.List">
				<expression tag="List.List">
					<expression tag="Symbolic.Symbol" Name="x"/>
					<expression tag="Math.Arithmetic.IsRealNumber">
						<expression tag="Symbolic.Symbol" Name="x"/>
					</expression>
					<expression tag="Math.Arithmetic.IsRationalNumber">
						<expression tag="Symbolic.Symbol" Name="x"/>
					</expression>
					<expression tag="Math.Arithmetic.IsIntegerValue">
						<expression tag="Symbolic.Symbol" Name="x"/>
					</expression>
					<expression tag="Math.Arithmetic.IsInteger">
						<expression tag="Symbolic.Symbol" Name="x"/>
					</expression>
					<expression tag="Math.Arithmetic.IsDecimal">
						<expression tag="Symbolic.Symbol" Name="x"/>
					</expression>
					<expression tag="Math.Arithmetic.IsPositiveNumber">
						<expression tag="Symbolic.Symbol" Name="x"/>
					</expression>
					<expression tag="Math.Arithmetic.IsNegativeNumber">
						<expression tag="Symbolic.Symbol" Name="x"/>
					</expression>
					<expression tag="Math.Arithmetic.IsNumberZero">
						<expression tag="Symbolic.Symbol" Name="x"/>
					</expression>
				</expression>
				<expression tag="List.List">
					<expression tag="Math.Number" Value="3.45"/>
					<expression tag="Logic.True"/>
					<expression tag="Logic.False"/>
					<expression tag="Logic.False"/>
					<expression tag="Logic.False"/>
					<expression tag="Logic.True"/>
					<expression tag="Logic.True"/>
					<expression tag="Logic.False"/>
					<expression tag="Logic.False"/>
				</expression>
				<expression tag="List.List">
					<expression tag="Math.Arithmetic.Negative">
						<expression tag="Math.Number" Value="70.98"/>
					</expression>
					<expression tag="Logic.True"/>
					<expression tag="Logic.False"/>
					<expression tag="Logic.False"/>
					<expression tag="Logic.False"/>
					<expression tag="Logic.True"/>
					<expression tag="Logic.False"/>
					<expression tag="Logic.True"/>
					<expression tag="Logic.False"/>
				</expression>
				<expression tag="List.List">
					<expression tag="Math.Number" Value="34"/>
					<expression tag="Logic.True"/>
					<expression tag="Logic.False"/>
					<expression tag="Logic.True"/>
					<expression tag="Logic.True"/>
					<expression tag="Logic.False"/>
					<expression tag="Logic.True"/>
					<expression tag="Logic.False"/>
					<expression tag="Logic.False"/>
				</expression>
				<expression tag="List.List">
					<expression tag="Math.Number" Value="34."/>
					<expression tag="Logic.True"/>
					<expression tag="Logic.False"/>
					<expression tag="Logic.True"/>
					<expression tag="Logic.False"/>
					<expression tag="Logic.True"/>
					<expression tag="Logic.True"/>
					<expression tag="Logic.False"/>
					<expression tag="Logic.False"/>
				</expression>
				<expression tag="List.List">
					<expression tag="Math.Number" Value="0"/>
					<expression tag="Logic.True"/>
					<expression tag="Logic.False"/>
					<expression tag="Logic.True"/>
					<expression tag="Logic.True"/>
					<expression tag="Logic.False"/>
					<expression tag="Logic.False"/>
					<expression tag="Logic.False"/>
					<expression tag="Logic.True"/>
				</expression>
				<expression tag="List.List">
					<expression tag="Math.Number" Value="0."/>
					<expression tag="Logic.True"/>
					<expression tag="Logic.False"/>
					<expression tag="Logic.True"/>
					<expression tag="Logic.False"/>
					<expression tag="Logic.True"/>
					<expression tag="Logic.False"/>
					<expression tag="Logic.False"/>
					<expression tag="Logic.True"/>
				</expression>
				<expression tag="List.List">
					<expression tag="Math.Arithmetic.Division">
						<expression tag="Math.Number" Value="3"/>
						<expression tag="Math.Number" Value="4"/>
					</expression>
					<expression tag="Logic.False"/>
					<expression tag="Logic.True"/>
					<expression tag="Logic.False"/>
					<expression tag="Logic.False"/>
					<expression tag="Logic.False"/>
					<expression tag="Logic.True"/>
					<expression tag="Logic.False"/>
					<expression tag="Logic.False"/>
				</expression>
				<expression tag="List.List">
					<expression tag="Math.Arithmetic.Negative">
						<expression tag="Math.Arithmetic.Division">
							<expression tag="Math.Number" Value="5"/>
							<expression tag="Math.Number" Value="8"/>
						</expression>
					</expression>
					<expression tag="Logic.False"/>
					<expression tag="Logic.True"/>
					<expression tag="Logic.False"/>
					<expression tag="Logic.False"/>
					<expression tag="Logic.False"/>
					<expression tag="Logic.False"/>
					<expression tag="Logic.True"/>
					<expression tag="Logic.False"/>
				</expression>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Typesetting.Paragraph">
			<expression tag="String.Text" Value="Common pitfalls:"/>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="List.List">
			<expression tag="Math.Arithmetic.IsRationalNumber">
				<expression tag="Math.Arithmetic.Division">
					<expression tag="Math.Number" Value="8"/>
					<expression tag="Math.Number" Value="4"/>
				</expression>
			</expression>
			<expression tag="Math.Arithmetic.IsNegativeNumber">
				<expression tag="Math.Arithmetic.Negative">
					<expression tag="Math.Number" Value="0"/>
				</expression>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="1">
		<expression tag="List.List">
			<expression tag="Logic.False"/>
			<expression tag="Logic.False"/>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Typesetting.Paragraph">
			<expression tag="String.Text" Value="Why?"/>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Typesetting.MultiParagraph">
			<expression tag="Typesetting.Paragraph">
				<expression tag="Typesetting.BoldChunk">
					<expression tag="String.Text" Value="Rounding"/>
				</expression>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="Fōrmulæ has the following expressions related to"/>
				<expression tag="Internet.UniformResourceLocator" Value="https://en.wikipedia.org/wiki/Rounding" Description="rounding:"/>
			</expression>
			<expression tag="Typesetting.BulletedList">
				<expression tag="Typesetting.Paragraph">
					<expression tag="String.Text" Value="The"/>
					<expression tag="Internet.UniformResourceLocator" Value="/?script=reference/Math.Arithmetic.Truncate" Description="Truncate"/>
					<expression tag="String.Text" Value="operation. It is also called"/>
					<expression tag="Typesetting.ItalicChunk">
						<expression tag="String.Text" Value="rounding towards zero"/>
					</expression>
					<expression tag="String.Text" Value="because of if the number is not an integer, it retrieves the immediate integer in the direction of zero."/>
				</expression>
				<expression tag="Typesetting.Paragraph">
					<expression tag="String.Text" Value="The"/>
					<expression tag="Internet.UniformResourceLocator" Value="/?script=reference/Math.Arithmetic.Floor" Description="Floor"/>
					<expression tag="String.Text" Value="operation. It is also called"/>
					<expression tag="Typesetting.ItalicChunk">
						<expression tag="String.Text" Value="rounding towards negative infinity"/>
					</expression>
					<expression tag="String.Text" Value="because of if the number is not an integer, it retrieves the immediate integer in the direction of -∞"/>
					<expression tag="String.Text" Value=". This operation is commonly represented as "/>
					<expression tag="Math.Arithmetic.Floor">
						<expression tag="Symbolic.Symbol" Name="x"/>
					</expression>
				</expression>
				<expression tag="Typesetting.Paragraph">
					<expression tag="String.Text" Value="The"/>
					<expression tag="Internet.UniformResourceLocator" Value="/?script=reference/Math.Arithmetic.Ceiling" Description="Ceiling"/>
					<expression tag="String.Text" Value="operation. It is also called"/>
					<expression tag="Typesetting.ItalicChunk">
						<expression tag="String.Text" Value="rounding towards positive infinity"/>
					</expression>
					<expression tag="String.Text" Value="because of if the number is not an integer, it retrieves the immediate integer in the direction of +∞"/>
					<expression tag="String.Text" Value=". This operation is commonly represented as "/>
					<expression tag="Math.Arithmetic.Ceiling">
						<expression tag="Symbolic.Symbol" Name="x"/>
					</expression>
				</expression>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="List.CreateTable">
			<expression tag="List.List">
				<expression tag="Symbolic.Symbol" Name="x"/>
				<expression tag="Math.Arithmetic.Truncate">
					<expression tag="Symbolic.Symbol" Name="x"/>
				</expression>
				<expression tag="Math.Arithmetic.Floor">
					<expression tag="Symbolic.Symbol" Name="x"/>
				</expression>
				<expression tag="Math.Arithmetic.Ceiling">
					<expression tag="Symbolic.Symbol" Name="x"/>
				</expression>
			</expression>
			<expression tag="Symbolic.Symbol" Name="x"/>
			<expression tag="List.List">
				<expression tag="Math.Number" Value="5"/>
				<expression tag="Math.Number" Value="15.3"/>
				<expression tag="Math.Arithmetic.Negative">
					<expression tag="Math.Number" Value="20.8"/>
				</expression>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="1">
		<expression tag="List.Table">
			<expression tag="List.List">
				<expression tag="List.List">
					<expression tag="Symbolic.Symbol" Name="x"/>
					<expression tag="Math.Arithmetic.Truncate">
						<expression tag="Symbolic.Symbol" Name="x"/>
					</expression>
					<expression tag="Math.Arithmetic.Floor">
						<expression tag="Symbolic.Symbol" Name="x"/>
					</expression>
					<expression tag="Math.Arithmetic.Ceiling">
						<expression tag="Symbolic.Symbol" Name="x"/>
					</expression>
				</expression>
				<expression tag="List.List">
					<expression tag="Math.Number" Value="5"/>
					<expression tag="Math.Number" Value="5"/>
					<expression tag="Math.Number" Value="5"/>
					<expression tag="Math.Number" Value="5"/>
				</expression>
				<expression tag="List.List">
					<expression tag="Math.Number" Value="15.3"/>
					<expression tag="Math.Number" Value="15"/>
					<expression tag="Math.Number" Value="15"/>
					<expression tag="Math.Number" Value="16"/>
				</expression>
				<expression tag="List.List">
					<expression tag="Math.Arithmetic.Negative">
						<expression tag="Math.Number" Value="20.8"/>
					</expression>
					<expression tag="Math.Arithmetic.Negative">
						<expression tag="Math.Number" Value="20"/>
					</expression>
					<expression tag="Math.Arithmetic.Negative">
						<expression tag="Math.Number" Value="21"/>
					</expression>
					<expression tag="Math.Arithmetic.Negative">
						<expression tag="Math.Number" Value="20"/>
					</expression>
				</expression>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Typesetting.MultiParagraph">
			<expression tag="Typesetting.Paragraph">
				<expression tag="Typesetting.BoldChunk">
					<expression tag="String.Text" Value="Rounding to the nearest integer"/>
				</expression>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="Another common method is to retrieve the nearest integer. However, there is a dilemma when the number is at the half between two consecutive integers, in other words, when its fractional part is 0.5, because the two adjacent integers are at the same distance."/>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="There are three methods, according to the decision taken:"/>
			</expression>
			<expression tag="Typesetting.BulletedList">
				<expression tag="Typesetting.Paragraph">
					<expression tag="String.Text" Value="The"/>
					<expression tag="Internet.UniformResourceLocator" Value="/?script=reference/Math.Arithmetic.RoundUp" Description="RoundUp"/>
					<expression tag="String.Text" Value="operation. It is also called"/>
					<expression tag="Typesetting.ItalicChunk">
						<expression tag="String.Text" Value="round half away from zero"/>
					</expression>
					<expression tag="String.Text" Value="because of if the number has fractional part of 0.5, it retrieves the immediate integer in the direction opposite to zero."/>
				</expression>
				<expression tag="Typesetting.Paragraph">
					<expression tag="String.Text" Value="The"/>
					<expression tag="Internet.UniformResourceLocator" Value="/?script=reference/Math.Arithmetic.RoundDown" Description="RoundDown"/>
					<expression tag="String.Text" Value="operation. It is also called"/>
					<expression tag="Typesetting.ItalicChunk">
						<expression tag="String.Text" Value="round half towards zero"/>
					</expression>
					<expression tag="String.Text" Value="because of if the number has fractional part of 0.5, it retrieves the immediate integer in the direction of zero."/>
				</expression>
				<expression tag="Typesetting.Paragraph">
					<expression tag="String.Text" Value="The"/>
					<expression tag="Internet.UniformResourceLocator" Value="/?script=reference/Math.Arithmetic.RoundEven" Description="RoundEven"/>
					<expression tag="String.Text" Value="operation. It is also called"/>
					<expression tag="Typesetting.ItalicChunk">
						<expression tag="String.Text" Value="round half to even"/>
					</expression>
					<expression tag="String.Text" Value="because of if the number has fractional part of 0.5, it retrieves the nearest even integer."/>
				</expression>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Programming.Block" Description="Description" Expanded="True">
			<expression tag="Symbolic.Local">
				<expression tag="Symbolic.Assignment">
					<expression tag="Symbolic.Symbol" Name="values"/>
					<expression tag="List.CreateList">
						<expression tag="Symbolic.Symbol" Name="i"/>
						<expression tag="Symbolic.Symbol" Name="i"/>
						<expression tag="Math.Number" Value="10."/>
						<expression tag="Math.Number" Value="12"/>
						<expression tag="Math.Number" Value="0.5"/>
					</expression>
				</expression>
			</expression>
			<expression tag="Symbolic.Local">
				<expression tag="Symbolic.Assignment">
					<expression tag="Symbolic.Symbol" Name="modes"/>
					<expression tag="List.List">
						<expression tag="Math.Arithmetic.RoundingMode.TowardsZero"/>
						<expression tag="Math.Arithmetic.RoundingMode.AwayFromZero"/>
						<expression tag="Math.Arithmetic.RoundingMode.TowardsMinusInfinity"/>
						<expression tag="Math.Arithmetic.RoundingMode.TowardsInfinity"/>
						<expression tag="Math.Arithmetic.RoundingMode.Nearest.HalfTowardsZero"/>
						<expression tag="Math.Arithmetic.RoundingMode.Nearest.HalfAwayFromZero"/>
						<expression tag="Math.Arithmetic.RoundingMode.Nearest.HalfTowardsMinusInfinity"/>
						<expression tag="Math.Arithmetic.RoundingMode.Nearest.HalfTowardsInfinity"/>
						<expression tag="Math.Arithmetic.RoundingMode.Nearest.HalfEven"/>
					</expression>
				</expression>
			</expression>
			<expression tag="List.CreateCrossedTable">
				<expression tag="Math.Arithmetic.RoundToInteger">
					<expression tag="Symbolic.Symbol" Name="value"/>
					<expression tag="Symbolic.Symbol" Name="mode"/>
				</expression>
				<expression tag="List.List">
					<expression tag="Symbolic.Symbol" Name="value"/>
					<expression tag="Symbolic.Symbol" Name="mode"/>
				</expression>
				<expression tag="List.List">
					<expression tag="Symbolic.Symbol" Name="values"/>
					<expression tag="Symbolic.Symbol" Name="modes"/>
				</expression>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="1">
		<expression tag="List.Table">
			<expression tag="List.List">
				<expression tag="List.List">
					<expression tag="List.List">
						<expression tag="Symbolic.Symbol" Name="value"/>
						<expression tag="Symbolic.Symbol" Name="mode"/>
					</expression>
					<expression tag="Math.Arithmetic.RoundingMode.TowardsZero"/>
					<expression tag="Math.Arithmetic.RoundingMode.AwayFromZero"/>
					<expression tag="Math.Arithmetic.RoundingMode.TowardsMinusInfinity"/>
					<expression tag="Math.Arithmetic.RoundingMode.TowardsInfinity"/>
					<expression tag="Math.Arithmetic.RoundingMode.Nearest.HalfTowardsZero"/>
					<expression tag="Math.Arithmetic.RoundingMode.Nearest.HalfAwayFromZero"/>
					<expression tag="Math.Arithmetic.RoundingMode.Nearest.HalfTowardsMinusInfinity"/>
					<expression tag="Math.Arithmetic.RoundingMode.Nearest.HalfTowardsInfinity"/>
					<expression tag="Math.Arithmetic.RoundingMode.Nearest.HalfEven"/>
				</expression>
				<expression tag="List.List">
					<expression tag="Math.Number" Value="10."/>
					<expression tag="Math.Number" Value="10"/>
					<expression tag="Math.Number" Value="10"/>
					<expression tag="Math.Number" Value="10"/>
					<expression tag="Math.Number" Value="10"/>
					<expression tag="Math.Number" Value="10"/>
					<expression tag="Math.Number" Value="10"/>
					<expression tag="Math.Number" Value="10"/>
					<expression tag="Math.Number" Value="10"/>
					<expression tag="Math.Number" Value="10"/>
				</expression>
				<expression tag="List.List">
					<expression tag="Math.Number" Value="10.5"/>
					<expression tag="Math.Number" Value="10"/>
					<expression tag="Math.Number" Value="11"/>
					<expression tag="Math.Number" Value="10"/>
					<expression tag="Math.Number" Value="11"/>
					<expression tag="Math.Number" Value="10"/>
					<expression tag="Math.Number" Value="11"/>
					<expression tag="Math.Number" Value="10"/>
					<expression tag="Math.Number" Value="11"/>
					<expression tag="Math.Number" Value="10"/>
				</expression>
				<expression tag="List.List">
					<expression tag="Math.Number" Value="11."/>
					<expression tag="Math.Number" Value="11"/>
					<expression tag="Math.Number" Value="11"/>
					<expression tag="Math.Number" Value="11"/>
					<expression tag="Math.Number" Value="11"/>
					<expression tag="Math.Number" Value="11"/>
					<expression tag="Math.Number" Value="11"/>
					<expression tag="Math.Number" Value="11"/>
					<expression tag="Math.Number" Value="11"/>
					<expression tag="Math.Number" Value="11"/>
				</expression>
				<expression tag="List.List">
					<expression tag="Math.Number" Value="11.5"/>
					<expression tag="Math.Number" Value="11"/>
					<expression tag="Math.Number" Value="12"/>
					<expression tag="Math.Number" Value="11"/>
					<expression tag="Math.Number" Value="12"/>
					<expression tag="Math.Number" Value="11"/>
					<expression tag="Math.Number" Value="12"/>
					<expression tag="Math.Number" Value="11"/>
					<expression tag="Math.Number" Value="12"/>
					<expression tag="Math.Number" Value="12"/>
				</expression>
				<expression tag="List.List">
					<expression tag="Math.Number" Value="12."/>
					<expression tag="Math.Number" Value="12"/>
					<expression tag="Math.Number" Value="12"/>
					<expression tag="Math.Number" Value="12"/>
					<expression tag="Math.Number" Value="12"/>
					<expression tag="Math.Number" Value="12"/>
					<expression tag="Math.Number" Value="12"/>
					<expression tag="Math.Number" Value="12"/>
					<expression tag="Math.Number" Value="12"/>
					<expression tag="Math.Number" Value="12"/>
				</expression>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Typesetting.MultiParagraph">
			<expression tag="Typesetting.Paragraph">
				<expression tag="Typesetting.BoldChunk">
					<expression tag="String.Text" Value="Integer division"/>
				</expression>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="Also called"/>
				<expression tag="Typesetting.ItalicChunk">
					<expression tag="String.Text" Value="division with remainder"/>
				</expression>
				<expression tag="String.Text" Value="or more correctly"/>
				<expression tag="Typesetting.ItalicChunk">
					<expression tag="String.Text" Value="Euclidean division,"/>
				</expression>
				<expression tag="String.Text" Value="is the process of dividing one integer (the dividend) by another (the divisor), in a way that produces a quotient and a remainder smaller than the divisor."/>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="List.CreateTable">
			<expression tag="List.List">
				<expression tag="Symbolic.Symbol" Name="a"/>
				<expression tag="Symbolic.Symbol" Name="d"/>
				<expression tag="Math.Arithmetic.Div">
					<expression tag="Symbolic.Symbol" Name="a"/>
					<expression tag="Symbolic.Symbol" Name="d"/>
				</expression>
				<expression tag="Math.Arithmetic.Mod">
					<expression tag="Symbolic.Symbol" Name="a"/>
					<expression tag="Symbolic.Symbol" Name="d"/>
				</expression>
				<expression tag="Math.Arithmetic.DivMod">
					<expression tag="Symbolic.Symbol" Name="a"/>
					<expression tag="Symbolic.Symbol" Name="d"/>
				</expression>
			</expression>
			<expression tag="List.List">
				<expression tag="Symbolic.Symbol" Name="a"/>
				<expression tag="Symbolic.Symbol" Name="d"/>
			</expression>
			<expression tag="List.CartesianExponentiation">
				<expression tag="List.List">
					<expression tag="Math.Number" Value="29"/>
					<expression tag="Math.Number" Value="3"/>
					<expression tag="Math.Number" Value="0"/>
				</expression>
				<expression tag="Math.Number" Value="2"/>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="1">
		<expression tag="List.Table">
			<expression tag="List.List">
				<expression tag="List.List">
					<expression tag="Symbolic.Symbol" Name="a"/>
					<expression tag="Symbolic.Symbol" Name="d"/>
					<expression tag="Math.Arithmetic.Div">
						<expression tag="Symbolic.Symbol" Name="a"/>
						<expression tag="Symbolic.Symbol" Name="d"/>
					</expression>
					<expression tag="Math.Arithmetic.Mod">
						<expression tag="Symbolic.Symbol" Name="a"/>
						<expression tag="Symbolic.Symbol" Name="d"/>
					</expression>
					<expression tag="Math.Arithmetic.DivMod">
						<expression tag="Symbolic.Symbol" Name="a"/>
						<expression tag="Symbolic.Symbol" Name="d"/>
					</expression>
				</expression>
				<expression tag="List.List">
					<expression tag="Math.Number" Value="29"/>
					<expression tag="Math.Number" Value="29"/>
					<expression tag="Math.Number" Value="1"/>
					<expression tag="Math.Number" Value="0"/>
					<expression tag="List.List">
						<expression tag="Math.Number" Value="1"/>
						<expression tag="Math.Number" Value="0"/>
					</expression>
				</expression>
				<expression tag="List.List">
					<expression tag="Math.Number" Value="29"/>
					<expression tag="Math.Number" Value="3"/>
					<expression tag="Math.Number" Value="9"/>
					<expression tag="Math.Number" Value="2"/>
					<expression tag="List.List">
						<expression tag="Math.Number" Value="9"/>
						<expression tag="Math.Number" Value="2"/>
					</expression>
				</expression>
				<expression tag="List.List">
					<expression tag="Math.Number" Value="29"/>
					<expression tag="Math.Number" Value="0"/>
					<expression tag="Math.Infinity"/>
					<expression tag="Math.Infinity"/>
					<expression tag="Math.Infinity"/>
				</expression>
				<expression tag="List.List">
					<expression tag="Math.Number" Value="3"/>
					<expression tag="Math.Number" Value="29"/>
					<expression tag="Math.Number" Value="0"/>
					<expression tag="Math.Number" Value="3"/>
					<expression tag="List.List">
						<expression tag="Math.Number" Value="0"/>
						<expression tag="Math.Number" Value="3"/>
					</expression>
				</expression>
				<expression tag="List.List">
					<expression tag="Math.Number" Value="3"/>
					<expression tag="Math.Number" Value="3"/>
					<expression tag="Math.Number" Value="1"/>
					<expression tag="Math.Number" Value="0"/>
					<expression tag="List.List">
						<expression tag="Math.Number" Value="1"/>
						<expression tag="Math.Number" Value="0"/>
					</expression>
				</expression>
				<expression tag="List.List">
					<expression tag="Math.Number" Value="3"/>
					<expression tag="Math.Number" Value="0"/>
					<expression tag="Math.Infinity"/>
					<expression tag="Math.Infinity"/>
					<expression tag="Math.Infinity"/>
				</expression>
				<expression tag="List.List">
					<expression tag="Math.Number" Value="0"/>
					<expression tag="Math.Number" Value="29"/>
					<expression tag="Math.Number" Value="0"/>
					<expression tag="Math.Number" Value="0"/>
					<expression tag="List.List">
						<expression tag="Math.Number" Value="0"/>
						<expression tag="Math.Number" Value="0"/>
					</expression>
				</expression>
				<expression tag="List.List">
					<expression tag="Math.Number" Value="0"/>
					<expression tag="Math.Number" Value="3"/>
					<expression tag="Math.Number" Value="0"/>
					<expression tag="Math.Number" Value="0"/>
					<expression tag="List.List">
						<expression tag="Math.Number" Value="0"/>
						<expression tag="Math.Number" Value="0"/>
					</expression>
				</expression>
				<expression tag="List.List">
					<expression tag="Math.Number" Value="0"/>
					<expression tag="Math.Number" Value="0"/>
					<expression tag="Math.Infinity"/>
					<expression tag="Math.Infinity"/>
					<expression tag="Math.Infinity"/>
				</expression>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Typesetting.MultiParagraph">
			<expression tag="Typesetting.Paragraph">
				<expression tag="Typesetting.BoldChunk">
					<expression tag="String.Text" Value="Divisibility"/>
				</expression>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="Sometimes, we  just want to know whether a number is divisible by other or not, without knowing either the quotiend or remainder"/>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Math.Arithmetic.Divides">
			<expression tag="Math.Number" Value="7"/>
			<expression tag="Math.Number" Value="28"/>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="1">
		<expression tag="Logic.True"/>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Math.Arithmetic.Divides">
			<expression tag="Math.Number" Value="3"/>
			<expression tag="Math.Number" Value="10"/>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="1">
		<expression tag="Logic.False"/>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Math.Arithmetic.DoesNotDivide">
			<expression tag="Math.Number" Value="5"/>
			<expression tag="Math.Number" Value="77"/>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="1">
		<expression tag="Logic.True"/>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Typesetting.MultiParagraph">
			<expression tag="Typesetting.Paragraph">
				<expression tag="Typesetting.BoldChunk">
					<expression tag="String.Text" Value="Parity"/>
				</expression>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="You can use the"/>
				<expression tag="Internet.UniformResourceLocator" Value="/?script=reference/Math.Arithmetic.Divides" Description="Divides"/>
				<expression tag="String.Text" Value="and"/>
				<expression tag="Internet.UniformResourceLocator" Value="/?script=reference/Math.Arithmetic.DoesNotDivide" Description="DoesNotDivide"/>
				<expression tag="String.Text" Value="to test the parity of a number with the expressions "/>
				<expression tag="Math.Arithmetic.Divides">
					<expression tag="Math.Number" Value="2"/>
					<expression tag="Symbolic.Symbol" Name="x"/>
				</expression>
				<expression tag="String.Text" Value=" and "/>
				<expression tag="Math.Arithmetic.DoesNotDivide">
					<expression tag="Math.Number" Value="2"/>
					<expression tag="Symbolic.Symbol" Name="x"/>
				</expression>
				<expression tag="String.Text" Value=" respectively. However, the parity test is so common that has its own methods, the"/>
				<expression tag="Internet.UniformResourceLocator" Value="/?script=reference/Math.Arithmetic.IsEven" Description="IsEven"/>
				<expression tag="String.Text" Value="and"/>
				<expression tag="Internet.UniformResourceLocator" Value="/?script=reference/Math.Arithmetic.IsOdd" Description="IsOdd"/>
				<expression tag="String.Text" Value="expressions:"/>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Math.Arithmetic.IsEven">
			<expression tag="Math.Number" Value="4456"/>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="1">
		<expression tag="Logic.True"/>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Math.Arithmetic.IsOdd">
			<expression tag="Math.Number" Value="1234"/>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="1">
		<expression tag="Logic.False"/>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Typesetting.Paragraph">
			<expression tag="String.Text" Value="Is"/>
			<expression tag="Internet.UniformResourceLocator" Value="https://en.wikipedia.org/wiki/Parity_of_zero" Description="zero even, odd, neither or both"/>
			<expression tag="String.Text" Value="?"/>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="List.List">
			<expression tag="Math.Arithmetic.IsEven">
				<expression tag="Math.Number" Value="0"/>
			</expression>
			<expression tag="Math.Arithmetic.IsOdd">
				<expression tag="Math.Number" Value="0"/>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="1">
		<expression tag="List.List">
			<expression tag="Logic.True"/>
			<expression tag="Logic.False"/>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Typesetting.MultiParagraph">
			<expression tag="Typesetting.Paragraph">
				<expression tag="Typesetting.BoldChunk">
					<expression tag="String.Text" Value="Primality"/>
				</expression>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="The"/>
				<expression tag="Internet.UniformResourceLocator" Value="/?script=reference/Math.Arithmetic.IsPrime" Description="IsPrime"/>
				<expression tag="String.Text" Value="expression tests whether a given non-negative integer number is prime or not:"/>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="List.CreateTable">
			<expression tag="List.List">
				<expression tag="Symbolic.Symbol" Name="x"/>
				<expression tag="Math.Arithmetic.IsPrime">
					<expression tag="Symbolic.Symbol" Name="x"/>
				</expression>
			</expression>
			<expression tag="Symbolic.Symbol" Name="x"/>
			<expression tag="List.List">
				<expression tag="Math.Number" Value="0"/>
				<expression tag="Math.Number" Value="1"/>
				<expression tag="Math.Number" Value="2"/>
				<expression tag="Math.Number" Value="3"/>
				<expression tag="Math.Number" Value="30"/>
				<expression tag="Math.Number" Value="97"/>
				<expression tag="Math.Number" Value="23782387497"/>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="1">
		<expression tag="List.Table">
			<expression tag="List.List">
				<expression tag="List.List">
					<expression tag="Symbolic.Symbol" Name="x"/>
					<expression tag="Math.Arithmetic.IsPrime">
						<expression tag="Symbolic.Symbol" Name="x"/>
					</expression>
				</expression>
				<expression tag="List.List">
					<expression tag="Math.Number" Value="0"/>
					<expression tag="Logic.False"/>
				</expression>
				<expression tag="List.List">
					<expression tag="Math.Number" Value="1"/>
					<expression tag="Logic.False"/>
				</expression>
				<expression tag="List.List">
					<expression tag="Math.Number" Value="2"/>
					<expression tag="Logic.True"/>
				</expression>
				<expression tag="List.List">
					<expression tag="Math.Number" Value="3"/>
					<expression tag="Logic.True"/>
				</expression>
				<expression tag="List.List">
					<expression tag="Math.Number" Value="30"/>
					<expression tag="Logic.False"/>
				</expression>
				<expression tag="List.List">
					<expression tag="Math.Number" Value="97"/>
					<expression tag="Logic.True"/>
				</expression>
				<expression tag="List.List">
					<expression tag="Math.Number" Value="23782387497"/>
					<expression tag="Logic.False"/>
				</expression>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Typesetting.MultiParagraph">
			<expression tag="Typesetting.Paragraph">
				<expression tag="Typesetting.BoldChunk">
					<expression tag="String.Text" Value="Factorization"/>
				</expression>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="The"/>
				<expression tag="Internet.UniformResourceLocator" Value="/?script=reference/Math.Arithmetic.Factors" Description="Factors"/>
				<expression tag="String.Text" Value="expression retrieves a list of the"/>
				<expression tag="Typesetting.ItalicChunk">
					<expression tag="String.Text" Value="prime"/>
				</expression>
				<expression tag="String.Text" Value="divisors of a non-negative integer number. The multiplication of the elements in the list must produce the original number."/>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Math.Arithmetic.Factors">
			<expression tag="Math.Number" Value="8487322384732998"/>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="1">
		<expression tag="List.List">
			<expression tag="Math.Number" Value="2"/>
			<expression tag="Math.Number" Value="3"/>
			<expression tag="Math.Number" Value="19"/>
			<expression tag="Math.Number" Value="74450196357307"/>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Math.Arithmetic.Multiplication">
			<expression tag="Math.Number" Value="2"/>
			<expression tag="Math.Number" Value="3"/>
			<expression tag="Math.Number" Value="19"/>
			<expression tag="Math.Number" Value="74450196357307"/>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="1">
		<expression tag="Math.Number" Value="8487322384732998"/>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Typesetting.Paragraph">
			<expression tag="String.Text" Value="Sometimes a given prime might appear more than once:"/>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Math.Arithmetic.Factors">
			<expression tag="Math.Number" Value="273763245"/>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="1">
		<expression tag="List.List">
			<expression tag="Math.Number" Value="3"/>
			<expression tag="Math.Number" Value="5"/>
			<expression tag="Math.Number" Value="7"/>
			<expression tag="Math.Number" Value="7"/>
			<expression tag="Math.Number" Value="59"/>
			<expression tag="Math.Number" Value="59"/>
			<expression tag="Math.Number" Value="107"/>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Typesetting.Paragraph">
			<expression tag="String.Text" Value="The factorizaction of a prime number produces a list with the numer as its unique element. Notice that the list does not include the number 1 even when it is a divisor or the given number, because it is not prime."/>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Math.Arithmetic.Factors">
			<expression tag="Math.Number" Value="97"/>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="1">
		<expression tag="List.List">
			<expression tag="Math.Number" Value="97"/>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Typesetting.MultiParagraph">
			<expression tag="Typesetting.Paragraph">
				<expression tag="Typesetting.BoldChunk">
					<expression tag="String.Text" Value="Greatest common divisor (GCD) and least common multiple (LCM)"/>
				</expression>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="Fōrmulæ has expression to get the"/>
				<expression tag="Internet.UniformResourceLocator" Value="https://en.wikipedia.org/wiki/Greatest_common_divisor" Description="greatest common divisor (GCD)"/>
				<expression tag="String.Text" Value="and"/>
				<expression tag="Internet.UniformResourceLocator" Value="https://en.wikipedia.org/wiki/Least_common_multiple" Description="least common multiple (LCM)"/>
				<expression tag="String.Text" Value="of a list of numbers:"/>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Math.Arithmetic.GreatestCommonDivisor">
			<expression tag="List.List">
				<expression tag="Math.Number" Value="109876463"/>
				<expression tag="Math.Number" Value="177777648"/>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="1">
		<expression tag="Math.Number" Value="1234567"/>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Math.Arithmetic.LeastCommonMultiple">
			<expression tag="List.List">
				<expression tag="Math.Number" Value="7325427542343"/>
				<expression tag="Math.Number" Value="99874923879483"/>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="1">
		<expression tag="Math.Number" Value="243875506058725118603816223"/>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Math.Arithmetic.GreatestCommonDivisor">
			<expression tag="List.List">
				<expression tag="Math.Number" Value="12"/>
				<expression tag="Math.Number" Value="23"/>
				<expression tag="Math.Number" Value="34"/>
				<expression tag="Math.Number" Value="45"/>
				<expression tag="Math.Number" Value="56"/>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="1">
		<expression tag="Math.Number" Value="1"/>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Typesetting.MultiParagraph">
			<expression tag="Typesetting.Paragraph">
				<expression tag="Typesetting.BoldChunk">
					<expression tag="String.Text" Value="Special expressions for modular arithmetic"/>
				</expression>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="Internet.UniformResourceLocator" Value="https://en.wikipedia.org/wiki/Modular_arithmetic" Description="Modular arithmetic"/>
				<expression tag="String.Text" Value="is a type of arithmetic for integer numbers, where numbers &quot;wrap around&quot; when reaching a certain value, called the"/>
				<expression tag="Typesetting.ItalicChunk">
					<expression tag="String.Text" Value="modulus."/>
				</expression>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="Most arithmetic operations can be performed in modular arithmetic by using the"/>
				<expression tag="Internet.UniformResourceLocator" Value="/?script=reference/Math.Arithmetic.ModE" Description="Mod"/>
				<expression tag="String.Text" Value="expression after the operation."/>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Math.Arithmetic.Mod">
			<expression tag="Math.Number" Value="15"/>
			<expression tag="Math.Number" Value="12"/>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="1">
		<expression tag="Math.Number" Value="3"/>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Math.Arithmetic.Mod">
			<expression tag="Math.Arithmetic.Addition">
				<expression tag="Math.Number" Value="20"/>
				<expression tag="Math.Number" Value="10"/>
			</expression>
			<expression tag="Math.Number" Value="24"/>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="1">
		<expression tag="Math.Number" Value="6"/>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Typesetting.MultiParagraph">
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="However, in the case of exponentiation, the result (before the application of the"/>
				<expression tag="Internet.UniformResourceLocator" Value="/?script=reference/Math.Arithmetic.ModE" Description="Mod"/>
				<expression tag="String.Text" Value="expression) could be extremely large, or even impossible to perform, (for example, it could require more memory than available), such as the following:"/>
			</expression>
			<expression tag="Typesetting.Centering">
				<expression tag="Math.Arithmetic.Mod">
					<expression tag="Math.Arithmetic.Exponentiation">
						<expression tag="Math.Number" Value="732446324"/>
						<expression tag="Math.Number" Value="948474857"/>
					</expression>
					<expression tag="Math.Number" Value="336745"/>
				</expression>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="The"/>
				<expression tag="Internet.UniformResourceLocator" Value="/?script=reference/Math.Arithmetic.ModularExponentiation" Description="ModularExponentiation"/>
				<expression tag="String.Text" Value="expression uses special algorithms to calculate modular exponentiation. The first parameter is the base, the second one is the exponent, an the last one is the modulus. It calculates the previous operation with no problem:"/>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Math.Arithmetic.ModularExponentiation">
			<expression tag="Math.Number" Value="732446324"/>
			<expression tag="Math.Number" Value="948474857"/>
			<expression tag="Math.Number" Value="336745"/>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="1">
		<expression tag="Math.Number" Value="118084"/>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Typesetting.MultiParagraph">
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="An arithmetic operation that cannot be tranparently performed in modular arithmetic is division. However, the division"/>
				<expression tag="Math.Arithmetic.Mod">
					<expression tag="Math.Arithmetic.Division">
						<expression tag="Symbolic.Symbol" Name="a"/>
						<expression tag="Symbolic.Symbol" Name="b"/>
					</expression>
					<expression tag="Symbolic.Symbol" Name="m"/>
				</expression>
				<expression tag="String.Text" Value="can be seen as the multiplication of"/>
				<expression tag="Symbolic.Symbol" Name="a"/>
				<expression tag="String.Text" Value="with the &quot;modular inverse multiplicative&quot; of"/>
				<expression tag="Symbolic.Symbol" Name="b"/>
				<expression tag="String.Text" Value=" where the modular inverse multiplicative of"/>
				<expression tag="Symbolic.Symbol" Name="x"/>
				<expression tag="String.Text" Value="is the value"/>
				<expression tag="Symbolic.Symbol" Name="x'"/>
				<expression tag="String.Text" Value="that makes"/>
				<expression tag="Relation.Equals">
					<expression tag="Math.Arithmetic.Mod">
						<expression tag="Math.Arithmetic.Multiplication">
							<expression tag="Symbolic.Symbol" Name="x"/>
							<expression tag="Symbolic.Symbol" Name="x'"/>
						</expression>
						<expression tag="Symbolic.Symbol" Name="m"/>
					</expression>
					<expression tag="Math.Number" Value="1"/>
				</expression>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="The"/>
				<expression tag="Internet.UniformResourceLocator" Value="/?script=reference/Math.Arithmetic.ModularMultiplicativeInverse" Description="ModularMultiplicativeInverse"/>
				<expression tag="String.Text" Value="perform such that operation. The first parameter is the number to obtain its inverse, and the second one is the modulo."/>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Math.Arithmetic.ModularMultiplicativeInverse">
			<expression tag="Math.Number" Value="3432832423"/>
			<expression tag="Math.Number" Value="956897977"/>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="1">
		<expression tag="Math.Number" Value="647547319"/>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Math.Arithmetic.Mod">
			<expression tag="Math.Arithmetic.Multiplication">
				<expression tag="Math.Number" Value="3432832423"/>
				<expression tag="Math.Number" Value="647547319"/>
			</expression>
			<expression tag="Math.Number" Value="956897977"/>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="1">
		<expression tag="Math.Number" Value="1"/>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Typesetting.MultiParagraph">
			<expression tag="Typesetting.Paragraph">
				<expression tag="Typesetting.BoldChunk">
					<expression tag="String.Text" Value="Conversion between integer and decimal numbers"/>
				</expression>
			</expression>
			<expression tag="Typesetting.BulletedList">
				<expression tag="Typesetting.Paragraph">
					<expression tag="String.Text" Value="The"/>
					<expression tag="Internet.UniformResourceLocator" Value="/?script=reference/Math.Arithmetic.ToInteger" Description="ToInteger"/>
					<expression tag="String.Text" Value="expression converts a decimal number to an integer number if it has no fractional part. It the number has fractional part it does nothing."/>
				</expression>
				<expression tag="Typesetting.Paragraph">
					<expression tag="String.Text" Value="The"/>
					<expression tag="Internet.UniformResourceLocator" Value="/?script=reference/Math.Arithmetic.ToIfInteger" Description="ToIfInteger"/>
					<expression tag="String.Text" Value="expression converts a decimal number to an integer number if it has no fractional part. It the number has fractional part it is returned as it is."/>
				</expression>
				<expression tag="Typesetting.Paragraph">
					<expression tag="String.Text" Value="The"/>
					<expression tag="Internet.UniformResourceLocator" Value="/?script=reference/Math.Arithmetic.ToDecimal" Description="ToDecimal"/>
					<expression tag="String.Text" Value="expression converts a integer number to decimal. If the number is already a decimal number, it is returned as it is."/>
				</expression>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="List.CreateTable">
			<expression tag="List.List">
				<expression tag="Symbolic.Symbol" Name="x"/>
				<expression tag="Math.Arithmetic.ToInteger">
					<expression tag="Symbolic.Symbol" Name="x"/>
				</expression>
				<expression tag="Math.Arithmetic.ToIfInteger">
					<expression tag="Symbolic.Symbol" Name="x"/>
				</expression>
				<expression tag="Math.Arithmetic.ToDecimal">
					<expression tag="Symbolic.Symbol" Name="x"/>
				</expression>
			</expression>
			<expression tag="Symbolic.Symbol" Name="x"/>
			<expression tag="List.List">
				<expression tag="Math.Number" Value="123"/>
				<expression tag="Math.Number" Value="632."/>
				<expression tag="Math.Number" Value="123.45"/>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="1">
		<expression tag="List.Table">
			<expression tag="List.List">
				<expression tag="List.List">
					<expression tag="Symbolic.Symbol" Name="x"/>
					<expression tag="Math.Arithmetic.ToInteger">
						<expression tag="Symbolic.Symbol" Name="x"/>
					</expression>
					<expression tag="Math.Arithmetic.ToIfInteger">
						<expression tag="Symbolic.Symbol" Name="x"/>
					</expression>
					<expression tag="Math.Arithmetic.ToDecimal">
						<expression tag="Symbolic.Symbol" Name="x"/>
					</expression>
				</expression>
				<expression tag="List.List">
					<expression tag="Math.Number" Value="123"/>
					<expression tag="Math.Number" Value="123"/>
					<expression tag="Math.Number" Value="123"/>
					<expression tag="Math.Number" Value="123."/>
				</expression>
				<expression tag="List.List">
					<expression tag="Math.Number" Value="632."/>
					<expression tag="Math.Number" Value="632"/>
					<expression tag="Math.Number" Value="632"/>
					<expression tag="Math.Number" Value="632."/>
				</expression>
				<expression tag="List.List">
					<expression tag="Math.Number" Value="123.45"/>
					<expression tag="Math.Arithmetic.ToInteger">
						<expression tag="Math.Number" Value="123.45"/>
					</expression>
					<expression tag="Math.Number" Value="123.45"/>
					<expression tag="Math.Number" Value="123.45"/>
				</expression>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Typesetting.MultiParagraph">
			<expression tag="Typesetting.Paragraph">
				<expression tag="Typesetting.BoldChunk">
					<expression tag="String.Text" Value="Conversion from numerical strings"/>
				</expression>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="The"/>
				<expression tag="Internet.UniformResourceLocator" Value="/?script=reference/Math.Arithmetic.ToNumber" Description="ToNumber"/>
				<expression tag="String.Text" Value="expression converts a string to a number."/>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Math.Arithmetic.ToNumber">
			<expression tag="String.String" Value="123.45"/>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="1">
		<expression tag="Math.Number" Value="123.45"/>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Typesetting.Paragraph">
			<expression tag="String.Text" Value="The"/>
			<expression tag="Internet.UniformResourceLocator" Value="/?script=reference/Math.Arithmetic.ToNumber" Description="ToNumber"/>
			<expression tag="String.Text" Value="expression can have a second argument for the base. In this case, the number can only be integer."/>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Math.Arithmetic.ToNumber">
			<expression tag="String.String" Value="11000101010101"/>
			<expression tag="Math.Number" Value="2"/>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="1">
		<expression tag="Math.Number" Value="12629"/>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Math.Arithmetic.ToNumber">
			<expression tag="String.String" Value="cafe"/>
			<expression tag="Math.Number" Value="16"/>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="1">
		<expression tag="Math.Number" Value="51966"/>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Typesetting.MultiParagraph">
			<expression tag="Typesetting.Paragraph">
				<expression tag="Typesetting.BoldChunk">
					<expression tag="String.Text" Value="Digits of a number"/>
				</expression>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="With the"/>
				<expression tag="Internet.UniformResourceLocator" Value="/?script=reference/Math.Arithmetic.Digits" Description="Digits"/>
				<expression tag="String.Text" Value="expression, you can get the digits of a non-negative integer number:"/>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Math.Arithmetic.Digits">
			<expression tag="Math.Number" Value="198367324"/>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="1">
		<expression tag="List.List">
			<expression tag="Math.Number" Value="1"/>
			<expression tag="Math.Number" Value="9"/>
			<expression tag="Math.Number" Value="8"/>
			<expression tag="Math.Number" Value="3"/>
			<expression tag="Math.Number" Value="6"/>
			<expression tag="Math.Number" Value="7"/>
			<expression tag="Math.Number" Value="3"/>
			<expression tag="Math.Number" Value="2"/>
			<expression tag="Math.Number" Value="4"/>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Math.Arithmetic.Digits">
			<expression tag="Math.Number" Value="7273473"/>
			<expression tag="Math.Number" Value="2"/>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="1">
		<expression tag="List.List">
			<expression tag="Math.Number" Value="1"/>
			<expression tag="Math.Number" Value="1"/>
			<expression tag="Math.Number" Value="0"/>
			<expression tag="Math.Number" Value="1"/>
			<expression tag="Math.Number" Value="1"/>
			<expression tag="Math.Number" Value="1"/>
			<expression tag="Math.Number" Value="0"/>
			<expression tag="Math.Number" Value="1"/>
			<expression tag="Math.Number" Value="1"/>
			<expression tag="Math.Number" Value="1"/>
			<expression tag="Math.Number" Value="1"/>
			<expression tag="Math.Number" Value="1"/>
			<expression tag="Math.Number" Value="1"/>
			<expression tag="Math.Number" Value="0"/>
			<expression tag="Math.Number" Value="0"/>
			<expression tag="Math.Number" Value="0"/>
			<expression tag="Math.Number" Value="0"/>
			<expression tag="Math.Number" Value="0"/>
			<expression tag="Math.Number" Value="0"/>
			<expression tag="Math.Number" Value="0"/>
			<expression tag="Math.Number" Value="0"/>
			<expression tag="Math.Number" Value="0"/>
			<expression tag="Math.Number" Value="1"/>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Math.Arithmetic.Digits">
			<expression tag="Math.Number" Value="6723764273543724"/>
			<expression tag="Math.Number" Value="1000"/>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="1">
		<expression tag="List.List">
			<expression tag="Math.Number" Value="6"/>
			<expression tag="Math.Number" Value="723"/>
			<expression tag="Math.Number" Value="764"/>
			<expression tag="Math.Number" Value="273"/>
			<expression tag="Math.Number" Value="543"/>
			<expression tag="Math.Number" Value="724"/>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Typesetting.MultiParagraph">
			<expression tag="Typesetting.Paragraph">
				<expression tag="Typesetting.BoldChunk">
					<expression tag="String.Text" Value="(Pseudo)-random number generation"/>
				</expression>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="The"/>
				<expression tag="Internet.UniformResourceLocator" Value="/?script=reference/Math.Arithmetic.Random" Description="Random"/>
				<expression tag="String.Text" Value="expression retusn a pseudo-random, decimal number between 0 and 1:"/>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="List.CreateList">
			<expression tag="List.CreateList">
				<expression tag="Math.Arithmetic.Random"/>
				<expression tag="Math.Number" Value="5"/>
			</expression>
			<expression tag="Math.Number" Value="5"/>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="1">
		<expression tag="List.List">
			<expression tag="List.List">
				<expression tag="Math.Number" Value="0.09366700134577255"/>
				<expression tag="Math.Number" Value="0.6611314487475247"/>
				<expression tag="Math.Number" Value="0.6544961370174556"/>
				<expression tag="Math.Number" Value="0.06339108520779868"/>
				<expression tag="Math.Number" Value="0.14499669337133292"/>
			</expression>
			<expression tag="List.List">
				<expression tag="Math.Number" Value="0.609526350069839"/>
				<expression tag="Math.Number" Value="0.7446415642833527"/>
				<expression tag="Math.Number" Value="0.7344636356814184"/>
				<expression tag="Math.Number" Value="0.9190137093833912"/>
				<expression tag="Math.Number" Value="0.8832641935846305"/>
			</expression>
			<expression tag="List.List">
				<expression tag="Math.Number" Value="0.8874906459093403"/>
				<expression tag="Math.Number" Value="0.47422372907883603"/>
				<expression tag="Math.Number" Value="0.6023550740566341"/>
				<expression tag="Math.Number" Value="0.6562950131917898"/>
				<expression tag="Math.Number" Value="0.19176813475045784"/>
			</expression>
			<expression tag="List.List">
				<expression tag="Math.Number" Value="0.6046000100349075"/>
				<expression tag="Math.Number" Value="0.505722228302305"/>
				<expression tag="Math.Number" Value="0.0995727702056558"/>
				<expression tag="Math.Number" Value="0.1313576894323515"/>
				<expression tag="Math.Number" Value="0.3050774319746373"/>
			</expression>
			<expression tag="List.List">
				<expression tag="Math.Number" Value="0.7706739793772704"/>
				<expression tag="Math.Number" Value="0.17153057638432911"/>
				<expression tag="Math.Number" Value="0.8491030273317133"/>
				<expression tag="Math.Number" Value="0.4301008283239276"/>
				<expression tag="Math.Number" Value="0.4376796883973272"/>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Typesetting.Paragraph">
			<expression tag="String.Text" Value="The"/>
			<expression tag="Internet.UniformResourceLocator" Value="/?script=reference/Math.Arithmetic.RandomInRange" Description="RandomInRange"/>
			<expression tag="String.Text" Value="expression retusn a pseudo-random, integer number in a range of two integer numbers. The specified number are included in the range."/>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="List.CreateList">
			<expression tag="List.CreateList">
				<expression tag="Math.Arithmetic.RandomInRange">
					<expression tag="Math.Number" Value="1"/>
					<expression tag="Math.Number" Value="10"/>
				</expression>
				<expression tag="Math.Number" Value="5"/>
			</expression>
			<expression tag="Math.Number" Value="5"/>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="1">
		<expression tag="List.List">
			<expression tag="List.List">
				<expression tag="Math.Number" Value="4"/>
				<expression tag="Math.Number" Value="10"/>
				<expression tag="Math.Number" Value="8"/>
				<expression tag="Math.Number" Value="2"/>
				<expression tag="Math.Number" Value="4"/>
			</expression>
			<expression tag="List.List">
				<expression tag="Math.Number" Value="2"/>
				<expression tag="Math.Number" Value="7"/>
				<expression tag="Math.Number" Value="5"/>
				<expression tag="Math.Number" Value="1"/>
				<expression tag="Math.Number" Value="5"/>
			</expression>
			<expression tag="List.List">
				<expression tag="Math.Number" Value="1"/>
				<expression tag="Math.Number" Value="7"/>
				<expression tag="Math.Number" Value="5"/>
				<expression tag="Math.Number" Value="2"/>
				<expression tag="Math.Number" Value="3"/>
			</expression>
			<expression tag="List.List">
				<expression tag="Math.Number" Value="7"/>
				<expression tag="Math.Number" Value="3"/>
				<expression tag="Math.Number" Value="8"/>
				<expression tag="Math.Number" Value="6"/>
				<expression tag="Math.Number" Value="9"/>
			</expression>
			<expression tag="List.List">
				<expression tag="Math.Number" Value="9"/>
				<expression tag="Math.Number" Value="9"/>
				<expression tag="Math.Number" Value="9"/>
				<expression tag="Math.Number" Value="10"/>
				<expression tag="Math.Number" Value="8"/>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Typesetting.Rule"/>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Typesetting.MultiParagraph">
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="Author: Laurence R. Ugalde"/>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="Created: February 25, 2021. Last modified "/>
				<expression tag="Time.Time" Value="1749786780000"/>
			</expression>
		</expression>
	</expression>
</expression>