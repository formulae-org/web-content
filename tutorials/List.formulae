<expression tag="Formulae.Script"><expression tag="Formulae.Script.Row" type="0"><expression tag="Typesetting.MultiParagraph"><expression tag="Typesetting.Paragraph"><expression tag="Typesetting.BoldChunk"><expression tag="String.Text" Value="List tutorial"/></expression></expression><expression tag="Typesetting.Paragraph"><expression tag="String.Text" Value="In this tutorial, you will lean about list expressions, and operations with lists."/></expression><expression tag="Typesetting.Paragraph"><expression tag="Typesetting.BoldChunk"><expression tag="String.Text" Value="Lists"/></expression></expression><expression tag="Typesetting.Paragraph"><expression tag="String.Text" Value="A list expression is a collection of zero o more Fōrmulæ expressions. These expressions can be of any kind. Lists are mutable, it is possible to add or remove elements in a given position, or change them."/></expression><expression tag="Typesetting.Paragraph"><expression tag="Typesetting.BoldChunk"><expression tag="String.Text" Value="Visualization of lists"/></expression></expression><expression tag="Typesetting.Paragraph"><expression tag="String.Text" Value="A list is shown as its elements between"/><expression tag="Internet.UniformResourceLocator" Value="https://en.wikipedia.org/wiki/Bracket#Curly_brackets" Description="curly brackets (or curly braces)"/><expression tag="String.Text" Value="separated with"/><expression tag="Internet.UniformResourceLocator" Value="https://en.wikipedia.org/wiki/Comma#Computing" Description="commas."/><expression tag="String.Text" Value="The order of appearance is the same of the"/><expression tag="Internet.UniformResourceLocator" Value="https://en.wikipedia.org/wiki/Writing_system#Directionality" Description="directionality"/><expression tag="String.Text" Value="of the"/><expression tag="Internet.UniformResourceLocator" Value="https://en.wikipedia.org/wiki/Writing_system" Description="script"/><expression tag="String.Text" Value="you are using. For example, if your script is LTR (left-to-right), the most usual, element are shown from left to right. In RTL (right-to-left) scripts, such as arabic, hebrew, etc. element will be shown in such that direction."/></expression><expression tag="Typesetting.Centering"><expression tag="List.List"><expression tag="Math.Number" Value="1"/><expression tag="Math.Arithmetic.Division"><expression tag="Math.Number" Value="3"/><expression tag="Math.Number" Value="4"/></expression><expression tag="Math.Number" Value="12.345"/><expression tag="String.String" Value="Lorem Ipsum"/><expression tag="Logic.True"/></expression></expression><expression tag="Typesetting.Paragraph"><expression tag="String.Text" Value="Given that the elements of a list can be of any kind, they can even be also lists:"/></expression><expression tag="Typesetting.Centering"><expression tag="List.List"><expression tag="Math.Number" Value="1"/><expression tag="Math.Arithmetic.Division"><expression tag="Math.Number" Value="3"/><expression tag="Math.Number" Value="4"/></expression><expression tag="List.List"><expression tag="Math.Number" Value="10"/><expression tag="Math.Number" Value="20"/><expression tag="Math.Number" Value="30"/></expression><expression tag="String.String" Value="Lorem Ipsum"/><expression tag="List.List"><expression tag="Logic.True"/><expression tag="Logic.False"/></expression></expression></expression><expression tag="Typesetting.Paragraph"><expression tag="String.Text" Value="If all the elements of a list are also lists having the same number of elements, they are automatically shown as a matrix, then the list containing the lists"/><expression tag="List.List"><expression tag="Math.Number" Value="1"/><expression tag="Math.Number" Value="2"/><expression tag="Math.Number" Value="3"/></expression><expression tag="String.Text" Value=","/><expression tag="List.List"><expression tag="Math.Number" Value="4"/><expression tag="Math.Number" Value="5"/><expression tag="Math.Number" Value="6"/></expression><expression tag="String.Text" Value="and"/><expression tag="List.List"><expression tag="Math.Number" Value="7"/><expression tag="Math.Number" Value="8"/><expression tag="Math.Number" Value="9"/></expression><expression tag="String.Text" Value="will be shown as:"/></expression><expression tag="Typesetting.Centering"><expression tag="List.List"><expression tag="List.List"><expression tag="Math.Number" Value="1"/><expression tag="Math.Number" Value="2"/><expression tag="Math.Number" Value="3"/></expression><expression tag="List.List"><expression tag="Math.Number" Value="4"/><expression tag="Math.Number" Value="5"/><expression tag="Math.Number" Value="6"/></expression><expression tag="List.List"><expression tag="Math.Number" Value="7"/><expression tag="Math.Number" Value="8"/><expression tag="Math.Number" Value="9"/></expression></expression></expression><expression tag="Typesetting.Paragraph"><expression tag="String.Text" Value="The following is the empty list, a list with no elements:"/></expression><expression tag="Typesetting.Centering"><expression tag="List.List"/></expression><expression tag="Typesetting.Paragraph"><expression tag="Typesetting.BoldChunk"><expression tag="String.Text" Value="Manual creation of lists"/></expression></expression><expression tag="Typesetting.Paragraph"><expression tag="String.Text" Value="When you press the &quot;{&quot; key, the selected expression becames a list, with the expression as its only element. You can add elements (null expressions) using the &lt;INS&gt; key for insertion after, or &lt;ALT&gt;&lt;INSERT&gt; for insertion before."/></expression></expression></expression><expression tag="Formulae.Script.Row" type="0"><expression tag="Typesetting.MultiParagraph"><expression tag="Typesetting.Paragraph"><expression tag="Typesetting.BoldChunk"><expression tag="String.Text" Value="Execution of lists"/></expression></expression><expression tag="Typesetting.Paragraph"><expression tag="String.Text" Value="A list, by itself, does not reduce to other expression:"/></expression></expression></expression><expression tag="Formulae.Script.Row" type="0"><expression tag="List.List"><expression tag="Math.Number" Value="1"/><expression tag="Math.Number" Value="2"/><expression tag="Math.Number" Value="3"/></expression></expression><expression tag="Formulae.Script.Row" type="1"><expression tag="List.List"><expression tag="Math.Number" Value="1"/><expression tag="Math.Number" Value="2"/><expression tag="Math.Number" Value="3"/></expression></expression><expression tag="Formulae.Script.Row" type="0"><expression tag="Typesetting.Paragraph"><expression tag="String.Text" Value="However, its elements are executed sequentially, one after the other, from the first element to the last one:"/></expression></expression><expression tag="Formulae.Script.Row" type="0"><expression tag="List.List"><expression tag="Math.Arithmetic.Addition"><expression tag="Math.Number" Value="1"/><expression tag="Math.Number" Value="2"/></expression><expression tag="Math.Arithmetic.Division"><expression tag="Math.Number" Value="36"/><expression tag="Math.Number" Value="8"/></expression><expression tag="String.Concatenation"><expression tag="String.String" Value="Lorem"/><expression tag="String.String" Value=" "/><expression tag="String.String" Value="Ipsum"/></expression></expression></expression><expression tag="Formulae.Script.Row" type="1"><expression tag="List.List"><expression tag="Math.Number" Value="3"/><expression tag="Math.Arithmetic.Division"><expression tag="Math.Number" Value="9"/><expression tag="Math.Number" Value="2"/></expression><expression tag="String.String" Value="Lorem Ipsum"/></expression></expression><expression tag="Formulae.Script.Row" type="0"><expression tag="Typesetting.MultiParagraph"><expression tag="Typesetting.Paragraph"><expression tag="Typesetting.BoldChunk"><expression tag="String.Text" Value="Operations with lists"/></expression></expression><expression tag="Typesetting.Paragraph"><expression tag="Typesetting.BoldChunk"><expression tag="String.Text" Value="Retrieving an element of a list"/></expression></expression><expression tag="Typesetting.Paragraph"><expression tag="String.Text" Value="Any element of a list is referenced through its positions in the list, it is called"/><expression tag="Internet.UniformResourceLocator" Value="https://en.wikipedia.org/wiki/Array_data_structure#Element_identifier_and_addressing_formulas" Description="index"/><expression tag="String.Text" Value="The first position has the index 1, the second one has the index 2, and so on."/></expression><expression tag="Typesetting.Paragraph"><expression tag="Typesetting.BoldChunk"><expression tag="String.Text" Value="Note."/></expression><expression tag="String.Text" Value="Several programming languages start numeration of indices as zero, they are called 0-based. Fōrmulæ is 1-based. See"/><expression tag="Internet.UniformResourceLocator" Value="https://en.wikipedia.org/wiki/Zero-based_numbering" Description="zero based numbering"/></expression><expression tag="Typesetting.Paragraph"><expression tag="String.Text" Value="To retrieve an element, it us used the"/><expression tag="Internet.UniformResourceLocator" Value="/?reference=Expression.Child" Description="Child"/><expression tag="String.Text" Value="expression, which is visualized as the list and the index as subscript."/></expression><expression tag="Typesetting.Paragraph"><expression tag="String.Text" Value="See the following examples:"/></expression></expression></expression><expression tag="Formulae.Script.Row" type="0"><expression tag="Expression.Child"><expression tag="List.List"><expression tag="String.String" Value="a"/><expression tag="String.String" Value="b"/><expression tag="String.String" Value="c"/><expression tag="String.String" Value="d"/></expression><expression tag="Math.Number" Value="1"/></expression></expression><expression tag="Formulae.Script.Row" type="1"><expression tag="String.String" Value="a"/></expression><expression tag="Formulae.Script.Row" type="0"><expression tag="Expression.Child"><expression tag="List.List"><expression tag="Math.Number" Value="1"/><expression tag="List.List"><expression tag="Logic.True"/><expression tag="Logic.False"/></expression><expression tag="List.List"><expression tag="Math.Number" Value="1."/><expression tag="Math.Number" Value="2."/><expression tag="Math.Number" Value="3."/></expression></expression><expression tag="Math.Number" Value="2"/></expression></expression><expression tag="Formulae.Script.Row" type="1"><expression tag="List.List"><expression tag="Logic.True"/><expression tag="Logic.False"/></expression></expression><expression tag="Formulae.Script.Row" type="0"><expression tag="Expression.Child"><expression tag="List.List"><expression tag="List.List"><expression tag="Math.Number" Value="1"/><expression tag="Math.Number" Value="2"/><expression tag="Math.Number" Value="3"/></expression><expression tag="List.List"><expression tag="Math.Number" Value="4"/><expression tag="Math.Number" Value="5"/><expression tag="Math.Number" Value="6"/></expression><expression tag="List.List"><expression tag="Math.Number" Value="7"/><expression tag="Math.Number" Value="8"/><expression tag="Math.Number" Value="9"/></expression></expression><expression tag="Math.Number" Value="3"/></expression></expression><expression tag="Formulae.Script.Row" type="1"><expression tag="List.List"><expression tag="Math.Number" Value="7"/><expression tag="Math.Number" Value="8"/><expression tag="Math.Number" Value="9"/></expression></expression><expression tag="Formulae.Script.Row" type="0"><expression tag="Typesetting.Paragraph"><expression tag="String.Text" Value="An attempt to retrieve an element in a non-existent position will produce an error:"/></expression></expression><expression tag="Formulae.Script.Row" type="0"><expression tag="Expression.Child"><expression tag="List.List"><expression tag="String.String" Value="a"/><expression tag="String.String" Value="b"/><expression tag="String.String" Value="c"/><expression tag="String.String" Value="d"/></expression><expression tag="Math.Number" Value="10"/></expression></expression><expression tag="Formulae.Script.Row" type="1"><expression tag="Expression.Child"><expression tag="List.List"><expression tag="String.String" Value="a"/><expression tag="String.String" Value="b"/><expression tag="String.String" Value="c"/><expression tag="String.String" Value="d"/></expression><expression tag="Error" Description="Index out of range"><expression tag="Math.Number" Value="10"/></expression></expression></expression><expression tag="Formulae.Script.Row" type="0"><expression tag="Typesetting.MultiParagraph"><expression tag="Typesetting.Paragraph"><expression tag="Typesetting.BoldChunk"><expression tag="String.Text" Value="Negative indices"/></expression></expression><expression tag="Typesetting.Paragraph"><expression tag="String.Text" Value="Indices can be negative numbers, in such a case, they are counted in reverse order, from the last to the first. The -1 index is the last element, the -2 index is the penultimate element, and so on:"/></expression></expression></expression><expression tag="Formulae.Script.Row" type="0"><expression tag="Expression.Child"><expression tag="List.List"><expression tag="Math.Number" Value="1"/><expression tag="List.List"><expression tag="Logic.True"/><expression tag="Logic.False"/></expression><expression tag="List.List"><expression tag="Math.Number" Value="1."/><expression tag="Math.Number" Value="2."/><expression tag="Math.Number" Value="3."/></expression></expression><expression tag="Math.Arithmetic.Negative"><expression tag="Math.Number" Value="1"/></expression></expression></expression><expression tag="Formulae.Script.Row" type="1"><expression tag="List.List"><expression tag="Math.Number" Value="1."/><expression tag="Math.Number" Value="2."/><expression tag="Math.Number" Value="3."/></expression></expression><expression tag="Formulae.Script.Row" type="0"><expression tag="Expression.Child"><expression tag="List.List"><expression tag="String.String" Value="a"/><expression tag="String.String" Value="b"/><expression tag="String.String" Value="c"/><expression tag="String.String" Value="d"/></expression><expression tag="Math.Arithmetic.Negative"><expression tag="Math.Number" Value="2"/></expression></expression></expression><expression tag="Formulae.Script.Row" type="1"><expression tag="String.String" Value="c"/></expression><expression tag="Formulae.Script.Row" type="0"><expression tag="Typesetting.MultiParagraph"><expression tag="Typesetting.Paragraph"><expression tag="Typesetting.BoldChunk"><expression tag="String.Text" Value="Recursive indices"/></expression></expression><expression tag="Typesetting.Paragraph"><expression tag="String.Text" Value="Sometimes, specially when working with matrices, you want to retrieve element of sublists. You can provide a list as the index to indicate the elements you want to traverse."/></expression><expression tag="Typesetting.Paragraph"><expression tag="String.Text" Value="In the following expression, the index"/><expression tag="List.List"><expression tag="Math.Number" Value="3"/><expression tag="Math.Number" Value="2"/></expression><expression tag="String.Text" Value="means &quot;Get the third element, and then the second one&quot;:"/></expression></expression></expression><expression tag="Formulae.Script.Row" type="0"><expression tag="Expression.Child"><expression tag="List.List"><expression tag="Math.Number" Value="1"/><expression tag="List.List"><expression tag="Logic.True"/><expression tag="Logic.False"/></expression><expression tag="List.List"><expression tag="Math.Number" Value="1."/><expression tag="Math.Number" Value="2."/><expression tag="Math.Number" Value="3."/></expression></expression><expression tag="List.List"><expression tag="Math.Number" Value="3"/><expression tag="Math.Number" Value="2"/></expression></expression></expression><expression tag="Formulae.Script.Row" type="1"><expression tag="Math.Number" Value="2."/></expression><expression tag="Formulae.Script.Row" type="0"><expression tag="Expression.Child"><expression tag="List.List"><expression tag="List.List"><expression tag="Math.Number" Value="1"/><expression tag="Math.Number" Value="2"/><expression tag="Math.Number" Value="3"/></expression><expression tag="List.List"><expression tag="Math.Number" Value="4"/><expression tag="Math.Number" Value="5"/><expression tag="Math.Number" Value="6"/></expression><expression tag="List.List"><expression tag="Math.Number" Value="7"/><expression tag="Math.Number" Value="8"/><expression tag="Math.Number" Value="9"/></expression></expression><expression tag="List.List"><expression tag="Math.Number" Value="2"/><expression tag="Math.Number" Value="3"/></expression></expression></expression><expression tag="Formulae.Script.Row" type="1"><expression tag="Math.Number" Value="6"/></expression><expression tag="Formulae.Script.Row" type="0"><expression tag="Expression.Child"><expression tag="List.List"><expression tag="Math.Number" Value="1"/><expression tag="List.List"><expression tag="String.String" Value="x"/><expression tag="String.String" Value="y"/></expression><expression tag="List.List"><expression tag="Math.Number" Value="1."/><expression tag="List.List"><expression tag="Logic.True"/><expression tag="Logic.False"/></expression><expression tag="Math.Number" Value="3."/></expression></expression><expression tag="List.List"><expression tag="Math.Number" Value="3"/><expression tag="Math.Number" Value="2"/><expression tag="Math.Number" Value="2"/></expression></expression></expression><expression tag="Formulae.Script.Row" type="1"><expression tag="Logic.False"/></expression><expression tag="Formulae.Script.Row" type="0"><expression tag="Expression.Child"><expression tag="List.List"><expression tag="List.List"><expression tag="Math.Number" Value="1"/><expression tag="Math.Number" Value="2"/><expression tag="List.List"><expression tag="String.String" Value="x"/><expression tag="String.String" Value="y"/></expression></expression><expression tag="List.List"><expression tag="Math.Number" Value="3"/><expression tag="Math.Number" Value="4"/><expression tag="List.List"><expression tag="String.String" Value="a"/><expression tag="String.String" Value="b"/></expression></expression><expression tag="List.List"><expression tag="Math.Number" Value="7"/><expression tag="Math.Number" Value="8"/><expression tag="List.List"><expression tag="String.String" Value="m"/><expression tag="String.String" Value="n"/></expression></expression></expression><expression tag="List.List"><expression tag="Math.Number" Value="2"/><expression tag="Math.Number" Value="3"/><expression tag="Math.Arithmetic.Negative"><expression tag="Math.Number" Value="1"/></expression></expression></expression></expression><expression tag="Formulae.Script.Row" type="1"><expression tag="String.String" Value="b"/></expression><expression tag="Formulae.Script.Row" type="0"><expression tag="Typesetting.MultiParagraph"><expression tag="Typesetting.Paragraph"><expression tag="Typesetting.BoldChunk"><expression tag="String.Text" Value="Cardinality of a list"/></expression></expression><expression tag="Typesetting.Paragraph"><expression tag="String.Text" Value="The operation of retrieving the number of elements of a list is called"/><expression tag="Internet.UniformResourceLocator" Value="https://en.wikipedia.org/wiki/Cardinality" Description="cardinality."/><expression tag="String.Text" Value="The"/><expression tag="Internet.UniformResourceLocator" Value="/?reference=Expression.Cardinality" Description="Cardinality"/><expression tag="String.Text" Value="expression, shown as"/><expression tag="Expression.Cardinality"><expression tag="String.Text" Value="list"/></expression><expression tag="String.Text" Value="gives the cardinality of the list:"/></expression></expression></expression><expression tag="Formulae.Script.Row" type="0"><expression tag="Expression.Cardinality"><expression tag="List.List"><expression tag="Math.Number" Value="10"/><expression tag="Math.Number" Value="15"/><expression tag="Math.Number" Value="20"/></expression></expression></expression><expression tag="Formulae.Script.Row" type="1"><expression tag="Math.Number" Value="3"/></expression><expression tag="Formulae.Script.Row" type="0"><expression tag="Typesetting.MultiParagraph"><expression tag="Typesetting.Paragraph"><expression tag="Typesetting.BoldChunk"><expression tag="String.Text" Value="Appending an element to a list"/></expression></expression><expression tag="Typesetting.Paragraph"><expression tag="Internet.UniformResourceLocator" Value="https://en.wikipedia.org/wiki/Append" Description="Appending"/><expression tag="String.Text" Value="is the operation of adding an element to a list at the end. In Fōrmulæ, these operations are performed by the"/><expression tag="Internet.UniformResourceLocator" Value="/?reference=Expression.Append" Description="Append"/><expression tag="String.Text" Value="expression:"/></expression></expression></expression><expression tag="Formulae.Script.Row" type="0"><expression tag="Expression.Append"><expression tag="List.List"><expression tag="Math.Number" Value="1"/><expression tag="Math.Number" Value="2"/><expression tag="Math.Number" Value="3"/></expression><expression tag="Symbolic.Symbol" Name="x"/></expression></expression><expression tag="Formulae.Script.Row" type="1"><expression tag="List.List"><expression tag="Math.Number" Value="1"/><expression tag="Math.Number" Value="2"/><expression tag="Math.Number" Value="3"/><expression tag="Symbolic.Symbol" Name="x"/></expression></expression><expression tag="Formulae.Script.Row" type="0"><expression tag="Typesetting.MultiParagraph"><expression tag="Typesetting.Paragraph"><expression tag="Typesetting.BoldChunk"><expression tag="String.Text" Value="Prepending an element to a list"/></expression></expression><expression tag="Typesetting.Paragraph"><expression tag="Internet.UniformResourceLocator" Value="https://en.wiktionary.org/wiki/prepend" Description="Prepending"/><expression tag="String.Text" Value="is the operation of adding an element to a list at the beginning. In Fōrmulæ, these operations are performed by the"/><expression tag="Internet.UniformResourceLocator" Value="/?reference=Expression.Prepend" Description="Prepend"/><expression tag="String.Text" Value="expression:"/></expression></expression></expression><expression tag="Formulae.Script.Row" type="0"><expression tag="Expression.Prepend"><expression tag="List.List"><expression tag="Symbolic.Symbol" Name="x"/><expression tag="Symbolic.Symbol" Name="y"/><expression tag="Symbolic.Symbol" Name="z"/></expression><expression tag="Math.Number" Value="15"/></expression></expression><expression tag="Formulae.Script.Row" type="1"><expression tag="List.List"><expression tag="Math.Number" Value="15"/><expression tag="Symbolic.Symbol" Name="x"/><expression tag="Symbolic.Symbol" Name="y"/><expression tag="Symbolic.Symbol" Name="z"/></expression></expression><expression tag="Formulae.Script.Row" type="0"><expression tag="Typesetting.MultiParagraph"><expression tag="Typesetting.Paragraph"><expression tag="Typesetting.BoldChunk"><expression tag="String.Text" Value="Inserting an element at a specific position"/></expression></expression><expression tag="Typesetting.Paragraph"><expression tag="String.Text" Value="To insert an element in any position, you can use the"/><expression tag="Internet.UniformResourceLocator" Value="/?reference=Expression.Insert" Description="Insert"/><expression tag="String.Text" Value="expression. The first parameter is the list, the second one is the element to be inserted, and the third one is the index. Please note that the index reflects the position where the new element"/><expression tag="Typesetting.BoldChunk"><expression tag="String.Text" Value="will be."/></expression></expression></expression></expression><expression tag="Formulae.Script.Row" type="0"><expression tag="Expression.Insert"><expression tag="List.List"><expression tag="Math.Number" Value="1"/><expression tag="Math.Number" Value="2"/><expression tag="Math.Number" Value="3"/></expression><expression tag="Symbolic.Symbol" Name="x"/><expression tag="Math.Number" Value="2"/></expression></expression><expression tag="Formulae.Script.Row" type="1"><expression tag="List.List"><expression tag="Math.Number" Value="1"/><expression tag="Symbolic.Symbol" Name="x"/><expression tag="Math.Number" Value="2"/><expression tag="Math.Number" Value="3"/></expression></expression><expression tag="Formulae.Script.Row" type="0"><expression tag="Typesetting.Paragraph"><expression tag="String.Text" Value="Then if you want to append the element at the end, you should specify an index that the list currently does not have:"/></expression></expression><expression tag="Formulae.Script.Row" type="0"><expression tag="Expression.Insert"><expression tag="List.List"><expression tag="Math.Number" Value="1"/><expression tag="Math.Number" Value="2"/><expression tag="Math.Number" Value="3"/></expression><expression tag="Symbolic.Symbol" Name="x"/><expression tag="Math.Number" Value="4"/></expression></expression><expression tag="Formulae.Script.Row" type="1"><expression tag="List.List"><expression tag="Math.Number" Value="1"/><expression tag="Math.Number" Value="2"/><expression tag="Math.Number" Value="3"/><expression tag="Symbolic.Symbol" Name="x"/></expression></expression><expression tag="Formulae.Script.Row" type="0"><expression tag="Typesetting.Paragraph"><expression tag="String.Text" Value="Negative indices can be used, for example, using -1 means that the new element will be at the last position, -2 means thet the new element will be at the penultimate position and so on."/></expression></expression><expression tag="Formulae.Script.Row" type="0"><expression tag="Expression.Insert"><expression tag="List.List"><expression tag="Math.Number" Value="1"/><expression tag="Math.Number" Value="2"/><expression tag="Math.Number" Value="3"/></expression><expression tag="Symbolic.Symbol" Name="x"/><expression tag="Math.Arithmetic.Negative"><expression tag="Math.Number" Value="2"/></expression></expression></expression><expression tag="Formulae.Script.Row" type="1"><expression tag="List.List"><expression tag="Math.Number" Value="1"/><expression tag="Math.Number" Value="2"/><expression tag="Symbolic.Symbol" Name="x"/><expression tag="Math.Number" Value="3"/></expression></expression><expression tag="Formulae.Script.Row" type="0"><expression tag="Typesetting.Paragraph"><expression tag="String.Text" Value="The third argument is optional. If you omit it, the new element is inserted at the end:"/></expression></expression><expression tag="Formulae.Script.Row" type="0"><expression tag="Expression.Insert"><expression tag="List.List"><expression tag="Math.Number" Value="1"/><expression tag="Math.Number" Value="2"/><expression tag="Math.Number" Value="3"/></expression><expression tag="Symbolic.Symbol" Name="x"/></expression></expression><expression tag="Formulae.Script.Row" type="1"><expression tag="List.List"><expression tag="Math.Number" Value="1"/><expression tag="Math.Number" Value="2"/><expression tag="Math.Number" Value="3"/><expression tag="Symbolic.Symbol" Name="x"/></expression></expression><expression tag="Formulae.Script.Row" type="0"><expression tag="Typesetting.Paragraph"><expression tag="String.Text" Value="An attempt to insert an element in a non-existent position (excepting the cardinality+1 index) will produce an error"/></expression></expression><expression tag="Formulae.Script.Row" type="0"><expression tag="Expression.Insert"><expression tag="List.List"><expression tag="Math.Number" Value="1"/><expression tag="Math.Number" Value="2"/><expression tag="Math.Number" Value="3"/></expression><expression tag="Symbolic.Symbol" Name="x"/><expression tag="Math.Number" Value="10"/></expression></expression><expression tag="Formulae.Script.Row" type="1"><expression tag="Expression.Insert"><expression tag="List.List"><expression tag="Math.Number" Value="1"/><expression tag="Math.Number" Value="2"/><expression tag="Math.Number" Value="3"/></expression><expression tag="Symbolic.Symbol" Name="x"/><expression tag="Error" Description="index out of range"><expression tag="Math.Number" Value="10"/></expression></expression></expression><expression tag="Formulae.Script.Row" type="0"><expression tag="Expression.Insert"><expression tag="List.List"><expression tag="Math.Number" Value="1"/><expression tag="Math.Number" Value="2"/><expression tag="Math.Number" Value="3"/></expression><expression tag="Symbolic.Symbol" Name="x"/><expression tag="Math.Arithmetic.Negative"><expression tag="Math.Number" Value="10"/></expression></expression></expression><expression tag="Formulae.Script.Row" type="1"><expression tag="Expression.Insert"><expression tag="List.List"><expression tag="Math.Number" Value="1"/><expression tag="Math.Number" Value="2"/><expression tag="Math.Number" Value="3"/></expression><expression tag="Symbolic.Symbol" Name="x"/><expression tag="Error" Description="index out of range"><expression tag="Math.Arithmetic.Negative"><expression tag="Math.Number" Value="10"/></expression></expression></expression></expression><expression tag="Formulae.Script.Row" type="0"><expression tag="Typesetting.MultiParagraph"><expression tag="Typesetting.Paragraph"><expression tag="Typesetting.BoldChunk"><expression tag="String.Text" Value="Deleting an element at a specific position"/></expression></expression><expression tag="Typesetting.Paragraph"><expression tag="String.Text" Value="To delete an element in any position, you can use the"/><expression tag="Internet.UniformResourceLocator" Value="/?reference=Expression.Delete" Description="Delete"/><expression tag="String.Text" Value="expression. The first parameter is the list and the second one is the index of the element to be deleted:"/></expression></expression></expression><expression tag="Formulae.Script.Row" type="0"><expression tag="Expression.Delete"><expression tag="List.List"><expression tag="Symbolic.Symbol" Name="w"/><expression tag="Symbolic.Symbol" Name="x"/><expression tag="Symbolic.Symbol" Name="y"/><expression tag="Symbolic.Symbol" Name="z"/></expression><expression tag="Math.Number" Value="3"/></expression></expression><expression tag="Formulae.Script.Row" type="1"><expression tag="List.List"><expression tag="Symbolic.Symbol" Name="w"/><expression tag="Symbolic.Symbol" Name="x"/><expression tag="Symbolic.Symbol" Name="z"/></expression></expression><expression tag="Formulae.Script.Row" type="0"><expression tag="Typesetting.Paragraph"><expression tag="String.Text" Value="Negative indices can be used. As usual, -1 means to delete the element at the last position, -2 means to delete the penultimate element, and so on:"/></expression></expression><expression tag="Formulae.Script.Row" type="0"><expression tag="Expression.Delete"><expression tag="List.List"><expression tag="Symbolic.Symbol" Name="w"/><expression tag="Symbolic.Symbol" Name="x"/><expression tag="Symbolic.Symbol" Name="y"/><expression tag="Symbolic.Symbol" Name="z"/></expression><expression tag="Math.Arithmetic.Negative"><expression tag="Math.Number" Value="1"/></expression></expression></expression><expression tag="Formulae.Script.Row" type="1"><expression tag="List.List"><expression tag="Symbolic.Symbol" Name="w"/><expression tag="Symbolic.Symbol" Name="x"/><expression tag="Symbolic.Symbol" Name="y"/></expression></expression><expression tag="Formulae.Script.Row" type="0"><expression tag="Typesetting.Paragraph"><expression tag="String.Text" Value="An attempt to delete an element in a non-existent position will produce an error:"/></expression></expression><expression tag="Formulae.Script.Row" type="0"><expression tag="Expression.Delete"><expression tag="List.List"><expression tag="Symbolic.Symbol" Name="w"/><expression tag="Symbolic.Symbol" Name="x"/><expression tag="Symbolic.Symbol" Name="y"/><expression tag="Symbolic.Symbol" Name="z"/></expression><expression tag="Math.Number" Value="10"/></expression></expression><expression tag="Formulae.Script.Row" type="1"><expression tag="Expression.Delete"><expression tag="List.List"><expression tag="Symbolic.Symbol" Name="w"/><expression tag="Symbolic.Symbol" Name="x"/><expression tag="Symbolic.Symbol" Name="y"/><expression tag="Symbolic.Symbol" Name="z"/></expression><expression tag="Error" Description="index out of range"><expression tag="Math.Number" Value="10"/></expression></expression></expression><expression tag="Formulae.Script.Row" type="0"><expression tag="Typesetting.MultiParagraph"><expression tag="Typesetting.Paragraph"><expression tag="Typesetting.BoldChunk"><expression tag="String.Text" Value="Important note"/></expression></expression><expression tag="Typesetting.Paragraph"><expression tag="String.Text" Value="The expressions"/><expression tag="Internet.UniformResourceLocator" Value="/?reference=Expression.Child" Description="Child"/><expression tag="String.Text" Value=","/><expression tag="Internet.UniformResourceLocator" Value="/?reference=Expression.Cardinality" Description="Cardinality"/><expression tag="String.Text" Value=","/><expression tag="Internet.UniformResourceLocator" Value="/?reference=Expression.Append" Description="Append"/><expression tag="String.Text" Value=","/><expression tag="Internet.UniformResourceLocator" Value="/?reference=Expression.Prepend" Description="Prepend"/><expression tag="String.Text" Value=","/><expression tag="Internet.UniformResourceLocator" Value="/?reference=Expression.Insert" Description="Insert"/><expression tag="String.Text" Value="and"/><expression tag="Internet.UniformResourceLocator" Value="/?reference=Expression.Delete" Description="Delete"/><expression tag="String.Text" Value="are not exclusive to lists. They are universal expressions that can operate on any kind of expressions having subexpressions (such as lists are), depending of the nature of the target expression. Take the example of the"/><expression tag="Internet.UniformResourceLocator" Value="/?reference=Math.Arithmetic.Division" Description="Division"/><expression tag="String.Text" Value="expression. It can only have two subexpressions. You can use the"/><expression tag="Internet.UniformResourceLocator" Value="/?reference=Expression.Child" Description="Child"/><expression tag="String.Text" Value="expression to get its numerator (index 1), or its denominator (index 2). The"/><expression tag="Internet.UniformResourceLocator" Value="/?reference=Expression.Cardinality" Description="Cardinality"/><expression tag="String.Text" Value="expression will always retrieve 2, and the"/><expression tag="Internet.UniformResourceLocator" Value="/?reference=Expression.Append" Description="Append"/><expression tag="String.Text" Value=","/><expression tag="Internet.UniformResourceLocator" Value="/?reference=Expression.Prepend" Description="Prepend"/><expression tag="String.Text" Value=","/><expression tag="Internet.UniformResourceLocator" Value="/?reference=Expression.Insert" Description="Insert"/><expression tag="String.Text" Value="or"/><expression tag="Internet.UniformResourceLocator" Value="/?reference=Expression.Delete" Description="Delete"/><expression tag="String.Text" Value="expressions will always produce an error expression."/></expression></expression></expression><expression tag="Formulae.Script.Row" type="0"><expression tag="Typesetting.MultiParagraph"><expression tag="Typesetting.Paragraph"><expression tag="Typesetting.BoldChunk"><expression tag="String.Text" Value="Symbols referencing lists"/></expression></expression><expression tag="Typesetting.Paragraph"><expression tag="String.Text" Value="In previous examples, we have used lists directly for illustrative purposes. In real programs this is rare, it is much more common to manage lists through symbols. In such a case, the behavior is slightly different, as it will be shown."/></expression><expression tag="Typesetting.Paragraph"><expression tag="String.Text" Value="For expressions"/><expression tag="Internet.UniformResourceLocator" Value="/?reference=Expression.Append" Description="Append"/><expression tag="String.Text" Value=","/><expression tag="Internet.UniformResourceLocator" Value="/?reference=Expression.Prepend" Description="Prepend"/><expression tag="String.Text" Value=","/><expression tag="Internet.UniformResourceLocator" Value="/?reference=Expression.Insert" Description="Insert"/><expression tag="String.Text" Value="and"/><expression tag="Internet.UniformResourceLocator" Value="/?reference=Expression.Delete" Description="Delete"/><expression tag="String.Text" Value=", if the first parameter (the list) is a"/><expression tag="Typesetting.BoldChunk"><expression tag="String.Text" Value="symbol referencing a list"/></expression><expression tag="String.Text" Value=", the referenced list is actually changed (one of its elements is added or removed). See the following example:"/></expression></expression></expression><expression tag="Formulae.Script.Row" type="0"><expression tag="Programming.Block" Description="Description" Expanded="True"><expression tag="Symbolic.Local"><expression tag="Symbolic.Assignment"><expression tag="Symbolic.Symbol" Name="list"/><expression tag="List.List"><expression tag="Math.Number" Value="1"/><expression tag="Math.Number" Value="2"/><expression tag="Math.Number" Value="3"/></expression></expression></expression><expression tag="Expression.Append"><expression tag="Symbolic.Symbol" Name="list"/><expression tag="Math.Number" Value="4"/></expression><expression tag="Symbolic.Symbol" Name="list"/></expression></expression><expression tag="Formulae.Script.Row" type="1"><expression tag="List.List"><expression tag="Math.Number" Value="1"/><expression tag="Math.Number" Value="2"/><expression tag="Math.Number" Value="3"/><expression tag="Math.Number" Value="4"/></expression></expression><expression tag="Formulae.Script.Row" type="0"><expression tag="Programming.Block" Description="Description" Expanded="True"><expression tag="Symbolic.Local"><expression tag="Symbolic.Assignment"><expression tag="Symbolic.Symbol" Name="list"/><expression tag="List.List"><expression tag="Symbolic.Symbol" Name="a"/><expression tag="Symbolic.Symbol" Name="b"/><expression tag="Symbolic.Symbol" Name="c"/><expression tag="Symbolic.Symbol" Name="d"/><expression tag="Symbolic.Symbol" Name="e"/></expression></expression></expression><expression tag="Expression.Delete"><expression tag="Symbolic.Symbol" Name="list"/><expression tag="Math.Number" Value="3"/></expression><expression tag="Symbolic.Symbol" Name="list"/></expression></expression><expression tag="Formulae.Script.Row" type="1"><expression tag="List.List"><expression tag="Symbolic.Symbol" Name="a"/><expression tag="Symbolic.Symbol" Name="b"/><expression tag="Symbolic.Symbol" Name="d"/><expression tag="Symbolic.Symbol" Name="e"/></expression></expression><expression tag="Formulae.Script.Row" type="0"><expression tag="Typesetting.Paragraph"><expression tag="String.Text" Value="Also, for expressions"/><expression tag="Internet.UniformResourceLocator" Value="/?reference=Expression.Append" Description="Append"/><expression tag="String.Text" Value=","/><expression tag="Internet.UniformResourceLocator" Value="/?reference=Expression.Prepend" Description="Prepend"/><expression tag="String.Text" Value=","/><expression tag="Internet.UniformResourceLocator" Value="/?reference=Expression.Insert" Description="Insert"/><expression tag="String.Text" Value="and"/><expression tag="Internet.UniformResourceLocator" Value="/?reference=Expression.Delete" Description="Delete"/><expression tag="String.Text" Value=", if the first parameter (the list) is a"/><expression tag="Typesetting.BoldChunk"><expression tag="String.Text" Value="symbol"/></expression><expression tag="String.Text" Value=", the result of the execution of the expression is the element being"/><expression tag="Typesetting.BoldChunk"><expression tag="String.Text" Value="added"/></expression><expression tag="String.Text" Value="or"/><expression tag="Typesetting.BoldChunk"><expression tag="String.Text" Value="removed"/></expression><expression tag="String.Text" Value=". See the following example:"/></expression></expression><expression tag="Formulae.Script.Row" type="0"><expression tag="Programming.Block" Description="Description" Expanded="True"><expression tag="Symbolic.Local"><expression tag="Symbolic.Assignment"><expression tag="Symbolic.Symbol" Name="list"/><expression tag="List.List"><expression tag="Math.Number" Value="1"/><expression tag="Math.Number" Value="2"/><expression tag="Math.Number" Value="3"/></expression></expression></expression><expression tag="Expression.Prepend"><expression tag="Symbolic.Symbol" Name="list"/><expression tag="Math.Number" Value="45"/></expression></expression></expression><expression tag="Formulae.Script.Row" type="1"><expression tag="Math.Number" Value="45"/></expression><expression tag="Formulae.Script.Row" type="0"><expression tag="Programming.Block" Description="Description" Expanded="True"><expression tag="Symbolic.Local"><expression tag="Symbolic.Assignment"><expression tag="Symbolic.Symbol" Name="list"/><expression tag="List.List"><expression tag="Symbolic.Symbol" Name="a"/><expression tag="Symbolic.Symbol" Name="b"/><expression tag="Symbolic.Symbol" Name="c"/><expression tag="Symbolic.Symbol" Name="d"/><expression tag="Symbolic.Symbol" Name="e"/></expression></expression></expression><expression tag="Expression.Delete"><expression tag="Symbolic.Symbol" Name="list"/><expression tag="Math.Number" Value="3"/></expression></expression></expression><expression tag="Formulae.Script.Row" type="1"><expression tag="Symbolic.Symbol" Name="c"/></expression><expression tag="Formulae.Script.Row" type="0"><expression tag="Typesetting.Paragraph"><expression tag="String.Text" Value="In the previous two examples, the lists were actually affected, but it was (intentionally) not shown."/></expression></expression><expression tag="Formulae.Script.Row" type="0"><expression tag="Typesetting.MultiParagraph"><expression tag="Typesetting.Paragraph"><expression tag="Typesetting.BoldChunk"><expression tag="String.Text" Value="Operations with lists, related to mathematics"/></expression></expression><expression tag="Typesetting.Paragraph"><expression tag="Typesetting.BoldChunk"><expression tag="String.Text" Value="(Arithmetic) Addition of lists"/></expression></expression><expression tag="Typesetting.Paragraph"><expression tag="String.Text" Value="Two (or more) lists can be arithmetically added. All the lists must have the same cardinality. The result is a list with such that cardinality with their elements added."/></expression><expression tag="Typesetting.Paragraph"><expression tag="String.Text" Value="Mathematically, list addition is like a"/><expression tag="Internet.UniformResourceLocator" Value="https://en.wikipedia.org/wiki/Euclidean_vector#Addition_and_subtraction" Description="addition of vectors:"/></expression></expression></expression><expression tag="Formulae.Script.Row" type="0"><expression tag="Math.Arithmetic.Addition"><expression tag="List.List"><expression tag="Symbolic.Symbol" Name="a"/><expression tag="Symbolic.Symbol" Name="b"/><expression tag="Symbolic.Symbol" Name="c"/></expression><expression tag="List.List"><expression tag="Math.Number" Value="1"/><expression tag="Math.Number" Value="2"/><expression tag="Math.Number" Value="3"/></expression></expression></expression><expression tag="Formulae.Script.Row" type="1"><expression tag="List.List"><expression tag="Math.Arithmetic.Addition"><expression tag="Math.Number" Value="1"/><expression tag="Symbolic.Symbol" Name="a"/></expression><expression tag="Math.Arithmetic.Addition"><expression tag="Math.Number" Value="2"/><expression tag="Symbolic.Symbol" Name="b"/></expression><expression tag="Math.Arithmetic.Addition"><expression tag="Math.Number" Value="3"/><expression tag="Symbolic.Symbol" Name="c"/></expression></expression></expression><expression tag="Formulae.Script.Row" type="0"><expression tag="Typesetting.MultiParagraph"><expression tag="Typesetting.Paragraph"><expression tag="Typesetting.BoldChunk"><expression tag="String.Text" Value="Dot product of lists"/></expression></expression><expression tag="Typesetting.Paragraph"><expression tag="String.Text" Value="You can perform a"/><expression tag="Internet.UniformResourceLocator" Value="https://en.wikipedia.org/wiki/Dot_product" Description="Dot (or scalar, or inner) product"/><expression tag="String.Text" Value="over two (or more lists). All the lists must have the same cardinality. Note that the result is not a list."/></expression><expression tag="Typesetting.Paragraph"><expression tag="String.Text" Value="Dot product of lists is visually represented as"/><expression tag="List.DotProduct"><expression tag="Symbolic.Symbol" Name="list1"/><expression tag="Symbolic.Symbol" Name="list2"/></expression></expression><expression tag="Typesetting.Paragraph"><expression tag="String.Text" Value="Mathematically, dot product of lists is like a dot (or scalar, or inner) product of vectors:"/></expression></expression></expression><expression tag="Formulae.Script.Row" type="0"><expression tag="List.DotProduct"><expression tag="List.List"><expression tag="Symbolic.Symbol" Name="a"/><expression tag="Symbolic.Symbol" Name="b"/><expression tag="Symbolic.Symbol" Name="c"/></expression><expression tag="List.List"><expression tag="Math.Number" Value="0"/><expression tag="Math.Number" Value="1"/><expression tag="Math.Number" Value="2"/></expression></expression></expression><expression tag="Formulae.Script.Row" type="1"><expression tag="Math.Arithmetic.Addition"><expression tag="Symbolic.Symbol" Name="b"/><expression tag="Math.Arithmetic.Multiplication"><expression tag="Math.Number" Value="2"/><expression tag="Symbolic.Symbol" Name="c"/></expression></expression></expression><expression tag="Formulae.Script.Row" type="0"><expression tag="Typesetting.MultiParagraph"><expression tag="Typesetting.Paragraph"><expression tag="Typesetting.BoldChunk"><expression tag="String.Text" Value="Outer product of lists"/></expression></expression><expression tag="Typesetting.Paragraph"><expression tag="String.Text" Value="You can perform an"/><expression tag="Internet.UniformResourceLocator" Value="https://en.wikipedia.org/wiki/Cross_product" Description="outer (or cross) product"/><expression tag="String.Text" Value="over two lists with the same cardinality"/></expression><expression tag="Typesetting.Paragraph"><expression tag="String.Text" Value="Outer product of lists is visually represented as"/><expression tag="List.OuterProduct"><expression tag="Symbolic.Symbol" Name="list1"/><expression tag="Symbolic.Symbol" Name="list2"/></expression></expression><expression tag="Typesetting.Paragraph"><expression tag="String.Text" Value="The result is a list with the same cardinality than the lists given as arguments."/></expression><expression tag="Typesetting.Paragraph"><expression tag="String.Text" Value="Mathematically, outer product of lists is like a outer (or cross) product of vectors:"/></expression></expression></expression><expression tag="Formulae.Script.Row" type="0"><expression tag="Typesetting.MultiParagraph"><expression tag="Typesetting.Paragraph"><expression tag="Typesetting.BoldChunk"><expression tag="String.Text" Value="Cartesian product of lists"/></expression></expression><expression tag="Typesetting.Paragraph"><expression tag="String.Text" Value="You can perform a"/><expression tag="Internet.UniformResourceLocator" Value="https://en.wikipedia.org/wiki/Cartesian_product" Description="cartesian product"/><expression tag="String.Text" Value="over two (or more lists). Lists can have different cardinalities. It retrieves all the possible combinations of the elements of the lists."/></expression><expression tag="Typesetting.Paragraph"><expression tag="String.Text" Value="Cartesian product of lists is visually represented as"/><expression tag="List.CartesianProduct"><expression tag="Symbolic.Symbol" Name="list1"/><expression tag="Symbolic.Symbol" Name="list2"/></expression></expression><expression tag="Typesetting.Paragraph"><expression tag="String.Text" Value="The result is a matrix, having as many columns as the number of lists being operated, and as many rows as the product of the cardinalities of their lists."/></expression><expression tag="Typesetting.Paragraph"><expression tag="String.Text" Value="Mathematically, cartesian product of lists is like a cartesian product of sets:"/></expression><expression tag="Typesetting.Paragraph"><expression tag="String.Text" Value="The following produces all the possible combinations of pairs where the first element is one of the numbers 1 and 2, and the second element is one of the strings &quot;x&quot; and &quot;y&quot;. It will produce 2 × 2 = 4 combinations:"/></expression></expression></expression><expression tag="Formulae.Script.Row" type="0"><expression tag="List.CartesianProduct"><expression tag="List.List"><expression tag="Math.Number" Value="1"/><expression tag="Math.Number" Value="2"/></expression><expression tag="List.List"><expression tag="String.String" Value="x"/><expression tag="String.String" Value="y"/></expression></expression></expression><expression tag="Formulae.Script.Row" type="1"><expression tag="List.List"><expression tag="List.List"><expression tag="Math.Number" Value="1"/><expression tag="String.String" Value="x"/></expression><expression tag="List.List"><expression tag="Math.Number" Value="1"/><expression tag="String.String" Value="y"/></expression><expression tag="List.List"><expression tag="Math.Number" Value="2"/><expression tag="String.String" Value="x"/></expression><expression tag="List.List"><expression tag="Math.Number" Value="2"/><expression tag="String.String" Value="y"/></expression></expression></expression><expression tag="Formulae.Script.Row" type="0"><expression tag="Typesetting.Paragraph"><expression tag="String.Text" Value="In the following example, we have three lists, so the result is triplets. The number or possible combinations are 3 × 2 × 2 = 12"/></expression></expression><expression tag="Formulae.Script.Row" type="0"><expression tag="List.CartesianProduct"><expression tag="List.List"><expression tag="Math.Number" Value="1"/><expression tag="Math.Number" Value="2"/><expression tag="Math.Number" Value="3"/></expression><expression tag="List.List"><expression tag="Symbolic.Symbol" Name="a"/><expression tag="Symbolic.Symbol" Name="b"/></expression><expression tag="List.List"><expression tag="Logic.True"/><expression tag="Logic.False"/></expression></expression></expression><expression tag="Formulae.Script.Row" type="1"><expression tag="List.List"><expression tag="List.List"><expression tag="Math.Number" Value="1"/><expression tag="Symbolic.Symbol" Name="a"/><expression tag="Logic.True"/></expression><expression tag="List.List"><expression tag="Math.Number" Value="1"/><expression tag="Symbolic.Symbol" Name="a"/><expression tag="Logic.False"/></expression><expression tag="List.List"><expression tag="Math.Number" Value="1"/><expression tag="Symbolic.Symbol" Name="b"/><expression tag="Logic.True"/></expression><expression tag="List.List"><expression tag="Math.Number" Value="1"/><expression tag="Symbolic.Symbol" Name="b"/><expression tag="Logic.False"/></expression><expression tag="List.List"><expression tag="Math.Number" Value="2"/><expression tag="Symbolic.Symbol" Name="a"/><expression tag="Logic.True"/></expression><expression tag="List.List"><expression tag="Math.Number" Value="2"/><expression tag="Symbolic.Symbol" Name="a"/><expression tag="Logic.False"/></expression><expression tag="List.List"><expression tag="Math.Number" Value="2"/><expression tag="Symbolic.Symbol" Name="b"/><expression tag="Logic.True"/></expression><expression tag="List.List"><expression tag="Math.Number" Value="2"/><expression tag="Symbolic.Symbol" Name="b"/><expression tag="Logic.False"/></expression><expression tag="List.List"><expression tag="Math.Number" Value="3"/><expression tag="Symbolic.Symbol" Name="a"/><expression tag="Logic.True"/></expression><expression tag="List.List"><expression tag="Math.Number" Value="3"/><expression tag="Symbolic.Symbol" Name="a"/><expression tag="Logic.False"/></expression><expression tag="List.List"><expression tag="Math.Number" Value="3"/><expression tag="Symbolic.Symbol" Name="b"/><expression tag="Logic.True"/></expression><expression tag="List.List"><expression tag="Math.Number" Value="3"/><expression tag="Symbolic.Symbol" Name="b"/><expression tag="Logic.False"/></expression></expression></expression><expression tag="Formulae.Script.Row" type="0"><expression tag="Typesetting.MultiParagraph"><expression tag="Typesetting.Paragraph"><expression tag="Typesetting.BoldChunk"><expression tag="String.Text" Value="Cartesian exponentiation of a list"/></expression></expression><expression tag="Typesetting.Paragraph"><expression tag="String.Text" Value="The cartesian exponentiation is an analogous operation of the arithmetic exponentiation. If you want to perform a cartesian product over the same list it could be convenient to use a cartesian exponentiation instead. So the cartesian exponentiation"/><expression tag="List.CartesianExponentiation"><expression tag="Symbolic.Symbol" Name="list"/><expression tag="Symbolic.Symbol" Name="n"/></expression><expression tag="String.Text" Value="is a shorthand for"/><expression tag="List.CartesianProduct"><expression tag="Symbolic.Symbol" Name="list"/><expression tag="Symbolic.Symbol" Name="list"/><expression tag="String.Text" Value=". . ."/><expression tag="Symbolic.Symbol" Name="list"/></expression><expression tag="String.Text" Value="(n times)."/></expression><expression tag="Typesetting.Paragraph"><expression tag="String.Text" Value="The result is a matrix, having as many columns as the exponent, and as many rows as"/><expression tag="Math.Arithmetic.Exponentiation"><expression tag="Symbolic.Symbol" Name="c"/><expression tag="Symbolic.Symbol" Name="e"/></expression><expression tag="String.Text" Value="where c is the cardinality of the list, and e is the exponent."/></expression><expression tag="Typesetting.Paragraph"><expression tag="String.Text" Value="In the following example, the resulting matrix has 3 columns (the exponent), and the number of rows is"/><expression tag="Relation.Equals"><expression tag="Math.Arithmetic.Exponentiation"><expression tag="Math.Number" Value="2"/><expression tag="Math.Number" Value="3"/></expression><expression tag="Math.Number" Value="8"/></expression></expression></expression></expression><expression tag="Formulae.Script.Row" type="0"><expression tag="List.CartesianExponentiation"><expression tag="List.List"><expression tag="Logic.True"/><expression tag="Logic.False"/></expression><expression tag="Math.Number" Value="3"/></expression></expression><expression tag="Formulae.Script.Row" type="1"><expression tag="List.List"><expression tag="List.List"><expression tag="Logic.True"/><expression tag="Logic.True"/><expression tag="Logic.True"/></expression><expression tag="List.List"><expression tag="Logic.True"/><expression tag="Logic.True"/><expression tag="Logic.False"/></expression><expression tag="List.List"><expression tag="Logic.True"/><expression tag="Logic.False"/><expression tag="Logic.True"/></expression><expression tag="List.List"><expression tag="Logic.True"/><expression tag="Logic.False"/><expression tag="Logic.False"/></expression><expression tag="List.List"><expression tag="Logic.False"/><expression tag="Logic.True"/><expression tag="Logic.True"/></expression><expression tag="List.List"><expression tag="Logic.False"/><expression tag="Logic.True"/><expression tag="Logic.False"/></expression><expression tag="List.List"><expression tag="Logic.False"/><expression tag="Logic.False"/><expression tag="Logic.True"/></expression><expression tag="List.List"><expression tag="Logic.False"/><expression tag="Logic.False"/><expression tag="Logic.False"/></expression></expression></expression><expression tag="Formulae.Script.Row" type="0"><expression tag="Typesetting.MultiParagraph"><expression tag="Typesetting.Paragraph"><expression tag="Typesetting.BoldChunk"><expression tag="String.Text" Value="Power set of a list"/></expression></expression><expression tag="Typesetting.Paragraph"><expression tag="String.Text" Value="The"/><expression tag="Internet.UniformResourceLocator" Value="https://en.wikipedia.org/wiki/Power_set" Description="power set"/><expression tag="String.Text" Value="expression operates on a given list. It retrieves all the possible"/><expression tag="Internet.UniformResourceLocator" Value="https://en.wikipedia.org/wiki/Subset" Description="subsets"/><expression tag="String.Text" Value="of the list. It is visualized as"/><expression tag="List.PowerSet"><expression tag="Symbolic.Symbol" Name="list"/></expression></expression><expression tag="Typesetting.Paragraph"><expression tag="String.Text" Value="The result is a list of lists that is never shown as a matrix because its sublists are never of the same size (all of them). The number of sublist is"/><expression tag="Math.Arithmetic.Exponentiation"><expression tag="Math.Number" Value="2"/><expression tag="Symbolic.Symbol" Name="c"/></expression><expression tag="String.Text" Value="where c is the cardinality of the list."/></expression><expression tag="Typesetting.Paragraph"><expression tag="String.Text" Value="Mathematically, the power set of lists is like the power set of sets:"/></expression><expression tag="Typesetting.Paragraph"><expression tag="String.Text" Value="Note that the resulting list always contains both the originated list and the empty list."/></expression></expression></expression><expression tag="Formulae.Script.Row" type="0"><expression tag="List.PowerSet"><expression tag="List.List"><expression tag="Math.Number" Value="1"/><expression tag="Math.Number" Value="2"/><expression tag="Math.Number" Value="3"/></expression></expression></expression><expression tag="Formulae.Script.Row" type="1"><expression tag="List.List"><expression tag="List.List"><expression tag="Math.Number" Value="1"/><expression tag="Math.Number" Value="2"/><expression tag="Math.Number" Value="3"/></expression><expression tag="List.List"><expression tag="Math.Number" Value="1"/><expression tag="Math.Number" Value="2"/></expression><expression tag="List.List"><expression tag="Math.Number" Value="1"/><expression tag="Math.Number" Value="3"/></expression><expression tag="List.List"><expression tag="Math.Number" Value="1"/></expression><expression tag="List.List"><expression tag="Math.Number" Value="2"/><expression tag="Math.Number" Value="3"/></expression><expression tag="List.List"><expression tag="Math.Number" Value="2"/></expression><expression tag="List.List"><expression tag="Math.Number" Value="3"/></expression><expression tag="List.List"/></expression></expression><expression tag="Formulae.Script.Row" type="0"><expression tag="List.PowerSet"><expression tag="List.List"><expression tag="Symbolic.Symbol" Name="a"/><expression tag="Symbolic.Symbol" Name="b"/><expression tag="Symbolic.Symbol" Name="c"/><expression tag="Symbolic.Symbol" Name="d"/></expression></expression></expression><expression tag="Formulae.Script.Row" type="1"><expression tag="List.List"><expression tag="List.List"><expression tag="Symbolic.Symbol" Name="a"/><expression tag="Symbolic.Symbol" Name="b"/><expression tag="Symbolic.Symbol" Name="c"/><expression tag="Symbolic.Symbol" Name="d"/></expression><expression tag="List.List"><expression tag="Symbolic.Symbol" Name="a"/><expression tag="Symbolic.Symbol" Name="b"/><expression tag="Symbolic.Symbol" Name="c"/></expression><expression tag="List.List"><expression tag="Symbolic.Symbol" Name="a"/><expression tag="Symbolic.Symbol" Name="b"/><expression tag="Symbolic.Symbol" Name="d"/></expression><expression tag="List.List"><expression tag="Symbolic.Symbol" Name="a"/><expression tag="Symbolic.Symbol" Name="b"/></expression><expression tag="List.List"><expression tag="Symbolic.Symbol" Name="a"/><expression tag="Symbolic.Symbol" Name="c"/><expression tag="Symbolic.Symbol" Name="d"/></expression><expression tag="List.List"><expression tag="Symbolic.Symbol" Name="a"/><expression tag="Symbolic.Symbol" Name="c"/></expression><expression tag="List.List"><expression tag="Symbolic.Symbol" Name="a"/><expression tag="Symbolic.Symbol" Name="d"/></expression><expression tag="List.List"><expression tag="Symbolic.Symbol" Name="a"/></expression><expression tag="List.List"><expression tag="Symbolic.Symbol" Name="b"/><expression tag="Symbolic.Symbol" Name="c"/><expression tag="Symbolic.Symbol" Name="d"/></expression><expression tag="List.List"><expression tag="Symbolic.Symbol" Name="b"/><expression tag="Symbolic.Symbol" Name="c"/></expression><expression tag="List.List"><expression tag="Symbolic.Symbol" Name="b"/><expression tag="Symbolic.Symbol" Name="d"/></expression><expression tag="List.List"><expression tag="Symbolic.Symbol" Name="b"/></expression><expression tag="List.List"><expression tag="Symbolic.Symbol" Name="c"/><expression tag="Symbolic.Symbol" Name="d"/></expression><expression tag="List.List"><expression tag="Symbolic.Symbol" Name="c"/></expression><expression tag="List.List"><expression tag="Symbolic.Symbol" Name="d"/></expression><expression tag="List.List"/></expression></expression><expression tag="Formulae.Script.Row" type="0"><expression tag="Typesetting.MultiParagraph"><expression tag="Typesetting.Paragraph"><expression tag="Typesetting.BoldChunk"><expression tag="String.Text" Value="Operation with matrices"/></expression></expression><expression tag="Typesetting.Paragraph"><expression tag="Typesetting.BoldChunk"><expression tag="String.Text" Value="Addition of matrices"/></expression></expression><expression tag="Typesetting.Paragraph"><expression tag="String.Text" Value="Two or more matrices can be added. They must be of same dimensions, they must have the same number of rows and columns."/></expression></expression></expression><expression tag="Formulae.Script.Row" type="0"><expression tag="Math.Arithmetic.Addition"><expression tag="List.List"><expression tag="List.List"><expression tag="Symbolic.Symbol" Name="a"/><expression tag="Symbolic.Symbol" Name="b"/></expression><expression tag="List.List"><expression tag="Symbolic.Symbol" Name="c"/><expression tag="Symbolic.Symbol" Name="d"/></expression></expression><expression tag="List.List"><expression tag="List.List"><expression tag="Math.Number" Value="1"/><expression tag="Math.Number" Value="2"/></expression><expression tag="List.List"><expression tag="Math.Number" Value="3"/><expression tag="Math.Number" Value="4"/></expression></expression></expression></expression><expression tag="Formulae.Script.Row" type="1"><expression tag="List.List"><expression tag="List.List"><expression tag="Math.Arithmetic.Addition"><expression tag="Math.Number" Value="1"/><expression tag="Symbolic.Symbol" Name="a"/></expression><expression tag="Math.Arithmetic.Addition"><expression tag="Math.Number" Value="2"/><expression tag="Symbolic.Symbol" Name="b"/></expression></expression><expression tag="List.List"><expression tag="Math.Arithmetic.Addition"><expression tag="Math.Number" Value="3"/><expression tag="Symbolic.Symbol" Name="c"/></expression><expression tag="Math.Arithmetic.Addition"><expression tag="Math.Number" Value="4"/><expression tag="Symbolic.Symbol" Name="d"/></expression></expression></expression></expression><expression tag="Formulae.Script.Row" type="0"><expression tag="Typesetting.Paragraph"><expression tag="String.Text" Value="It is a mere consecuence of list addition. Let us take the last example"/><expression tag="Math.Arithmetic.Addition"><expression tag="List.List"><expression tag="List.List"><expression tag="Symbolic.Symbol" Name="a"/><expression tag="Symbolic.Symbol" Name="b"/></expression><expression tag="List.List"><expression tag="Symbolic.Symbol" Name="c"/><expression tag="Symbolic.Symbol" Name="d"/></expression></expression><expression tag="List.List"><expression tag="List.List"><expression tag="Math.Number" Value="1"/><expression tag="Math.Number" Value="2"/></expression><expression tag="List.List"><expression tag="Math.Number" Value="3"/><expression tag="Math.Number" Value="4"/></expression></expression></expression><expression tag="String.Text" Value=". Remember that matrices are also lists, so the addition of these lists converts the last expression in"/><expression tag="List.List"><expression tag="List.List"><expression tag="Math.Arithmetic.Addition"><expression tag="List.List"><expression tag="Symbolic.Symbol" Name="a"/><expression tag="Symbolic.Symbol" Name="b"/></expression><expression tag="List.List"><expression tag="Math.Number" Value="1"/><expression tag="Math.Number" Value="2"/></expression></expression></expression><expression tag="List.List"><expression tag="Math.Arithmetic.Addition"><expression tag="List.List"><expression tag="Symbolic.Symbol" Name="c"/><expression tag="Symbolic.Symbol" Name="d"/></expression><expression tag="List.List"><expression tag="Math.Number" Value="3"/><expression tag="Math.Number" Value="4"/></expression></expression></expression></expression><expression tag="String.Text" Value="There is  again an addition of lists, so it is finally converted to"/><expression tag="List.List"><expression tag="List.List"><expression tag="Math.Arithmetic.Addition"><expression tag="Math.Number" Value="1"/><expression tag="Symbolic.Symbol" Name="a"/></expression><expression tag="Math.Arithmetic.Addition"><expression tag="Math.Number" Value="2"/><expression tag="Symbolic.Symbol" Name="b"/></expression></expression><expression tag="List.List"><expression tag="Math.Arithmetic.Addition"><expression tag="Math.Number" Value="3"/><expression tag="Symbolic.Symbol" Name="c"/></expression><expression tag="Math.Arithmetic.Addition"><expression tag="Math.Number" Value="4"/><expression tag="Symbolic.Symbol" Name="d"/></expression></expression></expression></expression></expression><expression tag="Formulae.Script.Row" type="0"><expression tag="Typesetting.MultiParagraph"><expression tag="Typesetting.Paragraph"><expression tag="Typesetting.BoldChunk"><expression tag="String.Text" Value="Multiplication of matrices"/></expression></expression><expression tag="Typesetting.Paragraph"><expression tag="Internet.UniformResourceLocator" Value="https://en.wikipedia.org/wiki/Matrix_multiplication" Description="Matrix multiplication"/><expression tag="String.Text" Value="can be performed between two or more matrices."/></expression></expression></expression><expression tag="Formulae.Script.Row" type="0"><expression tag="Math.Arithmetic.Multiplication"><expression tag="List.List"><expression tag="List.List"><expression tag="Math.Number" Value="1"/><expression tag="Math.Number" Value="2"/></expression><expression tag="List.List"><expression tag="Math.Number" Value="3"/><expression tag="Math.Number" Value="4"/></expression><expression tag="List.List"><expression tag="Math.Number" Value="5"/><expression tag="Math.Number" Value="6"/></expression></expression><expression tag="List.List"><expression tag="List.List"><expression tag="Math.Number" Value="5"/><expression tag="Math.Arithmetic.Division"><expression tag="Math.Number" Value="3"/><expression tag="Math.Number" Value="5"/></expression><expression tag="Math.Number" Value="7"/></expression><expression tag="List.List"><expression tag="Math.Number" Value="7"/><expression tag="Math.Number" Value="8"/><expression tag="Symbolic.Symbol" Name="x"/></expression></expression></expression></expression><expression tag="Formulae.Script.Row" type="1"><expression tag="List.List"><expression tag="List.List"><expression tag="Math.Number" Value="19"/><expression tag="Math.Arithmetic.Division"><expression tag="Math.Number" Value="83"/><expression tag="Math.Number" Value="5"/></expression><expression tag="Math.Arithmetic.Addition"><expression tag="Math.Number" Value="7"/><expression tag="Math.Arithmetic.Multiplication"><expression tag="Math.Number" Value="2"/><expression tag="Symbolic.Symbol" Name="x"/></expression></expression></expression><expression tag="List.List"><expression tag="Math.Number" Value="43"/><expression tag="Math.Arithmetic.Division"><expression tag="Math.Number" Value="169"/><expression tag="Math.Number" Value="5"/></expression><expression tag="Math.Arithmetic.Addition"><expression tag="Math.Number" Value="21"/><expression tag="Math.Arithmetic.Multiplication"><expression tag="Math.Number" Value="4"/><expression tag="Symbolic.Symbol" Name="x"/></expression></expression></expression><expression tag="List.List"><expression tag="Math.Number" Value="67"/><expression tag="Math.Number" Value="51"/><expression tag="Math.Arithmetic.Addition"><expression tag="Math.Number" Value="35"/><expression tag="Math.Arithmetic.Multiplication"><expression tag="Math.Number" Value="6"/><expression tag="Symbolic.Symbol" Name="x"/></expression></expression></expression></expression></expression><expression tag="Formulae.Script.Row" type="0"><expression tag="Typesetting.MultiParagraph"><expression tag="Typesetting.Paragraph"><expression tag="Typesetting.BoldChunk"><expression tag="String.Text" Value="Transpose of a matrix"/></expression></expression><expression tag="Typesetting.Paragraph"><expression tag="Internet.UniformResourceLocator" Value="https://en.wikipedia.org/wiki/Transpose" Description="Matrix transpose,"/><expression tag="String.Text" Value="shown as"/><expression tag="Math.Matrix.Transpose"><expression tag="Symbolic.Symbol" Name="M"/></expression><expression tag="String.Text" Value="can also be performed."/></expression><expression tag="Typesetting.Paragraph"><expression tag="String.Text" Value="The matrix can be of any size."/></expression></expression></expression><expression tag="Formulae.Script.Row" type="0"><expression tag="Math.Matrix.Transpose"><expression tag="List.List"><expression tag="List.List"><expression tag="Math.Number" Value="1"/><expression tag="Math.Number" Value="2"/><expression tag="Math.Number" Value="3"/></expression><expression tag="List.List"><expression tag="Symbolic.Symbol" Name="a"/><expression tag="Symbolic.Symbol" Name="b"/><expression tag="Symbolic.Symbol" Name="c"/></expression></expression></expression></expression><expression tag="Formulae.Script.Row" type="1"><expression tag="List.List"><expression tag="List.List"><expression tag="Math.Number" Value="1"/><expression tag="Symbolic.Symbol" Name="a"/></expression><expression tag="List.List"><expression tag="Math.Number" Value="2"/><expression tag="Symbolic.Symbol" Name="b"/></expression><expression tag="List.List"><expression tag="Math.Number" Value="3"/><expression tag="Symbolic.Symbol" Name="c"/></expression></expression></expression><expression tag="Formulae.Script.Row" type="0"><expression tag="Typesetting.Paragraph"><expression tag="String.Text" Value="Example. We want to generate a representation of all the 52 -card deck using a cartesian product between the list of the ranks"/><expression tag="List.List"><expression tag="String.Text" Value="A"/><expression tag="String.Text" Value="2"/><expression tag="String.Text" Value="3"/><expression tag="String.Text" Value="4"/><expression tag="String.Text" Value="5"/><expression tag="String.Text" Value="6"/><expression tag="String.Text" Value="7"/><expression tag="String.Text" Value="8"/><expression tag="String.Text" Value="9"/><expression tag="String.Text" Value="10"/><expression tag="String.Text" Value="J"/><expression tag="String.Text" Value="Q"/><expression tag="String.Text" Value="K"/></expression><expression tag="String.Text" Value="and the list of suites"/><expression tag="List.List"><expression tag="String.Text" Value="♠"/><expression tag="Visualization.Color" Red="1" Green="0" Blue="0" Alpha="1"><expression tag="String.Text" Value="♦"/></expression><expression tag="Visualization.Color" Red="1" Green="0" Blue="0" Alpha="1"><expression tag="String.Text" Value="♥"/></expression><expression tag="String.Text" Value="♣"/></expression><expression tag="String.Text" Value=". It will generate a matrix of 52 rows by 2 columns. Let us transpose the matrix in order to show the result horizontally."/></expression></expression><expression tag="Formulae.Script.Row" type="0"><expression tag="Math.Matrix.Transpose"><expression tag="List.CartesianProduct"><expression tag="List.List"><expression tag="String.Text" Value="A"/><expression tag="String.Text" Value="2"/><expression tag="String.Text" Value="3"/><expression tag="String.Text" Value="4"/><expression tag="String.Text" Value="5"/><expression tag="String.Text" Value="6"/><expression tag="String.Text" Value="7"/><expression tag="String.Text" Value="8"/><expression tag="String.Text" Value="9"/><expression tag="String.Text" Value="10"/><expression tag="String.Text" Value="J"/><expression tag="String.Text" Value="Q"/><expression tag="String.Text" Value="K"/></expression><expression tag="List.List"><expression tag="String.Text" Value="♠"/><expression tag="Visualization.Color" Red="1" Green="0" Blue="0" Alpha="1"><expression tag="String.Text" Value="♦"/></expression><expression tag="Visualization.Color" Red="1" Green="0" Blue="0" Alpha="1"><expression tag="String.Text" Value="♥"/></expression><expression tag="String.Text" Value="♣"/></expression></expression></expression></expression><expression tag="Formulae.Script.Row" type="1"><expression tag="List.List"><expression tag="List.List"><expression tag="String.Text" Value="A"/><expression tag="String.Text" Value="A"/><expression tag="String.Text" Value="A"/><expression tag="String.Text" Value="A"/><expression tag="String.Text" Value="2"/><expression tag="String.Text" Value="2"/><expression tag="String.Text" Value="2"/><expression tag="String.Text" Value="2"/><expression tag="String.Text" Value="3"/><expression tag="String.Text" Value="3"/><expression tag="String.Text" Value="3"/><expression tag="String.Text" Value="3"/><expression tag="String.Text" Value="4"/><expression tag="String.Text" Value="4"/><expression tag="String.Text" Value="4"/><expression tag="String.Text" Value="4"/><expression tag="String.Text" Value="5"/><expression tag="String.Text" Value="5"/><expression tag="String.Text" Value="5"/><expression tag="String.Text" Value="5"/><expression tag="String.Text" Value="6"/><expression tag="String.Text" Value="6"/><expression tag="String.Text" Value="6"/><expression tag="String.Text" Value="6"/><expression tag="String.Text" Value="7"/><expression tag="String.Text" Value="7"/><expression tag="String.Text" Value="7"/><expression tag="String.Text" Value="7"/><expression tag="String.Text" Value="8"/><expression tag="String.Text" Value="8"/><expression tag="String.Text" Value="8"/><expression tag="String.Text" Value="8"/><expression tag="String.Text" Value="9"/><expression tag="String.Text" Value="9"/><expression tag="String.Text" Value="9"/><expression tag="String.Text" Value="9"/><expression tag="String.Text" Value="10"/><expression tag="String.Text" Value="10"/><expression tag="String.Text" Value="10"/><expression tag="String.Text" Value="10"/><expression tag="String.Text" Value="J"/><expression tag="String.Text" Value="J"/><expression tag="String.Text" Value="J"/><expression tag="String.Text" Value="J"/><expression tag="String.Text" Value="Q"/><expression tag="String.Text" Value="Q"/><expression tag="String.Text" Value="Q"/><expression tag="String.Text" Value="Q"/><expression tag="String.Text" Value="K"/><expression tag="String.Text" Value="K"/><expression tag="String.Text" Value="K"/><expression tag="String.Text" Value="K"/></expression><expression tag="List.List"><expression tag="String.Text" Value="♠"/><expression tag="Visualization.Color" Red="1" Green="0" Blue="0" Alpha="1"><expression tag="String.Text" Value="♦"/></expression><expression tag="Visualization.Color" Red="1" Green="0" Blue="0" Alpha="1"><expression tag="String.Text" Value="♥"/></expression><expression tag="String.Text" Value="♣"/><expression tag="String.Text" Value="♠"/><expression tag="Visualization.Color" Red="1" Green="0" Blue="0" Alpha="1"><expression tag="String.Text" Value="♦"/></expression><expression tag="Visualization.Color" Red="1" Green="0" Blue="0" Alpha="1"><expression tag="String.Text" Value="♥"/></expression><expression tag="String.Text" Value="♣"/><expression tag="String.Text" Value="♠"/><expression tag="Visualization.Color" Red="1" Green="0" Blue="0" Alpha="1"><expression tag="String.Text" Value="♦"/></expression><expression tag="Visualization.Color" Red="1" Green="0" Blue="0" Alpha="1"><expression tag="String.Text" Value="♥"/></expression><expression tag="String.Text" Value="♣"/><expression tag="String.Text" Value="♠"/><expression tag="Visualization.Color" Red="1" Green="0" Blue="0" Alpha="1"><expression tag="String.Text" Value="♦"/></expression><expression tag="Visualization.Color" Red="1" Green="0" Blue="0" Alpha="1"><expression tag="String.Text" Value="♥"/></expression><expression tag="String.Text" Value="♣"/><expression tag="String.Text" Value="♠"/><expression tag="Visualization.Color" Red="1" Green="0" Blue="0" Alpha="1"><expression tag="String.Text" Value="♦"/></expression><expression tag="Visualization.Color" Red="1" Green="0" Blue="0" Alpha="1"><expression tag="String.Text" Value="♥"/></expression><expression tag="String.Text" Value="♣"/><expression tag="String.Text" Value="♠"/><expression tag="Visualization.Color" Red="1" Green="0" Blue="0" Alpha="1"><expression tag="String.Text" Value="♦"/></expression><expression tag="Visualization.Color" Red="1" Green="0" Blue="0" Alpha="1"><expression tag="String.Text" Value="♥"/></expression><expression tag="String.Text" Value="♣"/><expression tag="String.Text" Value="♠"/><expression tag="Visualization.Color" Red="1" Green="0" Blue="0" Alpha="1"><expression tag="String.Text" Value="♦"/></expression><expression tag="Visualization.Color" Red="1" Green="0" Blue="0" Alpha="1"><expression tag="String.Text" Value="♥"/></expression><expression tag="String.Text" Value="♣"/><expression tag="String.Text" Value="♠"/><expression tag="Visualization.Color" Red="1" Green="0" Blue="0" Alpha="1"><expression tag="String.Text" Value="♦"/></expression><expression tag="Visualization.Color" Red="1" Green="0" Blue="0" Alpha="1"><expression tag="String.Text" Value="♥"/></expression><expression tag="String.Text" Value="♣"/><expression tag="String.Text" Value="♠"/><expression tag="Visualization.Color" Red="1" Green="0" Blue="0" Alpha="1"><expression tag="String.Text" Value="♦"/></expression><expression tag="Visualization.Color" Red="1" Green="0" Blue="0" Alpha="1"><expression tag="String.Text" Value="♥"/></expression><expression tag="String.Text" Value="♣"/><expression tag="String.Text" Value="♠"/><expression tag="Visualization.Color" Red="1" Green="0" Blue="0" Alpha="1"><expression tag="String.Text" Value="♦"/></expression><expression tag="Visualization.Color" Red="1" Green="0" Blue="0" Alpha="1"><expression tag="String.Text" Value="♥"/></expression><expression tag="String.Text" Value="♣"/><expression tag="String.Text" Value="♠"/><expression tag="Visualization.Color" Red="1" Green="0" Blue="0" Alpha="1"><expression tag="String.Text" Value="♦"/></expression><expression tag="Visualization.Color" Red="1" Green="0" Blue="0" Alpha="1"><expression tag="String.Text" Value="♥"/></expression><expression tag="String.Text" Value="♣"/><expression tag="String.Text" Value="♠"/><expression tag="Visualization.Color" Red="1" Green="0" Blue="0" Alpha="1"><expression tag="String.Text" Value="♦"/></expression><expression tag="Visualization.Color" Red="1" Green="0" Blue="0" Alpha="1"><expression tag="String.Text" Value="♥"/></expression><expression tag="String.Text" Value="♣"/><expression tag="String.Text" Value="♠"/><expression tag="Visualization.Color" Red="1" Green="0" Blue="0" Alpha="1"><expression tag="String.Text" Value="♦"/></expression><expression tag="Visualization.Color" Red="1" Green="0" Blue="0" Alpha="1"><expression tag="String.Text" Value="♥"/></expression><expression tag="String.Text" Value="♣"/></expression></expression></expression><expression tag="Formulae.Script.Row" type="0"><expression tag="Typesetting.MultiParagraph"><expression tag="Typesetting.Paragraph"><expression tag="Typesetting.BoldChunk"><expression tag="String.Text" Value="Determinant of a matrix"/></expression></expression><expression tag="Typesetting.Paragraph"><expression tag="String.Text" Value="A"/><expression tag="Internet.UniformResourceLocator" Value="https://en.wikipedia.org/wiki/Determinant" Description="matrix determinant,"/><expression tag="String.Text" Value="shown as"/><expression tag="Math.Matrix.Determinant"><expression tag="Symbolic.Symbol" Name="M"/></expression><expression tag="String.Text" Value="can be calculated:"/></expression><expression tag="Typesetting.Paragraph"><expression tag="String.Text" Value="The matrix must be a square matrix, it must have the same number of rows than columns."/></expression></expression></expression><expression tag="Formulae.Script.Row" type="0"><expression tag="Math.Matrix.Determinant"><expression tag="List.List"><expression tag="List.List"><expression tag="Math.Number" Value="0"/><expression tag="Math.Number" Value="5"/><expression tag="Math.Arithmetic.Negative"><expression tag="Math.Number" Value="3"/></expression></expression><expression tag="List.List"><expression tag="Math.Number" Value="1"/><expression tag="Math.Arithmetic.Division"><expression tag="Math.Number" Value="2"/><expression tag="Math.Number" Value="3"/></expression><expression tag="Math.Number" Value="8"/></expression><expression tag="List.List"><expression tag="Math.Arithmetic.Division"><expression tag="Math.Number" Value="10"/><expression tag="Math.Number" Value="37"/></expression><expression tag="Math.Arithmetic.Negative"><expression tag="Math.Number" Value="10"/></expression><expression tag="Math.Number" Value="83"/></expression></expression></expression></expression><expression tag="Formulae.Script.Row" type="1"><expression tag="Math.Arithmetic.Negative"><expression tag="Math.Arithmetic.Division"><expression tag="Math.Number" Value="13825"/><expression tag="Math.Number" Value="37"/></expression></expression></expression><expression tag="Formulae.Script.Row" type="0"><expression tag="Typesetting.MultiParagraph"><expression tag="Typesetting.Paragraph"><expression tag="Typesetting.BoldChunk"><expression tag="String.Text" Value="Kronecker product of matrices"/></expression></expression><expression tag="Typesetting.Paragraph"><expression tag="String.Text" Value="You can perform an"/><expression tag="Internet.UniformResourceLocator" Value="https://en.wikipedia.org/wiki/Kronecker_product" Description="Kronecker product"/><expression tag="String.Text" Value="over two matrices of arbitrary size."/></expression><expression tag="Typesetting.Paragraph"><expression tag="String.Text" Value="Kronecker product two matrices is visually represented as"/><expression tag="Math.Matrix.KroneckerProduct"><expression tag="Symbolic.Symbol" Name="M1"/><expression tag="Symbolic.Symbol" Name="M2"/></expression></expression><expression tag="Typesetting.Paragraph"><expression tag="String.Text" Value="The result is a matrix with as many rows as the multiplication of the number of rows of the first matrix by the number of rows of the second one. The same happens with columns."/></expression></expression></expression><expression tag="Formulae.Script.Row" type="0"><expression tag="Math.Matrix.KroneckerProduct"><expression tag="List.List"><expression tag="List.List"><expression tag="Math.Number" Value="1"/><expression tag="Math.Arithmetic.Negative"><expression tag="Math.Number" Value="4"/></expression><expression tag="Math.Number" Value="7"/></expression><expression tag="List.List"><expression tag="Math.Arithmetic.Negative"><expression tag="Math.Number" Value="2"/></expression><expression tag="Math.Number" Value="3"/><expression tag="Math.Number" Value="3"/></expression></expression><expression tag="List.List"><expression tag="List.List"><expression tag="Math.Number" Value="8"/><expression tag="Math.Arithmetic.Negative"><expression tag="Math.Number" Value="9"/></expression><expression tag="Math.Arithmetic.Negative"><expression tag="Math.Number" Value="6"/></expression><expression tag="Math.Number" Value="5"/></expression><expression tag="List.List"><expression tag="Math.Number" Value="1"/><expression tag="Math.Arithmetic.Negative"><expression tag="Math.Number" Value="3"/></expression><expression tag="Math.Arithmetic.Negative"><expression tag="Math.Number" Value="4"/></expression><expression tag="Math.Number" Value="7"/></expression><expression tag="List.List"><expression tag="Math.Number" Value="2"/><expression tag="Math.Arithmetic.Negative"><expression tag="Math.Number" Value="8"/></expression><expression tag="Math.Arithmetic.Negative"><expression tag="Math.Number" Value="8"/></expression><expression tag="Math.Number" Value="3"/></expression><expression tag="List.List"><expression tag="Math.Number" Value="1"/><expression tag="Math.Number" Value="2"/><expression tag="Math.Arithmetic.Negative"><expression tag="Math.Number" Value="5"/></expression><expression tag="Math.Arithmetic.Negative"><expression tag="Math.Number" Value="1"/></expression></expression></expression></expression></expression><expression tag="Formulae.Script.Row" type="1"><expression tag="List.List"><expression tag="List.List"><expression tag="Math.Number" Value="8"/><expression tag="Math.Arithmetic.Negative"><expression tag="Math.Number" Value="9"/></expression><expression tag="Math.Arithmetic.Negative"><expression tag="Math.Number" Value="6"/></expression><expression tag="Math.Number" Value="5"/><expression tag="Math.Arithmetic.Negative"><expression tag="Math.Number" Value="32"/></expression><expression tag="Math.Number" Value="36"/><expression tag="Math.Number" Value="24"/><expression tag="Math.Arithmetic.Negative"><expression tag="Math.Number" Value="20"/></expression><expression tag="Math.Number" Value="56"/><expression tag="Math.Arithmetic.Negative"><expression tag="Math.Number" Value="63"/></expression><expression tag="Math.Arithmetic.Negative"><expression tag="Math.Number" Value="42"/></expression><expression tag="Math.Number" Value="35"/></expression><expression tag="List.List"><expression tag="Math.Number" Value="1"/><expression tag="Math.Arithmetic.Negative"><expression tag="Math.Number" Value="3"/></expression><expression tag="Math.Arithmetic.Negative"><expression tag="Math.Number" Value="4"/></expression><expression tag="Math.Number" Value="7"/><expression tag="Math.Arithmetic.Negative"><expression tag="Math.Number" Value="4"/></expression><expression tag="Math.Number" Value="12"/><expression tag="Math.Number" Value="16"/><expression tag="Math.Arithmetic.Negative"><expression tag="Math.Number" Value="28"/></expression><expression tag="Math.Number" Value="7"/><expression tag="Math.Arithmetic.Negative"><expression tag="Math.Number" Value="21"/></expression><expression tag="Math.Arithmetic.Negative"><expression tag="Math.Number" Value="28"/></expression><expression tag="Math.Number" Value="49"/></expression><expression tag="List.List"><expression tag="Math.Number" Value="2"/><expression tag="Math.Arithmetic.Negative"><expression tag="Math.Number" Value="8"/></expression><expression tag="Math.Arithmetic.Negative"><expression tag="Math.Number" Value="8"/></expression><expression tag="Math.Number" Value="3"/><expression tag="Math.Arithmetic.Negative"><expression tag="Math.Number" Value="8"/></expression><expression tag="Math.Number" Value="32"/><expression tag="Math.Number" Value="32"/><expression tag="Math.Arithmetic.Negative"><expression tag="Math.Number" Value="12"/></expression><expression tag="Math.Number" Value="14"/><expression tag="Math.Arithmetic.Negative"><expression tag="Math.Number" Value="56"/></expression><expression tag="Math.Arithmetic.Negative"><expression tag="Math.Number" Value="56"/></expression><expression tag="Math.Number" Value="21"/></expression><expression tag="List.List"><expression tag="Math.Number" Value="1"/><expression tag="Math.Number" Value="2"/><expression tag="Math.Arithmetic.Negative"><expression tag="Math.Number" Value="5"/></expression><expression tag="Math.Arithmetic.Negative"><expression tag="Math.Number" Value="1"/></expression><expression tag="Math.Arithmetic.Negative"><expression tag="Math.Number" Value="4"/></expression><expression tag="Math.Arithmetic.Negative"><expression tag="Math.Number" Value="8"/></expression><expression tag="Math.Number" Value="20"/><expression tag="Math.Number" Value="4"/><expression tag="Math.Number" Value="7"/><expression tag="Math.Number" Value="14"/><expression tag="Math.Arithmetic.Negative"><expression tag="Math.Number" Value="35"/></expression><expression tag="Math.Arithmetic.Negative"><expression tag="Math.Number" Value="7"/></expression></expression><expression tag="List.List"><expression tag="Math.Arithmetic.Negative"><expression tag="Math.Number" Value="16"/></expression><expression tag="Math.Number" Value="18"/><expression tag="Math.Number" Value="12"/><expression tag="Math.Arithmetic.Negative"><expression tag="Math.Number" Value="10"/></expression><expression tag="Math.Number" Value="24"/><expression tag="Math.Arithmetic.Negative"><expression tag="Math.Number" Value="27"/></expression><expression tag="Math.Arithmetic.Negative"><expression tag="Math.Number" Value="18"/></expression><expression tag="Math.Number" Value="15"/><expression tag="Math.Number" Value="24"/><expression tag="Math.Arithmetic.Negative"><expression tag="Math.Number" Value="27"/></expression><expression tag="Math.Arithmetic.Negative"><expression tag="Math.Number" Value="18"/></expression><expression tag="Math.Number" Value="15"/></expression><expression tag="List.List"><expression tag="Math.Arithmetic.Negative"><expression tag="Math.Number" Value="2"/></expression><expression tag="Math.Number" Value="6"/><expression tag="Math.Number" Value="8"/><expression tag="Math.Arithmetic.Negative"><expression tag="Math.Number" Value="14"/></expression><expression tag="Math.Number" Value="3"/><expression tag="Math.Arithmetic.Negative"><expression tag="Math.Number" Value="9"/></expression><expression tag="Math.Arithmetic.Negative"><expression tag="Math.Number" Value="12"/></expression><expression tag="Math.Number" Value="21"/><expression tag="Math.Number" Value="3"/><expression tag="Math.Arithmetic.Negative"><expression tag="Math.Number" Value="9"/></expression><expression tag="Math.Arithmetic.Negative"><expression tag="Math.Number" Value="12"/></expression><expression tag="Math.Number" Value="21"/></expression><expression tag="List.List"><expression tag="Math.Arithmetic.Negative"><expression tag="Math.Number" Value="4"/></expression><expression tag="Math.Number" Value="16"/><expression tag="Math.Number" Value="16"/><expression tag="Math.Arithmetic.Negative"><expression tag="Math.Number" Value="6"/></expression><expression tag="Math.Number" Value="6"/><expression tag="Math.Arithmetic.Negative"><expression tag="Math.Number" Value="24"/></expression><expression tag="Math.Arithmetic.Negative"><expression tag="Math.Number" Value="24"/></expression><expression tag="Math.Number" Value="9"/><expression tag="Math.Number" Value="6"/><expression tag="Math.Arithmetic.Negative"><expression tag="Math.Number" Value="24"/></expression><expression tag="Math.Arithmetic.Negative"><expression tag="Math.Number" Value="24"/></expression><expression tag="Math.Number" Value="9"/></expression><expression tag="List.List"><expression tag="Math.Arithmetic.Negative"><expression tag="Math.Number" Value="2"/></expression><expression tag="Math.Arithmetic.Negative"><expression tag="Math.Number" Value="4"/></expression><expression tag="Math.Number" Value="10"/><expression tag="Math.Number" Value="2"/><expression tag="Math.Number" Value="3"/><expression tag="Math.Number" Value="6"/><expression tag="Math.Arithmetic.Negative"><expression tag="Math.Number" Value="15"/></expression><expression tag="Math.Arithmetic.Negative"><expression tag="Math.Number" Value="3"/></expression><expression tag="Math.Number" Value="3"/><expression tag="Math.Number" Value="6"/><expression tag="Math.Arithmetic.Negative"><expression tag="Math.Number" Value="15"/></expression><expression tag="Math.Arithmetic.Negative"><expression tag="Math.Number" Value="3"/></expression></expression></expression></expression><expression tag="Formulae.Script.Row" type="0"><expression tag="Typesetting.MultiParagraph"><expression tag="Typesetting.Paragraph"><expression tag="Typesetting.BoldChunk"><expression tag="String.Text" Value="Conjugate transpose of a matrix"/></expression></expression><expression tag="Typesetting.Paragraph"><expression tag="String.Text" Value="A"/><expression tag="Internet.UniformResourceLocator" Value="https://en.wikipedia.org/wiki/Conjugate_transpose" Description="conjugate transpose,"/><expression tag="String.Text" Value="shown as"/><expression tag="Math.Matrix.Adjoint"><expression tag="Symbolic.Symbol" Name="M"/></expression><expression tag="String.Text" Value="can be calculated on a matrix of arbitrary size. Basically it produces the same result of transposing a matrix, and then substituting all its elements by their corresponding complex conjugates:"/></expression></expression></expression><expression tag="Formulae.Script.Row" type="0"><expression tag="Math.Matrix.Adjoint"><expression tag="List.List"><expression tag="List.List"><expression tag="Symbolic.Symbol" Name="a"/><expression tag="Symbolic.Symbol" Name="b"/><expression tag="Symbolic.Symbol" Name="c"/></expression><expression tag="List.List"><expression tag="Symbolic.Symbol" Name="d"/><expression tag="Symbolic.Symbol" Name="e"/><expression tag="Symbolic.Symbol" Name="f"/></expression><expression tag="List.List"><expression tag="Symbolic.Symbol" Name="g"/><expression tag="Symbolic.Symbol" Name="h"/><expression tag="Symbolic.Symbol" Name="i"/></expression></expression></expression></expression><expression tag="Formulae.Script.Row" type="1"><expression tag="List.List"><expression tag="List.List"><expression tag="Math.Complex.Conjugate"><expression tag="Symbolic.Symbol" Name="a"/></expression><expression tag="Math.Complex.Conjugate"><expression tag="Symbolic.Symbol" Name="d"/></expression><expression tag="Math.Complex.Conjugate"><expression tag="Symbolic.Symbol" Name="g"/></expression></expression><expression tag="List.List"><expression tag="Math.Complex.Conjugate"><expression tag="Symbolic.Symbol" Name="b"/></expression><expression tag="Math.Complex.Conjugate"><expression tag="Symbolic.Symbol" Name="e"/></expression><expression tag="Math.Complex.Conjugate"><expression tag="Symbolic.Symbol" Name="h"/></expression></expression><expression tag="List.List"><expression tag="Math.Complex.Conjugate"><expression tag="Symbolic.Symbol" Name="c"/></expression><expression tag="Math.Complex.Conjugate"><expression tag="Symbolic.Symbol" Name="f"/></expression><expression tag="Math.Complex.Conjugate"><expression tag="Symbolic.Symbol" Name="i"/></expression></expression></expression></expression><expression tag="Formulae.Script.Row" type="0"><expression tag="Typesetting.MultiParagraph"><expression tag="Typesetting.Paragraph"><expression tag="Typesetting.BoldChunk"><expression tag="String.Text" Value="Operations with lists, related to computer sciences"/></expression></expression><expression tag="Typesetting.Paragraph"><expression tag="Typesetting.BoldChunk"><expression tag="String.Text" Value="Sorting a list"/></expression></expression><expression tag="Typesetting.Paragraph"><expression tag="String.Text" Value="The"/><expression tag="Internet.UniformResourceLocator" Value="/?reference=List.Sort" Description="Sort"/><expression tag="String.Text" Value="expression takes a list and produces another list, which contains the same elements, sorted in increasing order."/></expression></expression></expression><expression tag="Formulae.Script.Row" type="0"><expression tag="List.Sort"><expression tag="List.List"><expression tag="Math.Number" Value="4"/><expression tag="Math.Number" Value="1"/><expression tag="Math.Number" Value="3"/><expression tag="Math.Number" Value="2"/></expression></expression></expression><expression tag="Formulae.Script.Row" type="1"><expression tag="List.List"><expression tag="Math.Number" Value="1"/><expression tag="Math.Number" Value="2"/><expression tag="Math.Number" Value="3"/><expression tag="Math.Number" Value="4"/></expression></expression><expression tag="Formulae.Script.Row" type="0"><expression tag="Typesetting.Paragraph"><expression tag="String.Text" Value="String order is lexicographic:"/></expression></expression><expression tag="Formulae.Script.Row" type="0"><expression tag="List.Sort"><expression tag="List.List"><expression tag="String.String" Value="Lorem"/><expression tag="String.String" Value="ipsum"/><expression tag="String.String" Value="dolor"/><expression tag="String.String" Value="sit"/><expression tag="String.String" Value="amet"/></expression></expression></expression><expression tag="Formulae.Script.Row" type="1"><expression tag="List.List"><expression tag="String.String" Value="Lorem"/><expression tag="String.String" Value="amet"/><expression tag="String.String" Value="dolor"/><expression tag="String.String" Value="ipsum"/><expression tag="String.String" Value="sit"/></expression></expression><expression tag="Formulae.Script.Row" type="0"><expression tag="Typesetting.MultiParagraph"><expression tag="Typesetting.Paragraph"><expression tag="String.Text" Value="The string"/><expression tag="String.String" Value="Loret"/><expression tag="String.Text" Value="appears first because in lexicographic order, uppercase letters are placed before lowercase ones."/></expression><expression tag="Typesetting.Paragraph"><expression tag="String.Text" Value="Time expressions order is chronological:"/></expression></expression></expression><expression tag="Formulae.Script.Row" type="0"><expression tag="List.Sort"><expression tag="List.List"><expression tag="Time.Time" Value="402822000000"/><expression tag="Time.Time" Value="8236800000"/><expression tag="Time.Time" Value="1192950000000"/></expression></expression></expression><expression tag="Formulae.Script.Row" type="1"><expression tag="List.List"><expression tag="Time.Time" Value="8236800000"/><expression tag="Time.Time" Value="402822000000"/><expression tag="Time.Time" Value="1192950000000"/></expression></expression><expression tag="Formulae.Script.Row" type="0"><expression tag="Typesetting.MultiParagraph"><expression tag="Typesetting.Paragraph"><expression tag="Typesetting.BoldChunk"><expression tag="String.Text" Value="Sorting using a custom criteria"/></expression></expression><expression tag="Typesetting.Paragraph"><expression tag="String.Text" Value="You can sort a list using an arbitrary criteria. This criteria is provided as a second argument for the"/><expression tag="Internet.UniformResourceLocator" Value="/?reference=List.Sort" Description="Sort"/><expression tag="String.Text" Value="expression. It is known as a"/><expression tag="Typesetting.ItalicChunk"><expression tag="String.Text" Value="comparator."/></expression><expression tag="String.Text" Value="In Fōrmulæ, a comparator is a lambda expression with two parameters, that defines a relation of order between these two parameters. The lambda expression must reduce to one of four possibilities:"/></expression><expression tag="Typesetting.BulletedList"><expression tag="Typesetting.Paragraph"><expression tag="String.Text" Value="The expression"/><expression tag="Relation.Comparison.Less"/><expression tag="String.Text" Value=", indicating that the first parameter is less than the second one."/></expression><expression tag="Typesetting.Paragraph"><expression tag="String.Text" Value="The expression"/><expression tag="Relation.Comparison.Equals"/><expression tag="String.Text" Value=", indicating that the first parameter is equals than the second one."/></expression><expression tag="Typesetting.Paragraph"><expression tag="String.Text" Value="The expression"/><expression tag="Relation.Comparison.Greater"/><expression tag="String.Text" Value=", indicating that the first parameter is greater than the second one."/></expression><expression tag="Typesetting.Paragraph"><expression tag="String.Text" Value="Any other expression, indicating that the two parameters are not comparable."/></expression></expression><expression tag="Typesetting.Paragraph"><expression tag="String.Text" Value="These expressions will indicate to the comparator how to decide if a value must appear before, indiferent or after another one. For example, when comparing the two numbers 2 and 5, the result is that &quot;2 is less than 5&quot; and therefore the number 2 must appear before the number 5 (if we wanted a ascending order)."/></expression><expression tag="Typesetting.Paragraph"><expression tag="String.Text" Value="Notice that these expressions are also the possible expressions reduced by the"/><expression tag="Internet.UniformResourceLocator" Value="/?reference=Relation.Compare" Description="ComparedTo"/><expression tag="String.Text" Value="expression. In fact, the one-parameter version of the"/><expression tag="Internet.UniformResourceLocator" Value="/?reference=List.Sort" Description="Sort"/><expression tag="String.Text" Value="expression, implicitly uses the follwoing comparator:"/></expression></expression></expression><expression tag="Formulae.Script.Row" type="0"><expression tag="Typesetting.Centering"><expression tag="Symbolic.Lambda"><expression tag="List.List"><expression tag="Symbolic.Symbol" Name="a"/><expression tag="Symbolic.Symbol" Name="b"/></expression><expression tag="Relation.Compare"><expression tag="Symbolic.Symbol" Name="a"/><expression tag="Symbolic.Symbol" Name="b"/></expression></expression></expression></expression><expression tag="Formulae.Script.Row" type="0"><expression tag="Typesetting.MultiParagraph"><expression tag="Typesetting.Paragraph"><expression tag="String.Text" Value="Examples:"/></expression><expression tag="Typesetting.Paragraph"><expression tag="String.Text" Value="If we want an descending order, just invert the parameters in the"/><expression tag="Internet.UniformResourceLocator" Value="/?reference=Relation.Compare" Description="ComparedTo"/><expression tag="String.Text" Value="expression:"/></expression></expression></expression><expression tag="Formulae.Script.Row" type="0"><expression tag="List.Sort"><expression tag="List.List"><expression tag="Math.Number" Value="4"/><expression tag="Math.Number" Value="1"/><expression tag="Math.Number" Value="3"/><expression tag="Math.Number" Value="2"/></expression><expression tag="Symbolic.Lambda"><expression tag="List.List"><expression tag="Symbolic.Symbol" Name="a"/><expression tag="Symbolic.Symbol" Name="b"/></expression><expression tag="Relation.Compare"><expression tag="Symbolic.Symbol" Name="b"/><expression tag="Symbolic.Symbol" Name="a"/></expression></expression></expression></expression><expression tag="Formulae.Script.Row" type="1"><expression tag="List.List"><expression tag="Math.Number" Value="4"/><expression tag="Math.Number" Value="3"/><expression tag="Math.Number" Value="2"/><expression tag="Math.Number" Value="1"/></expression></expression><expression tag="Formulae.Script.Row" type="0"><expression tag="Typesetting.Paragraph"><expression tag="String.Text" Value="In a previous example using strings, we realized that comparison of strings is case sensitive. If we want an order with no case sensitivity, we can compare the values in uppercase (we could use also both in lowercase):"/></expression></expression><expression tag="Formulae.Script.Row" type="0"><expression tag="List.Sort"><expression tag="List.List"><expression tag="String.String" Value="Lorem"/><expression tag="String.String" Value="ipsum"/><expression tag="String.String" Value="dolor"/><expression tag="String.String" Value="sit"/><expression tag="String.String" Value="amet"/></expression><expression tag="Symbolic.Lambda"><expression tag="List.List"><expression tag="Symbolic.Symbol" Name="a"/><expression tag="Symbolic.Symbol" Name="b"/></expression><expression tag="Relation.Compare"><expression tag="String.Uppercase"><expression tag="Symbolic.Symbol" Name="a"/></expression><expression tag="String.Uppercase"><expression tag="Symbolic.Symbol" Name="b"/></expression></expression></expression></expression></expression><expression tag="Formulae.Script.Row" type="1"><expression tag="List.List"><expression tag="String.String" Value="amet"/><expression tag="String.String" Value="dolor"/><expression tag="String.String" Value="ipsum"/><expression tag="String.String" Value="Lorem"/><expression tag="String.String" Value="sit"/></expression></expression><expression tag="Formulae.Script.Row" type="0"><expression tag="Typesetting.Paragraph"><expression tag="String.Text" Value="The following example shows how to sort according with the lengths of strings, instead of the default, lexicographic order:"/></expression></expression><expression tag="Formulae.Script.Row" type="0"><expression tag="List.Sort"><expression tag="List.List"><expression tag="String.String" Value="Lorem"/><expression tag="String.String" Value="ipsum"/><expression tag="String.String" Value="dolor"/><expression tag="String.String" Value="sit"/><expression tag="String.String" Value="amet"/></expression><expression tag="Symbolic.Lambda"><expression tag="List.List"><expression tag="Symbolic.Symbol" Name="a"/><expression tag="Symbolic.Symbol" Name="b"/></expression><expression tag="Relation.Compare"><expression tag="String.Length"><expression tag="Symbolic.Symbol" Name="a"/></expression><expression tag="String.Length"><expression tag="Symbolic.Symbol" Name="b"/></expression></expression></expression></expression></expression><expression tag="Formulae.Script.Row" type="1"><expression tag="List.List"><expression tag="String.String" Value="sit"/><expression tag="String.String" Value="amet"/><expression tag="String.String" Value="Lorem"/><expression tag="String.String" Value="ipsum"/><expression tag="String.String" Value="dolor"/></expression></expression><expression tag="Formulae.Script.Row" type="0"><expression tag="Typesetting.MultiParagraph"><expression tag="String.Text" Value="The following is a list of grades. We want to sort the list by grade in descending order:"/><expression tag="Typesetting.Centering"><expression tag="List.List"><expression tag="List.List"><expression tag="String.String" Value="Alice"/><expression tag="Math.Number" Value="80"/></expression><expression tag="List.List"><expression tag="String.String" Value="Bob"/><expression tag="Math.Number" Value="90"/></expression><expression tag="List.List"><expression tag="String.String" Value="Mallory"/><expression tag="Math.Number" Value="75"/></expression><expression tag="List.List"><expression tag="String.String" Value="Trudy"/><expression tag="Math.Number" Value="95"/></expression></expression></expression><expression tag="Typesetting.Paragraph"><expression tag="String.Text" Value="Every element is also a list (of two elements). The second element of such these lists is the grade, so we can do the following:"/></expression></expression></expression><expression tag="Formulae.Script.Row" type="0"><expression tag="List.Sort"><expression tag="List.List"><expression tag="List.List"><expression tag="String.String" Value="Alice"/><expression tag="Math.Number" Value="80"/></expression><expression tag="List.List"><expression tag="String.String" Value="Bob"/><expression tag="Math.Number" Value="90"/></expression><expression tag="List.List"><expression tag="String.String" Value="Mallory"/><expression tag="Math.Number" Value="75"/></expression><expression tag="List.List"><expression tag="String.String" Value="Trudy"/><expression tag="Math.Number" Value="95"/></expression></expression><expression tag="Symbolic.Lambda"><expression tag="List.List"><expression tag="Symbolic.Symbol" Name="x"/><expression tag="Symbolic.Symbol" Name="y"/></expression><expression tag="Relation.Compare"><expression tag="Expression.Child"><expression tag="Symbolic.Symbol" Name="y"/><expression tag="Math.Number" Value="2"/></expression><expression tag="Expression.Child"><expression tag="Symbolic.Symbol" Name="x"/><expression tag="Math.Number" Value="2"/></expression></expression></expression></expression></expression><expression tag="Formulae.Script.Row" type="1"><expression tag="List.List"><expression tag="List.List"><expression tag="String.String" Value="Trudy"/><expression tag="Math.Number" Value="95"/></expression><expression tag="List.List"><expression tag="String.String" Value="Bob"/><expression tag="Math.Number" Value="90"/></expression><expression tag="List.List"><expression tag="String.String" Value="Alice"/><expression tag="Math.Number" Value="80"/></expression><expression tag="List.List"><expression tag="String.String" Value="Mallory"/><expression tag="Math.Number" Value="75"/></expression></expression></expression><expression tag="Formulae.Script.Row" type="0"><expression tag="Typesetting.MultiParagraph"><expression tag="Typesetting.Paragraph"><expression tag="String.Text" Value="More examples of sorting with custom comparators:"/></expression><expression tag="Typesetting.BulletedList"><expression tag="Internet.UniformResourceLocator" Value="/?example=Sort_a_list_of_object_identifiers" Description="Sort a list of object identifiers"/><expression tag="Internet.UniformResourceLocator" Value="/?example=Sort_an_array_of_composite_structures" Description="Sort an array of composite structures"/><expression tag="Internet.UniformResourceLocator" Value="/?example=Sort_numbers_lexicographically" Description="Sort numbers lexicographically"/><expression tag="Internet.UniformResourceLocator" Value="/?example=Sort_using_a_custom_comparator" Description="Sort using a custom comparator"/><expression tag="Internet.UniformResourceLocator" Value="/?example=Sort_three_variables" Description="Sort three variables"/></expression></expression></expression><expression tag="Formulae.Script.Row" type="0"><expression tag="Typesetting.MultiParagraph"><expression tag="Typesetting.Paragraph"><expression tag="Typesetting.BoldChunk"><expression tag="String.Text" Value="Arraization"/></expression></expression><expression tag="Typesetting.Paragraph"><expression tag="String.Text" Value="One of the most powerful (and popular) features in Fōrmulæ is arraization. It is about the dynamic construction of lists, thist is, the programatic creation of lists."/></expression><expression tag="Typesetting.Paragraph"><expression tag="String.Text" Value="Most of us know the concept of"/><expression tag="Internet.UniformResourceLocator" Value="https://en.wikipedia.org/wiki/Summation" Description="summation."/><expression tag="String.Text" Value="We can actually perform summations in Fōrmulæ:"/></expression></expression></expression><expression tag="Formulae.Script.Row" type="0"><expression tag="Math.Arithmetic.Summation"><expression tag="Symbolic.Symbol" Name="i"/><expression tag="Symbolic.Symbol" Name="i"/><expression tag="Math.Number" Value="0"/><expression tag="Math.Number" Value="10"/></expression></expression><expression tag="Formulae.Script.Row" type="1"><expression tag="Math.Number" Value="55"/></expression><expression tag="Formulae.Script.Row" type="0"><expression tag="Typesetting.MultiParagraph"><expression tag="Typesetting.Paragraph"><expression tag="String.Text" Value="Note that the summation produced the expression "/><expression tag="Math.Arithmetic.Addition"><expression tag="Math.Number" Value="0"/><expression tag="Math.Number" Value="1"/><expression tag="Math.Number" Value="2"/><expression tag="Math.Number" Value="3"/><expression tag="Math.Number" Value="4"/><expression tag="Math.Number" Value="5"/><expression tag="Math.Number" Value="6"/><expression tag="Math.Number" Value="7"/><expression tag="Math.Number" Value="8"/><expression tag="Math.Number" Value="9"/><expression tag="Math.Number" Value="10"/></expression><expression tag="String.Text" Value=" but it was immediately reduced to 55."/></expression><expression tag="Typesetting.Paragraph"><expression tag="String.Text" Value="See the following example:"/></expression></expression></expression><expression tag="Formulae.Script.Row" type="0"><expression tag="Math.Arithmetic.Summation"><expression tag="Math.Arithmetic.Exponentiation"><expression tag="Symbolic.Symbol" Name="x"/><expression tag="Symbolic.Symbol" Name="i"/></expression><expression tag="Symbolic.Symbol" Name="i"/><expression tag="Math.Number" Value="0"/><expression tag="Math.Number" Value="10"/></expression></expression><expression tag="Formulae.Script.Row" type="1"><expression tag="Math.Arithmetic.Addition"><expression tag="Math.Number" Value="1"/><expression tag="Symbolic.Symbol" Name="x"/><expression tag="Math.Arithmetic.Exponentiation"><expression tag="Symbolic.Symbol" Name="x"/><expression tag="Math.Number" Value="2"/></expression><expression tag="Math.Arithmetic.Exponentiation"><expression tag="Symbolic.Symbol" Name="x"/><expression tag="Math.Number" Value="3"/></expression><expression tag="Math.Arithmetic.Exponentiation"><expression tag="Symbolic.Symbol" Name="x"/><expression tag="Math.Number" Value="4"/></expression><expression tag="Math.Arithmetic.Exponentiation"><expression tag="Symbolic.Symbol" Name="x"/><expression tag="Math.Number" Value="5"/></expression><expression tag="Math.Arithmetic.Exponentiation"><expression tag="Symbolic.Symbol" Name="x"/><expression tag="Math.Number" Value="6"/></expression><expression tag="Math.Arithmetic.Exponentiation"><expression tag="Symbolic.Symbol" Name="x"/><expression tag="Math.Number" Value="7"/></expression><expression tag="Math.Arithmetic.Exponentiation"><expression tag="Symbolic.Symbol" Name="x"/><expression tag="Math.Number" Value="8"/></expression><expression tag="Math.Arithmetic.Exponentiation"><expression tag="Symbolic.Symbol" Name="x"/><expression tag="Math.Number" Value="9"/></expression><expression tag="Math.Arithmetic.Exponentiation"><expression tag="Symbolic.Symbol" Name="x"/><expression tag="Math.Number" Value="10"/></expression></expression></expression><expression tag="Formulae.Script.Row" type="0"><expression tag="Typesetting.MultiParagraph"><expression tag="Typesetting.Paragraph"><expression tag="String.Text" Value="Arraization follows the same principle that summation. However, it creates a list instead of a sum. This is the reason of its name."/></expression><expression tag="Typesetting.Paragraph"><expression tag="Typesetting.BoldChunk"><expression tag="String.Text" Value="Note:"/></expression><expression tag="String.Text" Value="The word"/><expression tag="Typesetting.ItalicChunk"><expression tag="String.Text" Value="arraization"/></expression><expression tag="String.Text" Value="seems not to be in the dictionary. It was created to resemble the word"/><expression tag="Typesetting.ItalicChunk"><expression tag="String.Text" Value="summation."/></expression></expression><expression tag="Typesetting.Paragraph"><expression tag="String.Text" Value="See the previous two examples, now using arraization instead of summation. Note the similarity on both the notation and semantics:"/></expression></expression></expression><expression tag="Formulae.Script.Row" type="0"><expression tag="List.CreateList"><expression tag="Symbolic.Symbol" Name="i"/><expression tag="Symbolic.Symbol" Name="i"/><expression tag="Math.Number" Value="0"/><expression tag="Math.Number" Value="10"/></expression></expression><expression tag="Formulae.Script.Row" type="1"><expression tag="List.List"><expression tag="Math.Number" Value="0"/><expression tag="Math.Number" Value="1"/><expression tag="Math.Number" Value="2"/><expression tag="Math.Number" Value="3"/><expression tag="Math.Number" Value="4"/><expression tag="Math.Number" Value="5"/><expression tag="Math.Number" Value="6"/><expression tag="Math.Number" Value="7"/><expression tag="Math.Number" Value="8"/><expression tag="Math.Number" Value="9"/><expression tag="Math.Number" Value="10"/></expression></expression><expression tag="Formulae.Script.Row" type="0"><expression tag="List.CreateList"><expression tag="Math.Arithmetic.Exponentiation"><expression tag="Symbolic.Symbol" Name="x"/><expression tag="Symbolic.Symbol" Name="i"/></expression><expression tag="Symbolic.Symbol" Name="i"/><expression tag="Math.Number" Value="0"/><expression tag="Math.Number" Value="10"/></expression></expression><expression tag="Formulae.Script.Row" type="1"><expression tag="List.List"><expression tag="Math.Number" Value="1"/><expression tag="Symbolic.Symbol" Name="x"/><expression tag="Math.Arithmetic.Exponentiation"><expression tag="Symbolic.Symbol" Name="x"/><expression tag="Math.Number" Value="2"/></expression><expression tag="Math.Arithmetic.Exponentiation"><expression tag="Symbolic.Symbol" Name="x"/><expression tag="Math.Number" Value="3"/></expression><expression tag="Math.Arithmetic.Exponentiation"><expression tag="Symbolic.Symbol" Name="x"/><expression tag="Math.Number" Value="4"/></expression><expression tag="Math.Arithmetic.Exponentiation"><expression tag="Symbolic.Symbol" Name="x"/><expression tag="Math.Number" Value="5"/></expression><expression tag="Math.Arithmetic.Exponentiation"><expression tag="Symbolic.Symbol" Name="x"/><expression tag="Math.Number" Value="6"/></expression><expression tag="Math.Arithmetic.Exponentiation"><expression tag="Symbolic.Symbol" Name="x"/><expression tag="Math.Number" Value="7"/></expression><expression tag="Math.Arithmetic.Exponentiation"><expression tag="Symbolic.Symbol" Name="x"/><expression tag="Math.Number" Value="8"/></expression><expression tag="Math.Arithmetic.Exponentiation"><expression tag="Symbolic.Symbol" Name="x"/><expression tag="Math.Number" Value="9"/></expression><expression tag="Math.Arithmetic.Exponentiation"><expression tag="Symbolic.Symbol" Name="x"/><expression tag="Math.Number" Value="10"/></expression></expression></expression><expression tag="Formulae.Script.Row" type="0"><expression tag="Typesetting.MultiParagraph"><expression tag="Typesetting.Paragraph"><expression tag="String.Text" Value="There are three &quot;forms&quot; or arraization."/></expression><expression tag="Typesetting.Paragraph"><expression tag="Typesetting.BoldChunk"><expression tag="String.Text" Value="Form 1. Iterating a fixed number of times"/></expression></expression><expression tag="Typesetting.Paragraph"><expression tag="String.Text" Value="This form is useful to create a list repeating an expression a given number of times."/></expression><expression tag="Typesetting.Paragraph"><expression tag="String.Text" Value="To create a list of 10 zeroes:"/></expression></expression></expression><expression tag="Formulae.Script.Row" type="0"><expression tag="List.CreateList"><expression tag="Math.Number" Value="0"/><expression tag="Math.Number" Value="10"/></expression></expression><expression tag="Formulae.Script.Row" type="1"><expression tag="List.List"><expression tag="Math.Number" Value="0"/><expression tag="Math.Number" Value="0"/><expression tag="Math.Number" Value="0"/><expression tag="Math.Number" Value="0"/><expression tag="Math.Number" Value="0"/><expression tag="Math.Number" Value="0"/><expression tag="Math.Number" Value="0"/><expression tag="Math.Number" Value="0"/><expression tag="Math.Number" Value="0"/><expression tag="Math.Number" Value="0"/></expression></expression><expression tag="Formulae.Script.Row" type="0"><expression tag="Typesetting.Paragraph"><expression tag="String.Text" Value="Suppose we want a 3 × 5 matrix, initialized to zeros. One possibility is:"/></expression></expression><expression tag="Formulae.Script.Row" type="0"><expression tag="List.CreateList"><expression tag="List.List"><expression tag="Math.Number" Value="0"/><expression tag="Math.Number" Value="0"/><expression tag="Math.Number" Value="0"/><expression tag="Math.Number" Value="0"/><expression tag="Math.Number" Value="0"/></expression><expression tag="Math.Number" Value="3"/></expression></expression><expression tag="Formulae.Script.Row" type="1"><expression tag="List.List"><expression tag="List.List"><expression tag="Math.Number" Value="0"/><expression tag="Math.Number" Value="0"/><expression tag="Math.Number" Value="0"/><expression tag="Math.Number" Value="0"/><expression tag="Math.Number" Value="0"/></expression><expression tag="List.List"><expression tag="Math.Number" Value="0"/><expression tag="Math.Number" Value="0"/><expression tag="Math.Number" Value="0"/><expression tag="Math.Number" Value="0"/><expression tag="Math.Number" Value="0"/></expression><expression tag="List.List"><expression tag="Math.Number" Value="0"/><expression tag="Math.Number" Value="0"/><expression tag="Math.Number" Value="0"/><expression tag="Math.Number" Value="0"/><expression tag="Math.Number" Value="0"/></expression></expression></expression><expression tag="Formulae.Script.Row" type="0"><expression tag="Typesetting.Paragraph"><expression tag="String.Text" Value="But the next one is much better:"/></expression></expression><expression tag="Formulae.Script.Row" type="0"><expression tag="List.CreateList"><expression tag="List.CreateList"><expression tag="Math.Number" Value="0"/><expression tag="Math.Number" Value="5"/></expression><expression tag="Math.Number" Value="3"/></expression></expression><expression tag="Formulae.Script.Row" type="1"><expression tag="List.List"><expression tag="List.List"><expression tag="Math.Number" Value="0"/><expression tag="Math.Number" Value="0"/><expression tag="Math.Number" Value="0"/><expression tag="Math.Number" Value="0"/><expression tag="Math.Number" Value="0"/></expression><expression tag="List.List"><expression tag="Math.Number" Value="0"/><expression tag="Math.Number" Value="0"/><expression tag="Math.Number" Value="0"/><expression tag="Math.Number" Value="0"/><expression tag="Math.Number" Value="0"/></expression><expression tag="List.List"><expression tag="Math.Number" Value="0"/><expression tag="Math.Number" Value="0"/><expression tag="Math.Number" Value="0"/><expression tag="Math.Number" Value="0"/><expression tag="Math.Number" Value="0"/></expression></expression></expression><expression tag="Formulae.Script.Row" type="0"><expression tag="Typesetting.MultiParagraph"><expression tag="String.Text" Value="The expression is not simply duplicated, it is evaluated on each repetition."/><expression tag="Typesetting.Paragraph"><expression tag="String.Text" Value="The follwong creates a list of 5 pseudo-random numbers between 0 and 1:"/></expression></expression></expression><expression tag="Formulae.Script.Row" type="0"><expression tag="List.CreateList"><expression tag="Math.Arithmetic.Random"/><expression tag="Math.Number" Value="5"/></expression></expression><expression tag="Formulae.Script.Row" type="1"><expression tag="List.List"><expression tag="Math.Number" Value="0.012320825222450593"/><expression tag="Math.Number" Value="0.5071177496494591"/><expression tag="Math.Number" Value="0.2518228937632957"/><expression tag="Math.Number" Value="0.7978870647256021"/><expression tag="Math.Number" Value="0.48935301791514396"/></expression></expression><expression tag="Formulae.Script.Row" type="0"><expression tag="Typesetting.MultiParagraph"><expression tag="Typesetting.Paragraph"><expression tag="Typesetting.BoldChunk"><expression tag="String.Text" Value="Form 2. Iterating from starting to ending values"/></expression></expression><expression tag="Typesetting.Paragraph"><expression tag="String.Text" Value="This is the form that mostly resembles summation. Let us see some variants and examples."/></expression><expression tag="Typesetting.Paragraph"><expression tag="String.Text" Value="To create a list of square numbers, from 0 to 10:"/></expression></expression></expression><expression tag="Formulae.Script.Row" type="0"><expression tag="List.CreateList"><expression tag="Math.Arithmetic.Exponentiation"><expression tag="Symbolic.Symbol" Name="n"/><expression tag="Math.Number" Value="2"/></expression><expression tag="Symbolic.Symbol" Name="n"/><expression tag="Math.Number" Value="0"/><expression tag="Math.Number" Value="10"/></expression></expression><expression tag="Formulae.Script.Row" type="1"><expression tag="List.List"><expression tag="Math.Number" Value="0"/><expression tag="Math.Number" Value="1"/><expression tag="Math.Number" Value="4"/><expression tag="Math.Number" Value="9"/><expression tag="Math.Number" Value="16"/><expression tag="Math.Number" Value="25"/><expression tag="Math.Number" Value="36"/><expression tag="Math.Number" Value="49"/><expression tag="Math.Number" Value="64"/><expression tag="Math.Number" Value="81"/><expression tag="Math.Number" Value="100"/></expression></expression><expression tag="Formulae.Script.Row" type="0"><expression tag="Typesetting.Paragraph"><expression tag="String.Text" Value="However, we would like to see the number and its square:"/></expression></expression><expression tag="Formulae.Script.Row" type="0"><expression tag="List.CreateList"><expression tag="List.List"><expression tag="Symbolic.Symbol" Name="n"/><expression tag="Math.Arithmetic.Exponentiation"><expression tag="Symbolic.Symbol" Name="n"/><expression tag="Math.Number" Value="2"/></expression></expression><expression tag="Symbolic.Symbol" Name="n"/><expression tag="Math.Number" Value="0"/><expression tag="Math.Number" Value="10"/></expression></expression><expression tag="Formulae.Script.Row" type="1"><expression tag="List.List"><expression tag="List.List"><expression tag="Math.Number" Value="0"/><expression tag="Math.Number" Value="0"/></expression><expression tag="List.List"><expression tag="Math.Number" Value="1"/><expression tag="Math.Number" Value="1"/></expression><expression tag="List.List"><expression tag="Math.Number" Value="2"/><expression tag="Math.Number" Value="4"/></expression><expression tag="List.List"><expression tag="Math.Number" Value="3"/><expression tag="Math.Number" Value="9"/></expression><expression tag="List.List"><expression tag="Math.Number" Value="4"/><expression tag="Math.Number" Value="16"/></expression><expression tag="List.List"><expression tag="Math.Number" Value="5"/><expression tag="Math.Number" Value="25"/></expression><expression tag="List.List"><expression tag="Math.Number" Value="6"/><expression tag="Math.Number" Value="36"/></expression><expression tag="List.List"><expression tag="Math.Number" Value="7"/><expression tag="Math.Number" Value="49"/></expression><expression tag="List.List"><expression tag="Math.Number" Value="8"/><expression tag="Math.Number" Value="64"/></expression><expression tag="List.List"><expression tag="Math.Number" Value="9"/><expression tag="Math.Number" Value="81"/></expression><expression tag="List.List"><expression tag="Math.Number" Value="10"/><expression tag="Math.Number" Value="100"/></expression></expression></expression><expression tag="Formulae.Script.Row" type="0"><expression tag="Typesetting.MultiParagraph"><expression tag="Typesetting.Paragraph"><expression tag="String.Text" Value="Note that the result is a matrix."/></expression><expression tag="Typesetting.Paragraph"><expression tag="String.Text" Value="Let us create a multiplication table:"/></expression></expression></expression><expression tag="Formulae.Script.Row" type="0"><expression tag="List.CreateList"><expression tag="List.CreateList"><expression tag="Math.Arithmetic.Multiplication"><expression tag="Symbolic.Symbol" Name="a"/><expression tag="Symbolic.Symbol" Name="b"/></expression><expression tag="Symbolic.Symbol" Name="b"/><expression tag="Math.Number" Value="0"/><expression tag="Math.Number" Value="10"/></expression><expression tag="Symbolic.Symbol" Name="a"/><expression tag="Math.Number" Value="0"/><expression tag="Math.Number" Value="10"/></expression></expression><expression tag="Formulae.Script.Row" type="1"><expression tag="List.List"><expression tag="List.List"><expression tag="Math.Number" Value="0"/><expression tag="Math.Number" Value="0"/><expression tag="Math.Number" Value="0"/><expression tag="Math.Number" Value="0"/><expression tag="Math.Number" Value="0"/><expression tag="Math.Number" Value="0"/><expression tag="Math.Number" Value="0"/><expression tag="Math.Number" Value="0"/><expression tag="Math.Number" Value="0"/><expression tag="Math.Number" Value="0"/><expression tag="Math.Number" Value="0"/></expression><expression tag="List.List"><expression tag="Math.Number" Value="0"/><expression tag="Math.Number" Value="1"/><expression tag="Math.Number" Value="2"/><expression tag="Math.Number" Value="3"/><expression tag="Math.Number" Value="4"/><expression tag="Math.Number" Value="5"/><expression tag="Math.Number" Value="6"/><expression tag="Math.Number" Value="7"/><expression tag="Math.Number" Value="8"/><expression tag="Math.Number" Value="9"/><expression tag="Math.Number" Value="10"/></expression><expression tag="List.List"><expression tag="Math.Number" Value="0"/><expression tag="Math.Number" Value="2"/><expression tag="Math.Number" Value="4"/><expression tag="Math.Number" Value="6"/><expression tag="Math.Number" Value="8"/><expression tag="Math.Number" Value="10"/><expression tag="Math.Number" Value="12"/><expression tag="Math.Number" Value="14"/><expression tag="Math.Number" Value="16"/><expression tag="Math.Number" Value="18"/><expression tag="Math.Number" Value="20"/></expression><expression tag="List.List"><expression tag="Math.Number" Value="0"/><expression tag="Math.Number" Value="3"/><expression tag="Math.Number" Value="6"/><expression tag="Math.Number" Value="9"/><expression tag="Math.Number" Value="12"/><expression tag="Math.Number" Value="15"/><expression tag="Math.Number" Value="18"/><expression tag="Math.Number" Value="21"/><expression tag="Math.Number" Value="24"/><expression tag="Math.Number" Value="27"/><expression tag="Math.Number" Value="30"/></expression><expression tag="List.List"><expression tag="Math.Number" Value="0"/><expression tag="Math.Number" Value="4"/><expression tag="Math.Number" Value="8"/><expression tag="Math.Number" Value="12"/><expression tag="Math.Number" Value="16"/><expression tag="Math.Number" Value="20"/><expression tag="Math.Number" Value="24"/><expression tag="Math.Number" Value="28"/><expression tag="Math.Number" Value="32"/><expression tag="Math.Number" Value="36"/><expression tag="Math.Number" Value="40"/></expression><expression tag="List.List"><expression tag="Math.Number" Value="0"/><expression tag="Math.Number" Value="5"/><expression tag="Math.Number" Value="10"/><expression tag="Math.Number" Value="15"/><expression tag="Math.Number" Value="20"/><expression tag="Math.Number" Value="25"/><expression tag="Math.Number" Value="30"/><expression tag="Math.Number" Value="35"/><expression tag="Math.Number" Value="40"/><expression tag="Math.Number" Value="45"/><expression tag="Math.Number" Value="50"/></expression><expression tag="List.List"><expression tag="Math.Number" Value="0"/><expression tag="Math.Number" Value="6"/><expression tag="Math.Number" Value="12"/><expression tag="Math.Number" Value="18"/><expression tag="Math.Number" Value="24"/><expression tag="Math.Number" Value="30"/><expression tag="Math.Number" Value="36"/><expression tag="Math.Number" Value="42"/><expression tag="Math.Number" Value="48"/><expression tag="Math.Number" Value="54"/><expression tag="Math.Number" Value="60"/></expression><expression tag="List.List"><expression tag="Math.Number" Value="0"/><expression tag="Math.Number" Value="7"/><expression tag="Math.Number" Value="14"/><expression tag="Math.Number" Value="21"/><expression tag="Math.Number" Value="28"/><expression tag="Math.Number" Value="35"/><expression tag="Math.Number" Value="42"/><expression tag="Math.Number" Value="49"/><expression tag="Math.Number" Value="56"/><expression tag="Math.Number" Value="63"/><expression tag="Math.Number" Value="70"/></expression><expression tag="List.List"><expression tag="Math.Number" Value="0"/><expression tag="Math.Number" Value="8"/><expression tag="Math.Number" Value="16"/><expression tag="Math.Number" Value="24"/><expression tag="Math.Number" Value="32"/><expression tag="Math.Number" Value="40"/><expression tag="Math.Number" Value="48"/><expression tag="Math.Number" Value="56"/><expression tag="Math.Number" Value="64"/><expression tag="Math.Number" Value="72"/><expression tag="Math.Number" Value="80"/></expression><expression tag="List.List"><expression tag="Math.Number" Value="0"/><expression tag="Math.Number" Value="9"/><expression tag="Math.Number" Value="18"/><expression tag="Math.Number" Value="27"/><expression tag="Math.Number" Value="36"/><expression tag="Math.Number" Value="45"/><expression tag="Math.Number" Value="54"/><expression tag="Math.Number" Value="63"/><expression tag="Math.Number" Value="72"/><expression tag="Math.Number" Value="81"/><expression tag="Math.Number" Value="90"/></expression><expression tag="List.List"><expression tag="Math.Number" Value="0"/><expression tag="Math.Number" Value="10"/><expression tag="Math.Number" Value="20"/><expression tag="Math.Number" Value="30"/><expression tag="Math.Number" Value="40"/><expression tag="Math.Number" Value="50"/><expression tag="Math.Number" Value="60"/><expression tag="Math.Number" Value="70"/><expression tag="Math.Number" Value="80"/><expression tag="Math.Number" Value="90"/><expression tag="Math.Number" Value="100"/></expression></expression></expression><expression tag="Formulae.Script.Row" type="0"><expression tag="Typesetting.Paragraph"><expression tag="String.Text" Value="To create the list of 5 elements, where the first element is the list"/><expression tag="List.List"><expression tag="Math.Number" Value="1"/></expression><expression tag="String.Text" Value=", the second element is the list"/><expression tag="List.List"><expression tag="Math.Number" Value="1"/><expression tag="Math.Number" Value="2"/></expression><expression tag="String.Text" Value="and so on:"/></expression></expression><expression tag="Formulae.Script.Row" type="0"><expression tag="List.CreateList"><expression tag="List.CreateList"><expression tag="Symbolic.Symbol" Name="y"/><expression tag="Symbolic.Symbol" Name="y"/><expression tag="Math.Number" Value="1"/><expression tag="Symbolic.Symbol" Name="x"/></expression><expression tag="Symbolic.Symbol" Name="x"/><expression tag="Math.Number" Value="1"/><expression tag="Math.Number" Value="5"/></expression></expression><expression tag="Formulae.Script.Row" type="1"><expression tag="List.List"><expression tag="List.List"><expression tag="Math.Number" Value="1"/></expression><expression tag="List.List"><expression tag="Math.Number" Value="1"/><expression tag="Math.Number" Value="2"/></expression><expression tag="List.List"><expression tag="Math.Number" Value="1"/><expression tag="Math.Number" Value="2"/><expression tag="Math.Number" Value="3"/></expression><expression tag="List.List"><expression tag="Math.Number" Value="1"/><expression tag="Math.Number" Value="2"/><expression tag="Math.Number" Value="3"/><expression tag="Math.Number" Value="4"/></expression><expression tag="List.List"><expression tag="Math.Number" Value="1"/><expression tag="Math.Number" Value="2"/><expression tag="Math.Number" Value="3"/><expression tag="Math.Number" Value="4"/><expression tag="Math.Number" Value="5"/></expression></expression></expression><expression tag="Formulae.Script.Row" type="0"><expression tag="Typesetting.MultiParagraph"><expression tag="Typesetting.Paragraph"><expression tag="String.Text" Value="Notice that the result is not a matrix, because all the sublist have not the same cardinality."/></expression><expression tag="Typesetting.Paragraph"><expression tag="String.Text" Value="Iterating values do not need to be positive, they can be also negative:"/></expression></expression></expression><expression tag="Formulae.Script.Row" type="0"><expression tag="List.CreateList"><expression tag="List.CreateList"><expression tag="Math.Arithmetic.Division"><expression tag="Symbolic.Symbol" Name="a"/><expression tag="Symbolic.Symbol" Name="b"/></expression><expression tag="Symbolic.Symbol" Name="b"/><expression tag="Math.Arithmetic.Negative"><expression tag="Math.Number" Value="5"/></expression><expression tag="Math.Number" Value="5"/></expression><expression tag="Symbolic.Symbol" Name="a"/><expression tag="Math.Arithmetic.Negative"><expression tag="Math.Number" Value="5"/></expression><expression tag="Math.Number" Value="5"/></expression></expression><expression tag="Formulae.Script.Row" type="1"><expression tag="List.List"><expression tag="List.List"><expression tag="Math.Number" Value="1"/><expression tag="Math.Arithmetic.Division"><expression tag="Math.Number" Value="5"/><expression tag="Math.Number" Value="4"/></expression><expression tag="Math.Arithmetic.Division"><expression tag="Math.Number" Value="5"/><expression tag="Math.Number" Value="3"/></expression><expression tag="Math.Arithmetic.Division"><expression tag="Math.Number" Value="5"/><expression tag="Math.Number" Value="2"/></expression><expression tag="Math.Number" Value="5"/><expression tag="Math.Arithmetic.Negative"><expression tag="Math.Infinity"/></expression><expression tag="Math.Arithmetic.Negative"><expression tag="Math.Number" Value="5"/></expression><expression tag="Math.Arithmetic.Negative"><expression tag="Math.Arithmetic.Division"><expression tag="Math.Number" Value="5"/><expression tag="Math.Number" Value="2"/></expression></expression><expression tag="Math.Arithmetic.Negative"><expression tag="Math.Arithmetic.Division"><expression tag="Math.Number" Value="5"/><expression tag="Math.Number" Value="3"/></expression></expression><expression tag="Math.Arithmetic.Negative"><expression tag="Math.Arithmetic.Division"><expression tag="Math.Number" Value="5"/><expression tag="Math.Number" Value="4"/></expression></expression><expression tag="Math.Arithmetic.Negative"><expression tag="Math.Number" Value="1"/></expression></expression><expression tag="List.List"><expression tag="Math.Arithmetic.Division"><expression tag="Math.Number" Value="4"/><expression tag="Math.Number" Value="5"/></expression><expression tag="Math.Number" Value="1"/><expression tag="Math.Arithmetic.Division"><expression tag="Math.Number" Value="4"/><expression tag="Math.Number" Value="3"/></expression><expression tag="Math.Number" Value="2"/><expression tag="Math.Number" Value="4"/><expression tag="Math.Arithmetic.Negative"><expression tag="Math.Infinity"/></expression><expression tag="Math.Arithmetic.Negative"><expression tag="Math.Number" Value="4"/></expression><expression tag="Math.Arithmetic.Negative"><expression tag="Math.Number" Value="2"/></expression><expression tag="Math.Arithmetic.Negative"><expression tag="Math.Arithmetic.Division"><expression tag="Math.Number" Value="4"/><expression tag="Math.Number" Value="3"/></expression></expression><expression tag="Math.Arithmetic.Negative"><expression tag="Math.Number" Value="1"/></expression><expression tag="Math.Arithmetic.Negative"><expression tag="Math.Arithmetic.Division"><expression tag="Math.Number" Value="4"/><expression tag="Math.Number" Value="5"/></expression></expression></expression><expression tag="List.List"><expression tag="Math.Arithmetic.Division"><expression tag="Math.Number" Value="3"/><expression tag="Math.Number" Value="5"/></expression><expression tag="Math.Arithmetic.Division"><expression tag="Math.Number" Value="3"/><expression tag="Math.Number" Value="4"/></expression><expression tag="Math.Number" Value="1"/><expression tag="Math.Arithmetic.Division"><expression tag="Math.Number" Value="3"/><expression tag="Math.Number" Value="2"/></expression><expression tag="Math.Number" Value="3"/><expression tag="Math.Arithmetic.Negative"><expression tag="Math.Infinity"/></expression><expression tag="Math.Arithmetic.Negative"><expression tag="Math.Number" Value="3"/></expression><expression tag="Math.Arithmetic.Negative"><expression tag="Math.Arithmetic.Division"><expression tag="Math.Number" Value="3"/><expression tag="Math.Number" Value="2"/></expression></expression><expression tag="Math.Arithmetic.Negative"><expression tag="Math.Number" Value="1"/></expression><expression tag="Math.Arithmetic.Negative"><expression tag="Math.Arithmetic.Division"><expression tag="Math.Number" Value="3"/><expression tag="Math.Number" Value="4"/></expression></expression><expression tag="Math.Arithmetic.Negative"><expression tag="Math.Arithmetic.Division"><expression tag="Math.Number" Value="3"/><expression tag="Math.Number" Value="5"/></expression></expression></expression><expression tag="List.List"><expression tag="Math.Arithmetic.Division"><expression tag="Math.Number" Value="2"/><expression tag="Math.Number" Value="5"/></expression><expression tag="Math.Arithmetic.Division"><expression tag="Math.Number" Value="1"/><expression tag="Math.Number" Value="2"/></expression><expression tag="Math.Arithmetic.Division"><expression tag="Math.Number" Value="2"/><expression tag="Math.Number" Value="3"/></expression><expression tag="Math.Number" Value="1"/><expression tag="Math.Number" Value="2"/><expression tag="Math.Arithmetic.Negative"><expression tag="Math.Infinity"/></expression><expression tag="Math.Arithmetic.Negative"><expression tag="Math.Number" Value="2"/></expression><expression tag="Math.Arithmetic.Negative"><expression tag="Math.Number" Value="1"/></expression><expression tag="Math.Arithmetic.Negative"><expression tag="Math.Arithmetic.Division"><expression tag="Math.Number" Value="2"/><expression tag="Math.Number" Value="3"/></expression></expression><expression tag="Math.Arithmetic.Negative"><expression tag="Math.Arithmetic.Division"><expression tag="Math.Number" Value="1"/><expression tag="Math.Number" Value="2"/></expression></expression><expression tag="Math.Arithmetic.Negative"><expression tag="Math.Arithmetic.Division"><expression tag="Math.Number" Value="2"/><expression tag="Math.Number" Value="5"/></expression></expression></expression><expression tag="List.List"><expression tag="Math.Arithmetic.Division"><expression tag="Math.Number" Value="1"/><expression tag="Math.Number" Value="5"/></expression><expression tag="Math.Arithmetic.Division"><expression tag="Math.Number" Value="1"/><expression tag="Math.Number" Value="4"/></expression><expression tag="Math.Arithmetic.Division"><expression tag="Math.Number" Value="1"/><expression tag="Math.Number" Value="3"/></expression><expression tag="Math.Arithmetic.Division"><expression tag="Math.Number" Value="1"/><expression tag="Math.Number" Value="2"/></expression><expression tag="Math.Number" Value="1"/><expression tag="Math.Arithmetic.Negative"><expression tag="Math.Infinity"/></expression><expression tag="Math.Arithmetic.Negative"><expression tag="Math.Number" Value="1"/></expression><expression tag="Math.Arithmetic.Negative"><expression tag="Math.Arithmetic.Division"><expression tag="Math.Number" Value="1"/><expression tag="Math.Number" Value="2"/></expression></expression><expression tag="Math.Arithmetic.Negative"><expression tag="Math.Arithmetic.Division"><expression tag="Math.Number" Value="1"/><expression tag="Math.Number" Value="3"/></expression></expression><expression tag="Math.Arithmetic.Negative"><expression tag="Math.Arithmetic.Division"><expression tag="Math.Number" Value="1"/><expression tag="Math.Number" Value="4"/></expression></expression><expression tag="Math.Arithmetic.Negative"><expression tag="Math.Arithmetic.Division"><expression tag="Math.Number" Value="1"/><expression tag="Math.Number" Value="5"/></expression></expression></expression><expression tag="List.List"><expression tag="Math.Number" Value="0"/><expression tag="Math.Number" Value="0"/><expression tag="Math.Number" Value="0"/><expression tag="Math.Number" Value="0"/><expression tag="Math.Number" Value="0"/><expression tag="Math.Infinity"/><expression tag="Math.Number" Value="0"/><expression tag="Math.Number" Value="0"/><expression tag="Math.Number" Value="0"/><expression tag="Math.Number" Value="0"/><expression tag="Math.Number" Value="0"/></expression><expression tag="List.List"><expression tag="Math.Arithmetic.Negative"><expression tag="Math.Arithmetic.Division"><expression tag="Math.Number" Value="1"/><expression tag="Math.Number" Value="5"/></expression></expression><expression tag="Math.Arithmetic.Negative"><expression tag="Math.Arithmetic.Division"><expression tag="Math.Number" Value="1"/><expression tag="Math.Number" Value="4"/></expression></expression><expression tag="Math.Arithmetic.Negative"><expression tag="Math.Arithmetic.Division"><expression tag="Math.Number" Value="1"/><expression tag="Math.Number" Value="3"/></expression></expression><expression tag="Math.Arithmetic.Negative"><expression tag="Math.Arithmetic.Division"><expression tag="Math.Number" Value="1"/><expression tag="Math.Number" Value="2"/></expression></expression><expression tag="Math.Arithmetic.Negative"><expression tag="Math.Number" Value="1"/></expression><expression tag="Math.Infinity"/><expression tag="Math.Number" Value="1"/><expression tag="Math.Arithmetic.Division"><expression tag="Math.Number" Value="1"/><expression tag="Math.Number" Value="2"/></expression><expression tag="Math.Arithmetic.Division"><expression tag="Math.Number" Value="1"/><expression tag="Math.Number" Value="3"/></expression><expression tag="Math.Arithmetic.Division"><expression tag="Math.Number" Value="1"/><expression tag="Math.Number" Value="4"/></expression><expression tag="Math.Arithmetic.Division"><expression tag="Math.Number" Value="1"/><expression tag="Math.Number" Value="5"/></expression></expression><expression tag="List.List"><expression tag="Math.Arithmetic.Negative"><expression tag="Math.Arithmetic.Division"><expression tag="Math.Number" Value="2"/><expression tag="Math.Number" Value="5"/></expression></expression><expression tag="Math.Arithmetic.Negative"><expression tag="Math.Arithmetic.Division"><expression tag="Math.Number" Value="1"/><expression tag="Math.Number" Value="2"/></expression></expression><expression tag="Math.Arithmetic.Negative"><expression tag="Math.Arithmetic.Division"><expression tag="Math.Number" Value="2"/><expression tag="Math.Number" Value="3"/></expression></expression><expression tag="Math.Arithmetic.Negative"><expression tag="Math.Number" Value="1"/></expression><expression tag="Math.Arithmetic.Negative"><expression tag="Math.Number" Value="2"/></expression><expression tag="Math.Infinity"/><expression tag="Math.Number" Value="2"/><expression tag="Math.Number" Value="1"/><expression tag="Math.Arithmetic.Division"><expression tag="Math.Number" Value="2"/><expression tag="Math.Number" Value="3"/></expression><expression tag="Math.Arithmetic.Division"><expression tag="Math.Number" Value="1"/><expression tag="Math.Number" Value="2"/></expression><expression tag="Math.Arithmetic.Division"><expression tag="Math.Number" Value="2"/><expression tag="Math.Number" Value="5"/></expression></expression><expression tag="List.List"><expression tag="Math.Arithmetic.Negative"><expression tag="Math.Arithmetic.Division"><expression tag="Math.Number" Value="3"/><expression tag="Math.Number" Value="5"/></expression></expression><expression tag="Math.Arithmetic.Negative"><expression tag="Math.Arithmetic.Division"><expression tag="Math.Number" Value="3"/><expression tag="Math.Number" Value="4"/></expression></expression><expression tag="Math.Arithmetic.Negative"><expression tag="Math.Number" Value="1"/></expression><expression tag="Math.Arithmetic.Negative"><expression tag="Math.Arithmetic.Division"><expression tag="Math.Number" Value="3"/><expression tag="Math.Number" Value="2"/></expression></expression><expression tag="Math.Arithmetic.Negative"><expression tag="Math.Number" Value="3"/></expression><expression tag="Math.Infinity"/><expression tag="Math.Number" Value="3"/><expression tag="Math.Arithmetic.Division"><expression tag="Math.Number" Value="3"/><expression tag="Math.Number" Value="2"/></expression><expression tag="Math.Number" Value="1"/><expression tag="Math.Arithmetic.Division"><expression tag="Math.Number" Value="3"/><expression tag="Math.Number" Value="4"/></expression><expression tag="Math.Arithmetic.Division"><expression tag="Math.Number" Value="3"/><expression tag="Math.Number" Value="5"/></expression></expression><expression tag="List.List"><expression tag="Math.Arithmetic.Negative"><expression tag="Math.Arithmetic.Division"><expression tag="Math.Number" Value="4"/><expression tag="Math.Number" Value="5"/></expression></expression><expression tag="Math.Arithmetic.Negative"><expression tag="Math.Number" Value="1"/></expression><expression tag="Math.Arithmetic.Negative"><expression tag="Math.Arithmetic.Division"><expression tag="Math.Number" Value="4"/><expression tag="Math.Number" Value="3"/></expression></expression><expression tag="Math.Arithmetic.Negative"><expression tag="Math.Number" Value="2"/></expression><expression tag="Math.Arithmetic.Negative"><expression tag="Math.Number" Value="4"/></expression><expression tag="Math.Infinity"/><expression tag="Math.Number" Value="4"/><expression tag="Math.Number" Value="2"/><expression tag="Math.Arithmetic.Division"><expression tag="Math.Number" Value="4"/><expression tag="Math.Number" Value="3"/></expression><expression tag="Math.Number" Value="1"/><expression tag="Math.Arithmetic.Division"><expression tag="Math.Number" Value="4"/><expression tag="Math.Number" Value="5"/></expression></expression><expression tag="List.List"><expression tag="Math.Arithmetic.Negative"><expression tag="Math.Number" Value="1"/></expression><expression tag="Math.Arithmetic.Negative"><expression tag="Math.Arithmetic.Division"><expression tag="Math.Number" Value="5"/><expression tag="Math.Number" Value="4"/></expression></expression><expression tag="Math.Arithmetic.Negative"><expression tag="Math.Arithmetic.Division"><expression tag="Math.Number" Value="5"/><expression tag="Math.Number" Value="3"/></expression></expression><expression tag="Math.Arithmetic.Negative"><expression tag="Math.Arithmetic.Division"><expression tag="Math.Number" Value="5"/><expression tag="Math.Number" Value="2"/></expression></expression><expression tag="Math.Arithmetic.Negative"><expression tag="Math.Number" Value="5"/></expression><expression tag="Math.Infinity"/><expression tag="Math.Number" Value="5"/><expression tag="Math.Arithmetic.Division"><expression tag="Math.Number" Value="5"/><expression tag="Math.Number" Value="2"/></expression><expression tag="Math.Arithmetic.Division"><expression tag="Math.Number" Value="5"/><expression tag="Math.Number" Value="3"/></expression><expression tag="Math.Arithmetic.Division"><expression tag="Math.Number" Value="5"/><expression tag="Math.Number" Value="4"/></expression><expression tag="Math.Number" Value="1"/></expression></expression></expression><expression tag="Formulae.Script.Row" type="0"><expression tag="Typesetting.Paragraph"><expression tag="String.Text" Value="To get the number names, in English and Spanish, for numbers 1 to 10:"/></expression></expression><expression tag="Formulae.Script.Row" type="0"><expression tag="List.CreateList"><expression tag="List.List"><expression tag="Symbolic.Symbol" Name="n"/><expression tag="Localization.Format.NumberName"><expression tag="Symbolic.Symbol" Name="n"/><expression tag="Localization.Locale.Locale" Value="en"/></expression><expression tag="Localization.Format.NumberName"><expression tag="Symbolic.Symbol" Name="n"/><expression tag="Localization.Locale.Locale" Value="es"/></expression></expression><expression tag="Symbolic.Symbol" Name="n"/><expression tag="Math.Number" Value="1"/><expression tag="Math.Number" Value="10"/></expression></expression><expression tag="Formulae.Script.Row" type="1"><expression tag="List.List"><expression tag="List.List"><expression tag="Math.Number" Value="1"/><expression tag="String.String" Value="one"/><expression tag="String.String" Value="uno"/></expression><expression tag="List.List"><expression tag="Math.Number" Value="2"/><expression tag="String.String" Value="two"/><expression tag="String.String" Value="dos"/></expression><expression tag="List.List"><expression tag="Math.Number" Value="3"/><expression tag="String.String" Value="three"/><expression tag="String.String" Value="tres"/></expression><expression tag="List.List"><expression tag="Math.Number" Value="4"/><expression tag="String.String" Value="four"/><expression tag="String.String" Value="cuatro"/></expression><expression tag="List.List"><expression tag="Math.Number" Value="5"/><expression tag="String.String" Value="five"/><expression tag="String.String" Value="cinco"/></expression><expression tag="List.List"><expression tag="Math.Number" Value="6"/><expression tag="String.String" Value="six"/><expression tag="String.String" Value="seis"/></expression><expression tag="List.List"><expression tag="Math.Number" Value="7"/><expression tag="String.String" Value="seven"/><expression tag="String.String" Value="siete"/></expression><expression tag="List.List"><expression tag="Math.Number" Value="8"/><expression tag="String.String" Value="eight"/><expression tag="String.String" Value="ocho"/></expression><expression tag="List.List"><expression tag="Math.Number" Value="9"/><expression tag="String.String" Value="nine"/><expression tag="String.String" Value="nueve"/></expression><expression tag="List.List"><expression tag="Math.Number" Value="10"/><expression tag="String.String" Value="ten"/><expression tag="String.String" Value="diez"/></expression></expression></expression><expression tag="Formulae.Script.Row" type="0"><expression tag="Typesetting.MultiParagraph"><expression tag="Typesetting.Paragraph"><expression tag="String.Text" Value="Usually, iterating values are stepped by 1. The step value can specified."/></expression><expression tag="Typesetting.Paragraph"><expression tag="String.Text" Value="The following example creates a list o even values (stepping by 2):"/></expression></expression></expression><expression tag="Formulae.Script.Row" type="0"><expression tag="List.CreateList"><expression tag="Symbolic.Symbol" Name="n"/><expression tag="Symbolic.Symbol" Name="n"/><expression tag="Math.Number" Value="0"/><expression tag="Math.Number" Value="20"/><expression tag="Math.Number" Value="2"/></expression></expression><expression tag="Formulae.Script.Row" type="1"><expression tag="List.List"><expression tag="Math.Number" Value="0"/><expression tag="Math.Number" Value="2"/><expression tag="Math.Number" Value="4"/><expression tag="Math.Number" Value="6"/><expression tag="Math.Number" Value="8"/><expression tag="Math.Number" Value="10"/><expression tag="Math.Number" Value="12"/><expression tag="Math.Number" Value="14"/><expression tag="Math.Number" Value="16"/><expression tag="Math.Number" Value="18"/><expression tag="Math.Number" Value="20"/></expression></expression><expression tag="Formulae.Script.Row" type="0"><expression tag="Typesetting.Paragraph"><expression tag="String.Text" Value="The stepper can be a rational quantity:"/></expression></expression><expression tag="Formulae.Script.Row" type="0"><expression tag="List.CreateList"><expression tag="Symbolic.Symbol" Name="z"/><expression tag="Symbolic.Symbol" Name="z"/><expression tag="Math.Number" Value="0"/><expression tag="Math.Number" Value="1"/><expression tag="Math.Arithmetic.Division"><expression tag="Math.Number" Value="1"/><expression tag="Math.Number" Value="10"/></expression></expression></expression><expression tag="Formulae.Script.Row" type="1"><expression tag="List.List"><expression tag="Math.Number" Value="0"/><expression tag="Math.Arithmetic.Division"><expression tag="Math.Number" Value="1"/><expression tag="Math.Number" Value="10"/></expression><expression tag="Math.Arithmetic.Division"><expression tag="Math.Number" Value="1"/><expression tag="Math.Number" Value="5"/></expression><expression tag="Math.Arithmetic.Division"><expression tag="Math.Number" Value="3"/><expression tag="Math.Number" Value="10"/></expression><expression tag="Math.Arithmetic.Division"><expression tag="Math.Number" Value="2"/><expression tag="Math.Number" Value="5"/></expression><expression tag="Math.Arithmetic.Division"><expression tag="Math.Number" Value="1"/><expression tag="Math.Number" Value="2"/></expression><expression tag="Math.Arithmetic.Division"><expression tag="Math.Number" Value="3"/><expression tag="Math.Number" Value="5"/></expression><expression tag="Math.Arithmetic.Division"><expression tag="Math.Number" Value="7"/><expression tag="Math.Number" Value="10"/></expression><expression tag="Math.Arithmetic.Division"><expression tag="Math.Number" Value="4"/><expression tag="Math.Number" Value="5"/></expression><expression tag="Math.Arithmetic.Division"><expression tag="Math.Number" Value="9"/><expression tag="Math.Number" Value="10"/></expression><expression tag="Math.Number" Value="1"/></expression></expression><expression tag="Formulae.Script.Row" type="0"><expression tag="Typesetting.Paragraph"><expression tag="String.Text" Value="The stepper can be also negative:"/></expression></expression><expression tag="Formulae.Script.Row" type="0"><expression tag="List.CreateList"><expression tag="Symbolic.Symbol" Name="w"/><expression tag="Symbolic.Symbol" Name="w"/><expression tag="Math.Number" Value="1.0"/><expression tag="Math.Number" Value="0.0"/><expression tag="Math.Arithmetic.Negative"><expression tag="Math.Number" Value="0.1"/></expression></expression></expression><expression tag="Formulae.Script.Row" type="1"><expression tag="List.List"><expression tag="Math.Number" Value="1.0"/><expression tag="Math.Number" Value="0.9"/><expression tag="Math.Number" Value="0.8"/><expression tag="Math.Number" Value="0.7"/><expression tag="Math.Number" Value="0.6"/><expression tag="Math.Number" Value="0.5"/><expression tag="Math.Number" Value="0.4"/><expression tag="Math.Number" Value="0.3"/><expression tag="Math.Number" Value="0.2"/><expression tag="Math.Number" Value="0.1"/><expression tag="Math.Number" Value="0."/></expression></expression><expression tag="Formulae.Script.Row" type="0"><expression tag="Typesetting.Paragraph"><expression tag="String.Text" Value="The following creates a matrix of colors:"/></expression></expression><expression tag="Formulae.Script.Row" type="0"><expression tag="List.CreateList"><expression tag="List.CreateList"><expression tag="Color.CreateColor"><expression tag="Symbolic.Symbol" Name="x"/><expression tag="Symbolic.Symbol" Name="y"/><expression tag="Math.Arithmetic.Multiplication"><expression tag="Symbolic.Symbol" Name="x"/><expression tag="Symbolic.Symbol" Name="y"/></expression></expression><expression tag="Symbolic.Symbol" Name="y"/><expression tag="Math.Number" Value="0"/><expression tag="Math.Number" Value="1"/><expression tag="Math.Arithmetic.Division"><expression tag="Math.Number" Value="1"/><expression tag="Math.Number" Value="10"/></expression></expression><expression tag="Symbolic.Symbol" Name="x"/><expression tag="Math.Number" Value="0"/><expression tag="Math.Number" Value="1"/><expression tag="Math.Arithmetic.Division"><expression tag="Math.Number" Value="1"/><expression tag="Math.Number" Value="10"/></expression></expression></expression><expression tag="Formulae.Script.Row" type="1"><expression tag="List.List"><expression tag="List.List"><expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/><expression tag="Color.Color" Red="0" Green="0.1" Blue="0" Alpha="1"/><expression tag="Color.Color" Red="0" Green="0.2" Blue="0" Alpha="1"/><expression tag="Color.Color" Red="0" Green="0.3" Blue="0" Alpha="1"/><expression tag="Color.Color" Red="0" Green="0.4" Blue="0" Alpha="1"/><expression tag="Color.Color" Red="0" Green="0.5" Blue="0" Alpha="1"/><expression tag="Color.Color" Red="0" Green="0.6" Blue="0" Alpha="1"/><expression tag="Color.Color" Red="0" Green="0.7" Blue="0" Alpha="1"/><expression tag="Color.Color" Red="0" Green="0.8" Blue="0" Alpha="1"/><expression tag="Color.Color" Red="0" Green="0.9" Blue="0" Alpha="1"/><expression tag="Color.Color" Red="0" Green="1" Blue="0" Alpha="1"/></expression><expression tag="List.List"><expression tag="Color.Color" Red="0.1" Green="0" Blue="0" Alpha="1"/><expression tag="Color.Color" Red="0.1" Green="0.1" Blue="0.01" Alpha="1"/><expression tag="Color.Color" Red="0.1" Green="0.2" Blue="0.02" Alpha="1"/><expression tag="Color.Color" Red="0.1" Green="0.3" Blue="0.03" Alpha="1"/><expression tag="Color.Color" Red="0.1" Green="0.4" Blue="0.04" Alpha="1"/><expression tag="Color.Color" Red="0.1" Green="0.5" Blue="0.05" Alpha="1"/><expression tag="Color.Color" Red="0.1" Green="0.6" Blue="0.06" Alpha="1"/><expression tag="Color.Color" Red="0.1" Green="0.7" Blue="0.07" Alpha="1"/><expression tag="Color.Color" Red="0.1" Green="0.8" Blue="0.08" Alpha="1"/><expression tag="Color.Color" Red="0.1" Green="0.9" Blue="0.09" Alpha="1"/><expression tag="Color.Color" Red="0.1" Green="1" Blue="0.1" Alpha="1"/></expression><expression tag="List.List"><expression tag="Color.Color" Red="0.2" Green="0" Blue="0" Alpha="1"/><expression tag="Color.Color" Red="0.2" Green="0.1" Blue="0.02" Alpha="1"/><expression tag="Color.Color" Red="0.2" Green="0.2" Blue="0.04" Alpha="1"/><expression tag="Color.Color" Red="0.2" Green="0.3" Blue="0.06" Alpha="1"/><expression tag="Color.Color" Red="0.2" Green="0.4" Blue="0.08" Alpha="1"/><expression tag="Color.Color" Red="0.2" Green="0.5" Blue="0.1" Alpha="1"/><expression tag="Color.Color" Red="0.2" Green="0.6" Blue="0.12" Alpha="1"/><expression tag="Color.Color" Red="0.2" Green="0.7" Blue="0.14" Alpha="1"/><expression tag="Color.Color" Red="0.2" Green="0.8" Blue="0.16" Alpha="1"/><expression tag="Color.Color" Red="0.2" Green="0.9" Blue="0.18" Alpha="1"/><expression tag="Color.Color" Red="0.2" Green="1" Blue="0.2" Alpha="1"/></expression><expression tag="List.List"><expression tag="Color.Color" Red="0.3" Green="0" Blue="0" Alpha="1"/><expression tag="Color.Color" Red="0.3" Green="0.1" Blue="0.03" Alpha="1"/><expression tag="Color.Color" Red="0.3" Green="0.2" Blue="0.06" Alpha="1"/><expression tag="Color.Color" Red="0.3" Green="0.3" Blue="0.09" Alpha="1"/><expression tag="Color.Color" Red="0.3" Green="0.4" Blue="0.12" Alpha="1"/><expression tag="Color.Color" Red="0.3" Green="0.5" Blue="0.15" Alpha="1"/><expression tag="Color.Color" Red="0.3" Green="0.6" Blue="0.18" Alpha="1"/><expression tag="Color.Color" Red="0.3" Green="0.7" Blue="0.21" Alpha="1"/><expression tag="Color.Color" Red="0.3" Green="0.8" Blue="0.24" Alpha="1"/><expression tag="Color.Color" Red="0.3" Green="0.9" Blue="0.27" Alpha="1"/><expression tag="Color.Color" Red="0.3" Green="1" Blue="0.3" Alpha="1"/></expression><expression tag="List.List"><expression tag="Color.Color" Red="0.4" Green="0" Blue="0" Alpha="1"/><expression tag="Color.Color" Red="0.4" Green="0.1" Blue="0.04" Alpha="1"/><expression tag="Color.Color" Red="0.4" Green="0.2" Blue="0.08" Alpha="1"/><expression tag="Color.Color" Red="0.4" Green="0.3" Blue="0.12" Alpha="1"/><expression tag="Color.Color" Red="0.4" Green="0.4" Blue="0.16" Alpha="1"/><expression tag="Color.Color" Red="0.4" Green="0.5" Blue="0.2" Alpha="1"/><expression tag="Color.Color" Red="0.4" Green="0.6" Blue="0.24" Alpha="1"/><expression tag="Color.Color" Red="0.4" Green="0.7" Blue="0.28" Alpha="1"/><expression tag="Color.Color" Red="0.4" Green="0.8" Blue="0.32" Alpha="1"/><expression tag="Color.Color" Red="0.4" Green="0.9" Blue="0.36" Alpha="1"/><expression tag="Color.Color" Red="0.4" Green="1" Blue="0.4" Alpha="1"/></expression><expression tag="List.List"><expression tag="Color.Color" Red="0.5" Green="0" Blue="0" Alpha="1"/><expression tag="Color.Color" Red="0.5" Green="0.1" Blue="0.05" Alpha="1"/><expression tag="Color.Color" Red="0.5" Green="0.2" Blue="0.1" Alpha="1"/><expression tag="Color.Color" Red="0.5" Green="0.3" Blue="0.15" Alpha="1"/><expression tag="Color.Color" Red="0.5" Green="0.4" Blue="0.2" Alpha="1"/><expression tag="Color.Color" Red="0.5" Green="0.5" Blue="0.25" Alpha="1"/><expression tag="Color.Color" Red="0.5" Green="0.6" Blue="0.3" Alpha="1"/><expression tag="Color.Color" Red="0.5" Green="0.7" Blue="0.35" Alpha="1"/><expression tag="Color.Color" Red="0.5" Green="0.8" Blue="0.4" Alpha="1"/><expression tag="Color.Color" Red="0.5" Green="0.9" Blue="0.45" Alpha="1"/><expression tag="Color.Color" Red="0.5" Green="1" Blue="0.5" Alpha="1"/></expression><expression tag="List.List"><expression tag="Color.Color" Red="0.6" Green="0" Blue="0" Alpha="1"/><expression tag="Color.Color" Red="0.6" Green="0.1" Blue="0.06" Alpha="1"/><expression tag="Color.Color" Red="0.6" Green="0.2" Blue="0.12" Alpha="1"/><expression tag="Color.Color" Red="0.6" Green="0.3" Blue="0.18" Alpha="1"/><expression tag="Color.Color" Red="0.6" Green="0.4" Blue="0.24" Alpha="1"/><expression tag="Color.Color" Red="0.6" Green="0.5" Blue="0.3" Alpha="1"/><expression tag="Color.Color" Red="0.6" Green="0.6" Blue="0.36" Alpha="1"/><expression tag="Color.Color" Red="0.6" Green="0.7" Blue="0.42" Alpha="1"/><expression tag="Color.Color" Red="0.6" Green="0.8" Blue="0.48" Alpha="1"/><expression tag="Color.Color" Red="0.6" Green="0.9" Blue="0.54" Alpha="1"/><expression tag="Color.Color" Red="0.6" Green="1" Blue="0.6" Alpha="1"/></expression><expression tag="List.List"><expression tag="Color.Color" Red="0.7" Green="0" Blue="0" Alpha="1"/><expression tag="Color.Color" Red="0.7" Green="0.1" Blue="0.07" Alpha="1"/><expression tag="Color.Color" Red="0.7" Green="0.2" Blue="0.14" Alpha="1"/><expression tag="Color.Color" Red="0.7" Green="0.3" Blue="0.21" Alpha="1"/><expression tag="Color.Color" Red="0.7" Green="0.4" Blue="0.28" Alpha="1"/><expression tag="Color.Color" Red="0.7" Green="0.5" Blue="0.35" Alpha="1"/><expression tag="Color.Color" Red="0.7" Green="0.6" Blue="0.42" Alpha="1"/><expression tag="Color.Color" Red="0.7" Green="0.7" Blue="0.49" Alpha="1"/><expression tag="Color.Color" Red="0.7" Green="0.8" Blue="0.56" Alpha="1"/><expression tag="Color.Color" Red="0.7" Green="0.9" Blue="0.63" Alpha="1"/><expression tag="Color.Color" Red="0.7" Green="1" Blue="0.7" Alpha="1"/></expression><expression tag="List.List"><expression tag="Color.Color" Red="0.8" Green="0" Blue="0" Alpha="1"/><expression tag="Color.Color" Red="0.8" Green="0.1" Blue="0.08" Alpha="1"/><expression tag="Color.Color" Red="0.8" Green="0.2" Blue="0.16" Alpha="1"/><expression tag="Color.Color" Red="0.8" Green="0.3" Blue="0.24" Alpha="1"/><expression tag="Color.Color" Red="0.8" Green="0.4" Blue="0.32" Alpha="1"/><expression tag="Color.Color" Red="0.8" Green="0.5" Blue="0.4" Alpha="1"/><expression tag="Color.Color" Red="0.8" Green="0.6" Blue="0.48" Alpha="1"/><expression tag="Color.Color" Red="0.8" Green="0.7" Blue="0.56" Alpha="1"/><expression tag="Color.Color" Red="0.8" Green="0.8" Blue="0.64" Alpha="1"/><expression tag="Color.Color" Red="0.8" Green="0.9" Blue="0.72" Alpha="1"/><expression tag="Color.Color" Red="0.8" Green="1" Blue="0.8" Alpha="1"/></expression><expression tag="List.List"><expression tag="Color.Color" Red="0.9" Green="0" Blue="0" Alpha="1"/><expression tag="Color.Color" Red="0.9" Green="0.1" Blue="0.09" Alpha="1"/><expression tag="Color.Color" Red="0.9" Green="0.2" Blue="0.18" Alpha="1"/><expression tag="Color.Color" Red="0.9" Green="0.3" Blue="0.27" Alpha="1"/><expression tag="Color.Color" Red="0.9" Green="0.4" Blue="0.36" Alpha="1"/><expression tag="Color.Color" Red="0.9" Green="0.5" Blue="0.45" Alpha="1"/><expression tag="Color.Color" Red="0.9" Green="0.6" Blue="0.54" Alpha="1"/><expression tag="Color.Color" Red="0.9" Green="0.7" Blue="0.63" Alpha="1"/><expression tag="Color.Color" Red="0.9" Green="0.8" Blue="0.72" Alpha="1"/><expression tag="Color.Color" Red="0.9" Green="0.9" Blue="0.81" Alpha="1"/><expression tag="Color.Color" Red="0.9" Green="1" Blue="0.9" Alpha="1"/></expression><expression tag="List.List"><expression tag="Color.Color" Red="1" Green="0" Blue="0" Alpha="1"/><expression tag="Color.Color" Red="1" Green="0.1" Blue="0.1" Alpha="1"/><expression tag="Color.Color" Red="1" Green="0.2" Blue="0.2" Alpha="1"/><expression tag="Color.Color" Red="1" Green="0.3" Blue="0.3" Alpha="1"/><expression tag="Color.Color" Red="1" Green="0.4" Blue="0.4" Alpha="1"/><expression tag="Color.Color" Red="1" Green="0.5" Blue="0.5" Alpha="1"/><expression tag="Color.Color" Red="1" Green="0.6" Blue="0.6" Alpha="1"/><expression tag="Color.Color" Red="1" Green="0.7" Blue="0.7" Alpha="1"/><expression tag="Color.Color" Red="1" Green="0.8" Blue="0.8" Alpha="1"/><expression tag="Color.Color" Red="1" Green="0.9" Blue="0.9" Alpha="1"/><expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/></expression></expression></expression><expression tag="Formulae.Script.Row" type="0"><expression tag="Typesetting.Paragraph"><expression tag="String.Text" Value="The following creates a plot of a few points, combining the width and height of the plot between the values 50, 100, 150 and 200:"/></expression></expression><expression tag="Formulae.Script.Row" type="0"><expression tag="List.CreateList"><expression tag="List.CreateList"><expression tag="Chart.XYChart"><expression tag="List.List"><expression tag="Math.Number" Value="1"/><expression tag="Math.Number" Value="5"/><expression tag="Math.Number" Value="3"/><expression tag="Math.Number" Value="10"/></expression><expression tag="List.List"><expression tag="List.List"><expression tag="String.String" Value="Width"/><expression tag="Symbolic.Symbol" Name="w"/></expression><expression tag="List.List"><expression tag="String.String" Value="Height"/><expression tag="Symbolic.Symbol" Name="h"/></expression></expression></expression><expression tag="Symbolic.Symbol" Name="h"/><expression tag="Math.Number" Value="50"/><expression tag="Math.Number" Value="200"/><expression tag="Math.Number" Value="50"/></expression><expression tag="Symbolic.Symbol" Name="w"/><expression tag="Math.Number" Value="50"/><expression tag="Math.Number" Value="200"/><expression tag="Math.Number" Value="50"/></expression></expression><expression tag="Formulae.Script.Row" type="1"><expression tag="List.List"><expression tag="List.List"><expression tag="Graphics.RasterGraphics" Value="iVBORw0KGgoAAAANSUhEUgAAADIAAAAyCAYAAAAeP4ixAAAC80lEQVRoQ+2YP0gbURzHPw614t/QoS20oJBFHFyUtpMIUhRHh+LQDhZREIIanZSa61lx85A4KAoWWpAOjirUSVxaRFz8swVBCq1SSVDUUsiV5xlyWkPe6V24k/tBSB73fu/e5/f9/e5efnncEcu7IxxYBdFN4GbfR8An4AXwDXgD/MplkKyCpPYmgMy+s8AhoAIRIAC89SLID+AZIL6fAN+Bp9eBKIqi19fXW2NMJllZXVUikcj7TI52KfIHKAb+AveAY+C++aYCQIwLCgpobW2lrKyMQCBAPB4nkUhkHCcODijp7+dDMJgTEEuKRCIi+yRtawvm5lDz83MC8hH4fVEjQ8ADoC1TalkCmZ+H01PUWMxWEPNTK7VPkZ6Pgc/A84v6eA38tAVkZAQaG1EXF20FkcyHzNNErUgrouvQ1gbRKKqmeRhkdxfGx0HTUFXVwyBLS7C3Bx0dHgfRNKipgbo6j4N0dsLwMDx86GGQ/X0YGoLJyfMnh3drZGUFNjagp8cjIMfHUCxON1dsagrKy6GpyQMgh4fQ1QUDA1BdfZmktxe6u6GiwgMgCwtG+oj3RTgMVVUGzNERhEIwOwt5xrnW3TUioi6eTMkkjI2lYdbWYHnZUOrC3AuyswPT0waAsO3tNMz6OhQVQUuLB0CiUQgGobk5XRspmNJSaG9Pp5prU6uvz6iBiQkj8mbb3DRegjMzUFLickVqayEWM2Cus5MTKCy8dMWdNRKPG0VeWZn5vH/liutAtMFBvUdEPFXkkiiuA/kSDuuvGhouF7kEjOtAvoZC+svR0f+LPAtMrkCkO42qoujvrHRRcvxClO40WvrPblIpV4pk7WuZG3SiSXd2dnb+Eb9lxqKRpyhKxobiTTuNVzM6a6dRop5vNcUukKyK3GqXEs52gUh3GiX2dKMpdoFIdxpvtEsJJ7tAJG7l7BQfxNn4Wl/dV8R6zJz18BVxNr7WV/cVsR4zZz18RZyNr/XVfUWsx8xZD18RZ+NrffV/nP6HQvHmTIAAAAAASUVORK5CYII="/><expression tag="Graphics.RasterGraphics" Value="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"/><expression tag="Graphics.RasterGraphics" Value="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"/><expression tag="Graphics.RasterGraphics" Value="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"/></expression><expression tag="List.List"><expression tag="Graphics.RasterGraphics" Value="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"/><expression tag="Graphics.RasterGraphics" Value="iVBORw0KGgoAAAANSUhEUgAAAGQAAABkCAYAAABw4pVUAAAKQUlEQVR4Xu2dXYxV1RXHfzjADARmCCgKTpjEisQYpQ9NLVCbSao+CGnxwQQbJbHaDFEICtQ6OnIHGPwY0QL6wBhjK6XRxgcbUm0TQsuHimg0fsQiibEZnJHCSHuHL2cKwzTr3nMv55w5H/ucfe4999w550XJ7LXOPuu/1/rvvdde+44hfSrKAmMqqjdpZ0gBqbBBkAKSAuJvgfb29uHm5mYGBgaoq6vzF/BooatDV166Ztaxd+/e9kwms86ty0E9ZNikyCx7OfAH4EfAe8DdwDHbS1Xa5EQEkEwmQ3d3N01NTVqA6OrQlZfOm3WsX78+UkAKxhFgzID8DvgPsB7IAFOAX9osqdLGAkg2m2XKFFEV/tHVoSsvPc/29THlsstyH1EuQHqBHwLy3yuBg0CjzYy+bcQzREbC1JIlS2hoaMgBIkbp7+9P5r9raxlesYKvW1upnzaNrVu3lsVDBoFJwDlgHHAaqLUBotKm+jxk/37O7dvHuMceS56HFACsKg7p7OTb2bO59PbbywrI74ETBoesBaYC99g8RKVNdXnId9/BsmX0P/00DVdcURJAzLOsgr2F3OVtO4AbDf64C/g3YCZ/tzYjGLvgIeGpvEIk9++HAwfg4YeLHSoVqZf0iwuARDLD0ZypafWhsxPmzSN7/fXF2WKiAYl6DRBmFIXugxGu2LaN7uPHi+upRAOiNToN6+vqCC1vCldmHYkGJMyIrhgZI1xx002WLiUakNCj02QCXR2h5E3higkTcgvbwo5DogEJHb9NgOjqCCVvm12VYy+rpJEh8bMsW7iqGg8pKeqlUm4LV/bXJDpkhYrfNgvo6ggs77AYrBoPCRW/bYDo6ggs7zC7SjkkrlmWS7iKw0Pse1yy0XipbbDa27hmKxO7l+UQriqBQ+YBC4E2B0CUUsaJnWW5LAbj8BCz7f8C/Ao46gBIFrgA7AFWAj3mNvaMoRwOmDNnjlbGsJBpDJtxVJU/dfw4jR0djOnqIjs4aMlwHj58OJcFlQxoqTKGbpPGBUALsNRjVjkd+A3wfeCnTu0S6SEe4SpOD9kN/Br4yGeaX2/k3yd7AVKqpUJJ9LqEqzg55CdGxrDZ54PlGIlkbH4MiMyIJ3Ee4rMYjMtD/gFsAf5ssrA5Y1iYZfUD7wDLgX95ARJ4DeCgTFeHkrzP7Cpdh5R7HeITruLykMhCc6LWIT7hKk4OiRyQwPtIDj3Q1eErr7AYrBoPUYrfPsNAV4evvMLsKuWQcnGIYriqGg+JLAaWSpFCuEo5xGYBXw7wActTXiFcifqq8RDf+K0w8nV1uMorhivpYsoh5eCQAOGqajxEwQHia6IYrlIOKQeHBAhXcXGISjawemoMA4SruDjEXnPoFEpiqTE82dtL/ZVSZRfucZxlBQxXcXCIAOKZDTTyH551iFHXGE4dGGByJsOZ++/n26amaGoUpWawpYWetjYmT58euAay3BlDr2xg+WsMn3+e/w0NMf7zz+G+++BGqScK9ozwkIDhKi4OMX+lWzbQtwq3oCSSGsMvv4RNmziyejWzxo+HJ56AO++EZr/8mRWwEeuQgOEqLg4pfIVXNrC8NYaPPw4330x27tz8yfOjR6GjAxYuhNtuU3YTi4cEnF0VXhIXh8j77dnAeGoM330Xdu6EJ5+EMaaTRydOwIYNsGAB3HGHMijFhiHCVboOOXcOHnwQli+Ha6+17CPljNPfDxs3wnXXwdKlVsAcILJ4SIhwVQkcEnzk2SS0OOSNN+Crr2D16pxWx72os2fz3jNzJrS0wCWXuPa5KB8yXMXNIdpgiILQp06y2TwQQuCXyzrUutNq6dzgYI70kduGVq6EsWMd+170EI1wFQeHRAKEfZYVWOm2bTBpEtwlZfIKz/nzsGWL3J8Ea9ZArf02EJOOkOFq9HJId3eeG8TAEyYU7eCbD7lwAbq64JtvoLUVJk602DAnL0AtW4aUOJt1K0A+wksTXbATKJexbh3Mnw+33GKxk5KO4WHYvh1kASmXxDQ0FHXk5I8cGXEjgyoYo5NDPvgAXnsNnnlmBEH7eojZsq+/Dm+/DWvXwrRpF0f3iy/mbmSwlzirgjK6OGRoCFatgnvvhRtuULWRe7u33oI334S2NpgxAzRmV04vSXTIUhrdYrzPPoNHHvGeJQWBas8eePVVePRRzn7xBRM/+cRygUwQVfaZXqIB8Y3/p07BQw+B8IfLFruvDjfrHjwIL73E4NSp1C5aFDpcjS4Oefnl/Er7HvvVXBetrORlbqB8+GGel2R2pXH3Yxwc8jNZzwFzgH8CskzeZ/tOlaxiTkTpbG9vL2QysHlzfu1Rquf06Uj1lytk7QTkLtpDwC+M/7en6VSyihZAPEe3bH0Iicvurcej5SFeK/0AAyAODzF373vAX4FrHDzEL6toAcQ1/gvJSrh67jmoqfE0TWgOMbTqysfNIXKNnxR9SgXu31ws5ZpVtKdwa2pqaGxstBZ91tcztGoVJ269lfHz5/umUAt9CFv0qSsvuZienh6GhobKXvQp+fI/GWD80cejw9cY7tqVXzXL4i2BT7k4RMqgNxhXjO/ysVP4GkPZNpdch2xvKF5BPlo5xOm2UqmwPWW6kly/xnDHDjhzJp/DUHx0OUBXPm4OUTSTdzPHfMixY7mVc47ITZt/fi8crR7iZ5dAf3dchzz7LFx1FRg3RAdSWEGNy8UhkX7yCA85dAheeCG/CBwnV8urP6mHqNvKtaUlpz5rVn7jcPHi/BZ4wEeXA3Tlq49DPv4Ydu/OH98J8aQeEsJodpEih8hBBDmAIPnuq6+OQHP8KhLNIQOvvELdyZOwYkVoS6YeEtp0FwVzHtLayvkHHmDsU08V06lhVOtygK58VXFIf18fDcZvN4UBQ2RSDwlrOZOcUj4kgvfEoSLRHKI7ulMPiWjIaZ3ttfVBlwN05ePiEJWCTpU2OXOGPtvrMCB0vUxX3u6l5QpZKgWdKm0sgETkcBWlplyAqJSr+bYxZwzlWlW5JrbwO7LV9O/29nbX+4uVLjZWGGIqBZ0qbSyvEoC8Oq/Qr1z409GhK18Iwap9iAoQ39GvUhbttIWi+iFu4OgaVFc+LkBUCjpV2qgM+qpuE5WHRPrDklVtcZ+PiwqQ0WzDSL89BSRSc+orSwHRt2GkGioZEPPRojD9VDkA7mfMxcYh8tnGIfI1wF4/IZe/y2H0jOlYlGOzMB8asj+hxZQPadveoHIA3K9T24EO4GtAfhB9EzDTT8jh7z8ApD8zRjMgZru4HQBXta3USy8C5PzqXFUho10d8L7xAzZ/TwHJ/9a73wFwLxsXQud/Abm15r2AgGyWCyWA39p+X37UhSz54CAHwL3sLIXvErKkBkb4JMgjP/Fkp4aS72UF6WDQtmE5JMgBcLc+dQEbgT7g50AnMCvoB5ja+35LJZO60wHuIP11OwB+OoBB5Y4O8QqpafkUkFnWgQDy9qaJBkTju5MrGmTEJfcrE9TzFJAKAysFJAWkwixQYd35P4tDqN0kKRZmAAAAAElFTkSuQmCC"/><expression tag="Graphics.RasterGraphics" Value="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"/><expression tag="Graphics.RasterGraphics" Value="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"/></expression><expression tag="List.List"><expression tag="Graphics.RasterGraphics" Value="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"/><expression tag="Graphics.RasterGraphics" Value="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"/><expression tag="Graphics.RasterGraphics" Value="iVBORw0KGgoAAAANSUhEUgAAAJYAAACWCAYAAAA8AXHiAAAOQ0lEQVR4Xu2df4gd1RXHP0kIWXVNQixNWtOsGGqFgO0fRaMWCfSPRVti+pciscFfKBJ0sW2MMbhrao2WoomoJIIYmxTif7UEjZTaplCarVKwYKuolMSkTShmd+2Kb7Fryn07b52dN/Puj7l3Zt68MxA2j3vvOfd+75lzvjPvnXPnIZcgEACBeQFkikhBADEsMYIgCIhhBYFVhFbSsEZGRs6uW7dudncajQZ9fX2l7Zbob8f/yJEjI8PDww9nbUplDWt4eHh2zseOHWNgYKA0wxL97fjv2LGj+w1rfHycpUuXlmZYor8df9+GdTa2u3FvtxzYD6wFjgI3A6cTlmDSpzlEhcK4xyrNokRxJgK+DaulSBlY3LBeAM4AOwAVw5R7uTUxK5M+qYYlHqN6HrsowzoJXA6ovxcCo8DKhGGZ9Ek1LOE45XLM4x98wKrVq+dsZ1GGNQX0A58BC4FJYFHCsLR9VAhUY9QT4I033siSJUua3OrEiRNMT0/PflYebGJiorDPPa1/4UKm77mHk9u2sfiCC5r7ofB/6qmngpD3ZCg08UYmfYRjVY3XvfYavPMO3HtvKR5rH/BRxLEeApYBtyQwMukjHCvFsErlmFu3Mrl+Pf1XXRXUsOJPhS1FisSvAA4AV0T8aiNwCoh7tqw+bVAmnwqFY5XEsY4fh8ce49iWLQxcdFFQwyrEUScNq9Q7Fpqcoiffo734oiK8jA8Otq0/FHkPamDyHisovGbCp6fhrrvgkUdguXoFOfeqhWH1rMeI9rKU9Y+OwuHDMDyc6rFrYVjCsUrgWI8/DldeCddcQxr+tTCsUu7YmOfvOf1jY3DffbBnDyxaVF+PZUYKpJc3BF5+GU6dgjvvLPy7Qm9rSBMkT4VzUSncYw4Nwd13wyWXNCeSpr8WoVA4VoEc6913Z0Lgk0/OWrdwrEB+tHCPkVhHofr37oUVK+D662dnUVuPFcheRGwSgampmXdXyltpflhZi1BY6B1bte/qinzzf+QIHD0K998/B4XaeizhWAVxrJERuO46uFz9tO6LSzhWoODWEx7z9GnYvn2GuC9Y0BseK5C9iNg4Ai+9BI0GbNpkhItwLCOYOneqvcc6e3bmvdUDD8CqVW1gCMfyYERpImrP8d56Cw4ehJ07UxEUjhXIsGrvsXbvhksvhcHBVARr67EC2YuIVQh88gls3gxPPw3nnWeMiXAsY6iyO9baY2UkS8TRqK3Hqj3H0Rh/0PVv3Qo33QSXXZY5C+FYHrxTmojaeqwoWYJnnoF52fVhauuxAtmLiI2SJbjhBmsshGNZQ9Y+oJYeS5MsURWOlcw3VMmrX0psUbJPpu+VvMK5yAXhWLFkCd29VxWOdSXwPWB7imEZFXqTX5DORS6Ix4wlS+gMqyoc6xBwB/DvFMMaBz4H/gCoYgAn0hYleYW6rc7ZnkiWcJFWNMe6GlC/wP9hh8l+GVA/+PkW8N14P6k2M1NdJ1lNx3e1m08PHmT65En+d9ttqfpM9IeqNpNlN78DfgL8VXMXLI5qaZ1v4rGCcAyL27R2+hPJEjooyuZY10TVZr4od5w+Y1XtbwvwHUCNabuEYwXkWCnJEjrDKptj/R7YDfw6NtF4tZnWU+EE8CdgM/BPE8PSLVzaLRBISZawGD3btWiO5TJH8Vga1Lw9FVokS8SnVLbH8mJUSoi8x5oLpTeOl5Esodu4sjmWbn7G7cKxAnGsjGQJ3cbU1mPpFi7tBgh0SJYwGN3WRTiWC2qJMd44juNcvOi3TJYQjuW4WTbDvHEcG6Wxvrn1a5IldNMSjqVDyLHdi8dw1K2G5davSZbQTU04lg6hXm3XJEu4wCIcywW1OnEsx2QJ4VgeDEcnIjfH0SnQtOfSb5AsoZuecCwdQo7tuTmOo97WsFz6DZIldNMTjqVDqNfaDZMlXGARjuWCWl04Vo5kCeFYHgxHJyIXx9EJN2h30m+RLKGbgnAsHUKO7bk4jqNOncfQirVIltDJEo6lQ6iX2i2SJVxgEY7lglq3cywPyRI6j1kLw3LiGB4MqiWi6/QbnCxhA49wLBu0LPp2HceyTJbQQSEcS4dQL7Q7JEu4wFKLUNh1HsNlpzqMsVq/p2QJ4VieNzFNXNdwLMdkCR2EwrF0CDm2W3kMRx2dhhnrd0yW0E25TI5lUklGHSy8H1gLHAVuBk6nLUpqN+i2OqPdMVnCRVtRHCuemJo1zxeAM1G29DCgMqJvNTEs4zvWBSGDMV2h33OyRFU4ljIsXSWZk4A6pEX9vRAYBVaaGFbZHOfDt9/ma2vWGJhgmC5G68+RLKGbdRU4VmYlGWAK6Ac+AxYCk8Ci+KIqWW3m44+bp2F9tGEDCwYHjaqzJKu15P2srTYzNkb/li18OjTE+WvWtFWrCaG/6Gozyk6yKsk4eyzdHRWsXWW3KN6iiuu/8QasXg233948gLtSV85kCZe1FMWxWnPrVElmH6BKSO4AHgKWAbeYhMLSOM4rr8DoKONDQyw991x4/nl4//2ZE95XpkZxlz3SjtGuP0CyRJU4lppLspJMnNSvAA4AV0T8aiNwysSwjDiGdnssO6hT3B98EB59lGONBgMDAzMC1CP9/v2wcSOs01VsstSZ0b3j+j0kS+hmWQWOpZujUXvptRtaIXDtWrj22va8vhMn4IknCguNHT2Wh2QJ3aaU+R5LNzer9tLfY0UhsMmvsgrrq7fcJYXGOWB6SJaw2pyoc9Ecy2WObWNK9VixEMhy9U5Xk4lcQGjM9FgBkyWqwrG8GFRLSGn1sRIhsDUfLccLHBoz9XtKltBtnnAsHUK69owQqH0qU3IDhsZU/R6TJXSwCMfSIdSpPSUEOokrIDQ25+UxWcJlncKxTFDLCIGtoUYeK67Hc2hM1R84WUI4lonh6PpongK1HCtNvsfQ2Kbfc7KEDh7hWDqE0toNQqC1x4rr8RAa2/R7TpbQwSYcS4dQsl0TAm3FZfb3HBrxnCzhsk7hWJ1QM3kRqnuPZborOULjHI9RULKEcCzTjU32MwiBrSFOHCtrXg6hcY7+AMkSOgiFY+kQarVbhsBcHCttTpahcVZ/oGQJHWzCsXQItdoNQ6CpOKd+LqExULKEy/yFY+UIga2h3j2W5VPjrP4CkyWEY9ncbpYhMAjHcgiNTY7T1wfbt8OePbBggc2qc/cVjqWD0DEEBvVYrTl3CI1N/ep3V40GbNqkW6X3duFYnSC1eAr0vjM2AtOeGnOeLGGj3rSvcCyFlGMILIRjGYTGyTffpP/QIdi503TfvfarrcfK/R7JMQQWxrHSzCAWGj/t7+ecq6+GwUGvBmMqTDhWGlIeQmAhHCtrl19/HZ57Dp59FpapxKbir9p6LGcoc4ZAZ72+B05OQr/K9a3O1dscK2cILI1jJeynVI+Z8V1pUYa1Xh3lDHwD+DvwI+CPCXxMKtI0h3j5zbuHEFgqx4qBl5tj5nR0ZXKs3wAPA/8Abor+rwp/xC+TijSphmV9x3oOgdb6c25kcngV9RflseJYrAZeBS5JMSxdRZpUw7LeJ08h0FpvDw0o2rBUGv0hYDtwOAPnzIo0XqrNNBqc3baNf23ezHkXX+ylOoy22sv4OBMTEyxZssSLvmR1mCrqL7LajKp99VJkVL/S3LxZFWnycSzPIVA41gwCZXKsO4CfRuUff6sxqk4VafJxrEAhsIocp8ioW+Z7rOQTn1r3+cB/gXkRCK0+yYo0bRg51W7w+BRY5KZ1q66iOZYXnKxrNwQKga3FiMcab3LH+FULw9K+xwkUAoVjlc+xvHiqlhArj1VACBSPVVOPlWm1gUOg17ulZsJqEQozPUbgECgcawaBMp8Kvd6PRt8VFhAChWP1GscqOAQKx+oVjlVQCPTqhmsmrH4cq8AQKByrVzhWwSFQOFavcKySQqBwrDpzrBJCYM1okdfl1INjjY2xdNcuiE6K8IqQgTDxWDX1WGcOHGDZe+/NnMSVdVKEgYG4dtF+V+kq2HBcFfV3v8eamuLzoSHmK6OKToow3A9v3cRj1dRjNYvzV+2MQG9m252Cut9j+aoBmmP/xGPV1GNVkWPksFProVVcv3gs621sHyAeq6Yey4NtiAjPCIjH8gCoeKyaeqwqcgwP9mosoorrF49lvH3ZHcVj1dRjebANEeEZgaI8ljo8eT+wFjgaZUSfTqzFpE9ziFWWjmfA0sSJxyrPY70AnAF2AMOAym68NbFJJn1SDauKHKMAe55VUcX1F+WxTgKqKIj6q+pijQIrE+Br+8SrzfT19dFoNJr/Fi9ezPz582c/q7Z4e+jPor8df7UvIyMjrfIJbfdZZoPlHTkFqCKZnwELgUlgUUKGSZ9UtcrgOi3Ccq7W3UW/Pf6+DEvrjSJvpvNqYlgpCHSjYfsyrH3ARxHHeghQdaNvSWBk0sfam8iAaiLgy7BUJb8DwBURv9oInFJnQsTKGGX1qSYyMqtcCPgyrFyTkMH1Q0AMq357WokViWFVYhvqN4luMKx4Gcoy5mtyOEIoy9gQHczw9ehghh8DR0Ip6yBXHQ6hXnwb42/csYTFJFUaH0Dgea4mhyN4Vjkr7pfAI8CHwA+AXwBfDaUsQ+63AYXBV8SwwiGfdThCOI0zktXL5u8D6lXON0Mri8nvA/4C3Au8LoYVBnmTwxFCaG5RgTHguuhL/hB60mTuUmXegScTr460+iUUaiFqdrA5HMFMol2vc6JQqM4rUnyrqOvzFC9lZDNGnYpahUZPWRzL5nAE31DtBX4G/Ae4Hvg5sMq3EkN5Vvh3g2GlHU5Q5LyzDkdQX7SHvtQ3GMpLqfOH/gaop8I/h1aaIb92hlUSjqI2DwJF3vl55iljuwwBMawu27Buma4YVrfsVJfNUwyryzasW6b7fyevYmkxQ51HAAAAAElFTkSuQmCC"/><expression tag="Graphics.RasterGraphics" Value=""/></expression><expression tag="List.List"><expression tag="Graphics.RasterGraphics" Value="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"/><expression tag="Graphics.RasterGraphics" Value="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"/><expression tag="Graphics.RasterGraphics" Value="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"/><expression tag="Graphics.RasterGraphics" Value="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"/></expression></expression></expression><expression tag="Formulae.Script.Row" type="0"><expression tag="Typesetting.MultiParagraph"><expression tag="Typesetting.Paragraph"><expression tag="Typesetting.BoldChunk"><expression tag="String.Text" Value="Form 3. Iterating over the elements of a list"/></expression></expression><expression tag="Typesetting.Paragraph"><expression tag="String.Text" Value="The third form of the arraization expression let us create a list by the iteration over the elements of another list. See the following example:"/></expression></expression></expression><expression tag="Formulae.Script.Row" type="0"><expression tag="List.CreateList"><expression tag="Math.Arithmetic.Exponentiation"><expression tag="Symbolic.Symbol" Name="x"/><expression tag="Symbolic.Symbol" Name="i"/></expression><expression tag="Symbolic.Symbol" Name="i"/><expression tag="List.List"><expression tag="Math.Number" Value="0"/><expression tag="Symbolic.Symbol" Name="a"/><expression tag="Symbolic.Symbol" Name="5"/></expression></expression></expression><expression tag="Formulae.Script.Row" type="1"><expression tag="List.List"><expression tag="Math.Number" Value="1"/><expression tag="Math.Arithmetic.Exponentiation"><expression tag="Symbolic.Symbol" Name="x"/><expression tag="Symbolic.Symbol" Name="a"/></expression><expression tag="Math.Arithmetic.Exponentiation"><expression tag="Symbolic.Symbol" Name="x"/><expression tag="Symbolic.Symbol" Name="5"/></expression></expression></expression><expression tag="Formulae.Script.Row" type="0"><expression tag="Typesetting.Paragraph"><expression tag="String.Text" Value="How is formatted 12,345.678 currency units in some different locales?"/></expression></expression><expression tag="Formulae.Script.Row" type="0"><expression tag="List.CreateList"><expression tag="List.List"><expression tag="Symbolic.Symbol" Name="locale"/><expression tag="Localization.Format.FormatCurrency"><expression tag="Math.Number" Value="12345678"/><expression tag="Symbolic.Symbol" Name="locale"/></expression></expression><expression tag="Symbolic.Symbol" Name="locale"/><expression tag="List.List"><expression tag="Localization.Locale.Locale" Value="ar-u-nu-arab"/><expression tag="Localization.Locale.Locale" Value="ru"/><expression tag="Localization.Locale.Locale" Value="pl-PL"/><expression tag="Localization.Locale.Locale" Value="sk-SK"/></expression></expression></expression><expression tag="Formulae.Script.Row" type="1"><expression tag="List.List"><expression tag="List.List"><expression tag="Localization.Locale.Locale" Value="ar-u-nu-arab"/><expression tag="String.String" Value="¤ ١٢٬٣٤٥٬٦٧٨"/></expression><expression tag="List.List"><expression tag="Localization.Locale.Locale" Value="ru"/><expression tag="String.String" Value="¤ 12 345 678,00"/></expression><expression tag="List.List"><expression tag="Localization.Locale.Locale" Value="pl-PL"/><expression tag="String.String" Value="12 345 678 zł"/></expression><expression tag="List.List"><expression tag="Localization.Locale.Locale" Value="sk-SK"/><expression tag="String.String" Value="12 345 678,00 €"/></expression></expression></expression><expression tag="Formulae.Script.Row" type="0"><expression tag="Typesetting.MultiParagraph"><expression tag="Typesetting.Paragraph"><expression tag="String.Text" Value="The combination of this form of arraization and the cartesian exponentiation can be used to generate"/><expression tag="Internet.UniformResourceLocator" Value="https://en.wikipedia.org/wiki/Truth_table" Description="truth tables."/></expression><expression tag="Typesetting.Paragraph"><expression tag="String.Text" Value="The following example generates a truth table for the logical operations of"/><expression tag="Internet.UniformResourceLocator" Value="https://en.wikipedia.org/wiki/Logical_conjunction" Description="conjunction"/><expression tag="String.Text" Value=","/><expression tag="Internet.UniformResourceLocator" Value="https://en.wikipedia.org/wiki/Logical_disjunction" Description="disjunction"/><expression tag="String.Text" Value="and"/><expression tag="Internet.UniformResourceLocator" Value="https://en.wikipedia.org/wiki/Material_conditional" Description="implication."/></expression></expression></expression><expression tag="Formulae.Script.Row" type="0"><expression tag="List.CreateList"><expression tag="List.List"><expression tag="Expression.Child"><expression tag="Symbolic.Symbol" Name="x"/><expression tag="Math.Number" Value="1"/></expression><expression tag="Expression.Child"><expression tag="Symbolic.Symbol" Name="x"/><expression tag="Math.Number" Value="2"/></expression><expression tag="Logic.Conjunction"><expression tag="Expression.Child"><expression tag="Symbolic.Symbol" Name="x"/><expression tag="Math.Number" Value="1"/></expression><expression tag="Expression.Child"><expression tag="Symbolic.Symbol" Name="x"/><expression tag="Math.Number" Value="2"/></expression></expression><expression tag="Logic.Disjunction"><expression tag="Expression.Child"><expression tag="Symbolic.Symbol" Name="x"/><expression tag="Math.Number" Value="1"/></expression><expression tag="Expression.Child"><expression tag="Symbolic.Symbol" Name="x"/><expression tag="Math.Number" Value="2"/></expression></expression><expression tag="Logic.Implication"><expression tag="Expression.Child"><expression tag="Symbolic.Symbol" Name="x"/><expression tag="Math.Number" Value="1"/></expression><expression tag="Expression.Child"><expression tag="Symbolic.Symbol" Name="x"/><expression tag="Math.Number" Value="2"/></expression></expression></expression><expression tag="Symbolic.Symbol" Name="x"/><expression tag="List.CartesianExponentiation"><expression tag="List.List"><expression tag="Logic.True"/><expression tag="Logic.False"/></expression><expression tag="Math.Number" Value="2"/></expression></expression></expression><expression tag="Formulae.Script.Row" type="1"><expression tag="List.List"><expression tag="List.List"><expression tag="Logic.True"/><expression tag="Logic.True"/><expression tag="Logic.True"/><expression tag="Logic.True"/><expression tag="Logic.True"/></expression><expression tag="List.List"><expression tag="Logic.True"/><expression tag="Logic.False"/><expression tag="Logic.False"/><expression tag="Logic.True"/><expression tag="Logic.False"/></expression><expression tag="List.List"><expression tag="Logic.False"/><expression tag="Logic.True"/><expression tag="Logic.False"/><expression tag="Logic.True"/><expression tag="Logic.True"/></expression><expression tag="List.List"><expression tag="Logic.False"/><expression tag="Logic.False"/><expression tag="Logic.False"/><expression tag="Logic.False"/><expression tag="Logic.True"/></expression></expression></expression><expression tag="Formulae.Script.Row" type="0"><expression tag="Typesetting.Paragraph"><expression tag="String.Text" Value="Explanation. Remember that the list to iterate on is:"/></expression></expression><expression tag="Formulae.Script.Row" type="0"><expression tag="List.CartesianExponentiation"><expression tag="List.List"><expression tag="Logic.True"/><expression tag="Logic.False"/></expression><expression tag="Math.Number" Value="2"/></expression></expression><expression tag="Formulae.Script.Row" type="1"><expression tag="List.List"><expression tag="List.List"><expression tag="Logic.True"/><expression tag="Logic.True"/></expression><expression tag="List.List"><expression tag="Logic.True"/><expression tag="Logic.False"/></expression><expression tag="List.List"><expression tag="Logic.False"/><expression tag="Logic.True"/></expression><expression tag="List.List"><expression tag="Logic.False"/><expression tag="Logic.False"/></expression></expression></expression><expression tag="Formulae.Script.Row" type="0"><expression tag="Typesetting.MultiParagraph"><expression tag="Typesetting.Paragraph"><expression tag="String.Text" Value="So the symbol"/><expression tag="Symbolic.Symbol" Name="x"/><expression tag="String.Text" Value="will take these 4 rows (one at a time). But every row is not a single value, it is a list (of two elements). Because of this, the first element of these sublists is"/><expression tag="Expression.Child"><expression tag="Symbolic.Symbol" Name="x"/><expression tag="Math.Number" Value="1"/></expression><expression tag="String.Text" Value="and the second one is"/><expression tag="Expression.Child"><expression tag="Symbolic.Symbol" Name="x"/><expression tag="Math.Number" Value="2"/></expression></expression><expression tag="Typesetting.Paragraph"><expression tag="String.Text" Value="If the elements to iterate on are also lists of known cardinality (such as the last example), we can define a list of symbols instead of only one, in order to these symbols take the values, improving the readability, like the following example, that produces the same result than the last one:"/></expression></expression></expression><expression tag="Formulae.Script.Row" type="0"><expression tag="List.CreateList"><expression tag="List.List"><expression tag="Symbolic.Symbol" Name="p"/><expression tag="Symbolic.Symbol" Name="q"/><expression tag="Logic.Conjunction"><expression tag="Symbolic.Symbol" Name="p"/><expression tag="Symbolic.Symbol" Name="q"/></expression><expression tag="Logic.Disjunction"><expression tag="Symbolic.Symbol" Name="p"/><expression tag="Symbolic.Symbol" Name="q"/></expression><expression tag="Logic.Implication"><expression tag="Symbolic.Symbol" Name="p"/><expression tag="Symbolic.Symbol" Name="q"/></expression></expression><expression tag="List.List"><expression tag="Symbolic.Symbol" Name="p"/><expression tag="Symbolic.Symbol" Name="q"/></expression><expression tag="List.CartesianExponentiation"><expression tag="List.List"><expression tag="Logic.True"/><expression tag="Logic.False"/></expression><expression tag="Math.Number" Value="2"/></expression></expression></expression><expression tag="Formulae.Script.Row" type="1"><expression tag="List.List"><expression tag="List.List"><expression tag="Logic.True"/><expression tag="Logic.True"/><expression tag="Logic.True"/><expression tag="Logic.True"/><expression tag="Logic.True"/></expression><expression tag="List.List"><expression tag="Logic.True"/><expression tag="Logic.False"/><expression tag="Logic.False"/><expression tag="Logic.True"/><expression tag="Logic.False"/></expression><expression tag="List.List"><expression tag="Logic.False"/><expression tag="Logic.True"/><expression tag="Logic.False"/><expression tag="Logic.True"/><expression tag="Logic.True"/></expression><expression tag="List.List"><expression tag="Logic.False"/><expression tag="Logic.False"/><expression tag="Logic.False"/><expression tag="Logic.False"/><expression tag="Logic.True"/></expression></expression></expression><expression tag="Formulae.Script.Row" type="0"><expression tag="Typesetting.MultiParagraph"><expression tag="Typesetting.Paragraph"><expression tag="Typesetting.BoldChunk"><expression tag="String.Text" Value="Tables"/></expression></expression><expression tag="Typesetting.Paragraph"><expression tag="String.Text" Value="A table, in Fōrmulæ, is a structure more visual than functional. It can help a lot when you want to present bidimensional information."/></expression><expression tag="Typesetting.Paragraph"><expression tag="String.Text" Value="A table is a wrapper for a matrix. The matrix is the only subexpression of a table expression. The table expression makes the information of the matrix to be presented in a tabular form."/></expression><expression tag="Typesetting.Paragraph"><expression tag="String.Text" Value="The follwing is a matrix, created by arraization:"/></expression></expression></expression><expression tag="Formulae.Script.Row" type="0"><expression tag="List.CreateList"><expression tag="List.CreateList"><expression tag="Math.Arithmetic.Addition"><expression tag="Symbolic.Symbol" Name="x"/><expression tag="Symbolic.Symbol" Name="y"/></expression><expression tag="Symbolic.Symbol" Name="y"/><expression tag="Math.Number" Value="0"/><expression tag="Math.Number" Value="3"/></expression><expression tag="Symbolic.Symbol" Name="x"/><expression tag="Math.Number" Value="0"/><expression tag="Math.Number" Value="3"/></expression></expression><expression tag="Formulae.Script.Row" type="1"><expression tag="List.List"><expression tag="List.List"><expression tag="Math.Number" Value="0"/><expression tag="Math.Number" Value="1"/><expression tag="Math.Number" Value="2"/><expression tag="Math.Number" Value="3"/></expression><expression tag="List.List"><expression tag="Math.Number" Value="1"/><expression tag="Math.Number" Value="2"/><expression tag="Math.Number" Value="3"/><expression tag="Math.Number" Value="4"/></expression><expression tag="List.List"><expression tag="Math.Number" Value="2"/><expression tag="Math.Number" Value="3"/><expression tag="Math.Number" Value="4"/><expression tag="Math.Number" Value="5"/></expression><expression tag="List.List"><expression tag="Math.Number" Value="3"/><expression tag="Math.Number" Value="4"/><expression tag="Math.Number" Value="5"/><expression tag="Math.Number" Value="6"/></expression></expression></expression><expression tag="Formulae.Script.Row" type="0"><expression tag="Typesetting.Paragraph"><expression tag="String.Text" Value="The following is the same expression, but encolsed in a"/><expression tag="Internet.UniformResourceLocator" Value="/?reference=List.Table" Description="Table"/><expression tag="String.Text" Value="expression."/></expression></expression><expression tag="Formulae.Script.Row" type="0"><expression tag="List.Table"><expression tag="List.CreateList"><expression tag="List.CreateList"><expression tag="Math.Arithmetic.Addition"><expression tag="Symbolic.Symbol" Name="x"/><expression tag="Symbolic.Symbol" Name="y"/></expression><expression tag="Symbolic.Symbol" Name="y"/><expression tag="Math.Number" Value="0"/><expression tag="Math.Number" Value="3"/></expression><expression tag="Symbolic.Symbol" Name="x"/><expression tag="Math.Number" Value="0"/><expression tag="Math.Number" Value="3"/></expression></expression></expression><expression tag="Formulae.Script.Row" type="1"><expression tag="List.Table"><expression tag="List.List"><expression tag="List.List"><expression tag="Math.Number" Value="0"/><expression tag="Math.Number" Value="1"/><expression tag="Math.Number" Value="2"/><expression tag="Math.Number" Value="3"/></expression><expression tag="List.List"><expression tag="Math.Number" Value="1"/><expression tag="Math.Number" Value="2"/><expression tag="Math.Number" Value="3"/><expression tag="Math.Number" Value="4"/></expression><expression tag="List.List"><expression tag="Math.Number" Value="2"/><expression tag="Math.Number" Value="3"/><expression tag="Math.Number" Value="4"/><expression tag="Math.Number" Value="5"/></expression><expression tag="List.List"><expression tag="Math.Number" Value="3"/><expression tag="Math.Number" Value="4"/><expression tag="Math.Number" Value="5"/><expression tag="Math.Number" Value="6"/></expression></expression></expression></expression><expression tag="Formulae.Script.Row" type="0"><expression tag="Typesetting.MultiParagraph"><expression tag="Typesetting.Paragraph"><expression tag="Typesetting.BoldChunk"><expression tag="String.Text" Value="Headers in tables created programatically"/></expression></expression><expression tag="Typesetting.Paragraph"><expression tag="String.Text" Value="Arraization is a powerful tool, but it has the advantage that it does not create headers. The following is an example previously used, in it, we use arraization to create a table of number names in two languages:"/></expression></expression></expression><expression tag="Formulae.Script.Row" type="0"><expression tag="List.CreateList"><expression tag="List.List"><expression tag="Symbolic.Symbol" Name="n"/><expression tag="Localization.Format.NumberName"><expression tag="Symbolic.Symbol" Name="n"/><expression tag="Localization.Locale.Locale" Value="en"/></expression><expression tag="Localization.Format.NumberName"><expression tag="Symbolic.Symbol" Name="n"/><expression tag="Localization.Locale.Locale" Value="es"/></expression></expression><expression tag="Symbolic.Symbol" Name="n"/><expression tag="Math.Number" Value="1"/><expression tag="Math.Number" Value="5"/></expression></expression><expression tag="Formulae.Script.Row" type="1"><expression tag="List.List"><expression tag="List.List"><expression tag="Math.Number" Value="1"/><expression tag="String.String" Value="one"/><expression tag="String.String" Value="uno"/></expression><expression tag="List.List"><expression tag="Math.Number" Value="2"/><expression tag="String.String" Value="two"/><expression tag="String.String" Value="dos"/></expression><expression tag="List.List"><expression tag="Math.Number" Value="3"/><expression tag="String.String" Value="three"/><expression tag="String.String" Value="tres"/></expression><expression tag="List.List"><expression tag="Math.Number" Value="4"/><expression tag="String.String" Value="four"/><expression tag="String.String" Value="cuatro"/></expression><expression tag="List.List"><expression tag="Math.Number" Value="5"/><expression tag="String.String" Value="five"/><expression tag="String.String" Value="cinco"/></expression></expression></expression><expression tag="Formulae.Script.Row" type="0"><expression tag="Typesetting.Paragraph"><expression tag="String.Text" Value="Tables can be created programatically. The arraization (type 2 and 3) have equivalent expression for table creation. Let us see the equivalent of the previous example with tables:"/></expression></expression><expression tag="Formulae.Script.Row" type="0"><expression tag="List.CreateTable"><expression tag="List.List"><expression tag="Symbolic.Symbol" Name="n"/><expression tag="Localization.Format.NumberName"><expression tag="Symbolic.Symbol" Name="n"/><expression tag="Localization.Locale.Locale" Value="en"/></expression><expression tag="Localization.Format.NumberName"><expression tag="Symbolic.Symbol" Name="n"/><expression tag="Localization.Locale.Locale" Value="es"/></expression></expression><expression tag="Symbolic.Symbol" Name="n"/><expression tag="Math.Number" Value="1"/><expression tag="Math.Number" Value="5"/></expression></expression><expression tag="Formulae.Script.Row" type="1"><expression tag="List.Table"><expression tag="List.List"><expression tag="List.List"><expression tag="Symbolic.Symbol" Name="n"/><expression tag="Localization.Format.NumberName"><expression tag="Symbolic.Symbol" Name="n"/><expression tag="Localization.Locale.Locale" Value="en"/></expression><expression tag="Localization.Format.NumberName"><expression tag="Symbolic.Symbol" Name="n"/><expression tag="Localization.Locale.Locale" Value="es"/></expression></expression><expression tag="List.List"><expression tag="Math.Number" Value="1"/><expression tag="String.String" Value="one"/><expression tag="String.String" Value="uno"/></expression><expression tag="List.List"><expression tag="Math.Number" Value="2"/><expression tag="String.String" Value="two"/><expression tag="String.String" Value="dos"/></expression><expression tag="List.List"><expression tag="Math.Number" Value="3"/><expression tag="String.String" Value="three"/><expression tag="String.String" Value="tres"/></expression><expression tag="List.List"><expression tag="Math.Number" Value="4"/><expression tag="String.String" Value="four"/><expression tag="String.String" Value="cuatro"/></expression><expression tag="List.List"><expression tag="Math.Number" Value="5"/><expression tag="String.String" Value="five"/><expression tag="String.String" Value="cinco"/></expression></expression></expression></expression><expression tag="Formulae.Script.Row" type="0"><expression tag="Typesetting.Paragraph"><expression tag="String.Text" Value="Another example, previously done by arraization. It is a truth table:"/></expression></expression><expression tag="Formulae.Script.Row" type="0"><expression tag="List.CreateTable"><expression tag="List.List"><expression tag="Symbolic.Symbol" Name="p"/><expression tag="Symbolic.Symbol" Name="q"/><expression tag="Logic.Conjunction"><expression tag="Symbolic.Symbol" Name="p"/><expression tag="Symbolic.Symbol" Name="q"/></expression><expression tag="Logic.Disjunction"><expression tag="Symbolic.Symbol" Name="p"/><expression tag="Symbolic.Symbol" Name="q"/></expression><expression tag="Logic.Implication"><expression tag="Symbolic.Symbol" Name="p"/><expression tag="Symbolic.Symbol" Name="q"/></expression></expression><expression tag="List.List"><expression tag="Symbolic.Symbol" Name="p"/><expression tag="Symbolic.Symbol" Name="q"/></expression><expression tag="List.CartesianExponentiation"><expression tag="List.List"><expression tag="Logic.True"/><expression tag="Logic.False"/></expression><expression tag="Math.Number" Value="2"/></expression></expression></expression><expression tag="Formulae.Script.Row" type="1"><expression tag="List.Table"><expression tag="List.List"><expression tag="List.List"><expression tag="Symbolic.Symbol" Name="p"/><expression tag="Symbolic.Symbol" Name="q"/><expression tag="Logic.Conjunction"><expression tag="Symbolic.Symbol" Name="p"/><expression tag="Symbolic.Symbol" Name="q"/></expression><expression tag="Logic.Disjunction"><expression tag="Symbolic.Symbol" Name="p"/><expression tag="Symbolic.Symbol" Name="q"/></expression><expression tag="Logic.Implication"><expression tag="Symbolic.Symbol" Name="p"/><expression tag="Symbolic.Symbol" Name="q"/></expression></expression><expression tag="List.List"><expression tag="Logic.True"/><expression tag="Logic.True"/><expression tag="Logic.True"/><expression tag="Logic.True"/><expression tag="Logic.True"/></expression><expression tag="List.List"><expression tag="Logic.True"/><expression tag="Logic.False"/><expression tag="Logic.False"/><expression tag="Logic.True"/><expression tag="Logic.False"/></expression><expression tag="List.List"><expression tag="Logic.False"/><expression tag="Logic.True"/><expression tag="Logic.False"/><expression tag="Logic.True"/><expression tag="Logic.True"/></expression><expression tag="List.List"><expression tag="Logic.False"/><expression tag="Logic.False"/><expression tag="Logic.False"/><expression tag="Logic.False"/><expression tag="Logic.True"/></expression></expression></expression></expression><expression tag="Formulae.Script.Row" type="0"><expression tag="Typesetting.MultiParagraph"><expression tag="Typesetting.Paragraph"><expression tag="String.Text" Value="A programatically table works identically than arraization, excepting that:"/></expression><expression tag="Typesetting.BulletedList"><expression tag="Typesetting.Paragraph"><expression tag="String.Text" Value="At first, it duplicates the list that is the argument of the"/><expression tag="Internet.UniformResourceLocator" Value="/?reference=List.CreateTable" Description="CreateTable"/><expression tag="String.Text" Value="expression without evaluation. It is the first row of the resulting table, or its header."/></expression><expression tag="Typesetting.Paragraph"><expression tag="String.Text" Value="It perform the same process than arraization."/></expression><expression tag="Typesetting.Paragraph"><expression tag="String.Text" Value="At the end, the resulting matrix is enclosed in a"/><expression tag="Internet.UniformResourceLocator" Value="/?reference=List.Table" Description="Table"/><expression tag="String.Text" Value="expression."/></expression></expression><expression tag="Typesetting.Paragraph"><expression tag="Typesetting.BoldChunk"><expression tag="String.Text" Value="Custom headers"/></expression></expression><expression tag="Typesetting.Paragraph"><expression tag="String.Text" Value="Sometimes, you want specific headers. For this, if the list expression is an array of two lists, the first list will be the custom headers, and the second one will be the expression to calculate body rows. Because this specification is a list of list, it appears as a matrix:"/></expression></expression></expression><expression tag="Formulae.Script.Row" type="0"><expression tag="List.CreateTable"><expression tag="List.List"><expression tag="List.List"><expression tag="String.Text" Value="Number"/><expression tag="String.Text" Value="In English"/><expression tag="String.Text" Value="In Spanish"/></expression><expression tag="List.List"><expression tag="Symbolic.Symbol" Name="n"/><expression tag="Localization.Format.NumberName"><expression tag="Symbolic.Symbol" Name="n"/><expression tag="Localization.Locale.Locale" Value="en"/></expression><expression tag="Localization.Format.NumberName"><expression tag="Symbolic.Symbol" Name="n"/><expression tag="Localization.Locale.Locale" Value="es"/></expression></expression></expression><expression tag="Symbolic.Symbol" Name="n"/><expression tag="Math.Number" Value="1"/><expression tag="Math.Number" Value="5"/></expression></expression><expression tag="Formulae.Script.Row" type="1"><expression tag="List.Table"><expression tag="List.List"><expression tag="List.List"><expression tag="String.Text" Value="Number"/><expression tag="String.Text" Value="In English"/><expression tag="String.Text" Value="In Spanish"/></expression><expression tag="List.List"><expression tag="Math.Number" Value="1"/><expression tag="String.String" Value="one"/><expression tag="String.String" Value="uno"/></expression><expression tag="List.List"><expression tag="Math.Number" Value="2"/><expression tag="String.String" Value="two"/><expression tag="String.String" Value="dos"/></expression><expression tag="List.List"><expression tag="Math.Number" Value="3"/><expression tag="String.String" Value="three"/><expression tag="String.String" Value="tres"/></expression><expression tag="List.List"><expression tag="Math.Number" Value="4"/><expression tag="String.String" Value="four"/><expression tag="String.String" Value="cuatro"/></expression><expression tag="List.List"><expression tag="Math.Number" Value="5"/><expression tag="String.String" Value="five"/><expression tag="String.String" Value="cinco"/></expression></expression></expression></expression><expression tag="Formulae.Script.Row" type="0"><expression tag="Typesetting.MultiParagraph"><expression tag="Typesetting.Paragraph"><expression tag="Typesetting.BoldChunk"><expression tag="String.Text" Value="Creating tables in programs"/></expression></expression><expression tag="Typesetting.Paragraph"><expression tag="String.Text" Value="Other times, you will not use the"/><expression tag="Internet.UniformResourceLocator" Value="/?reference=List.CreateTable" Description="CreateTable"/><expression tag="String.Text" Value="expression, because the information ig going to be created by a program. It is easy to add headers and format result as a table."/></expression><expression tag="Typesetting.Paragraph"><expression tag="String.Text" Value="In the next example, we want to create a table of numbers and their squares. In the program that will be used for this, notice the following:"/></expression><expression tag="Typesetting.BulletedList"><expression tag="Typesetting.Paragraph"><expression tag="String.Text" Value="In creates a matrix containing the custom headers only."/></expression><expression tag="Typesetting.Paragraph"><expression tag="String.Text" Value="The program adds the rows to the table."/></expression><expression tag="Typesetting.Paragraph"><expression tag="String.Text" Value="At the end, the resullt is encolsed in a"/><expression tag="Internet.UniformResourceLocator" Value="/?reference=List.Table" Description="Table"/><expression tag="String.Text" Value="expression."/></expression></expression></expression></expression><expression tag="Formulae.Script.Row" type="0"><expression tag="Programming.Block" Description="Description" Expanded="True"><expression tag="Symbolic.Local"><expression tag="Symbolic.Assignment"><expression tag="Symbolic.Symbol" Name="matrix"/><expression tag="List.List"><expression tag="List.List"><expression tag="String.Text" Value="number"/><expression tag="String.Text" Value="square"/></expression></expression></expression></expression><expression tag="Programming.ForFromTo"><expression tag="Expression.Append"><expression tag="Symbolic.Symbol" Name="matrix"/><expression tag="List.List"><expression tag="Symbolic.Symbol" Name="n"/><expression tag="Math.Arithmetic.Exponentiation"><expression tag="Symbolic.Symbol" Name="n"/><expression tag="Math.Number" Value="2"/></expression></expression></expression><expression tag="Symbolic.Symbol" Name="n"/><expression tag="Math.Number" Value="1"/><expression tag="Math.Number" Value="5"/></expression><expression tag="List.Table"><expression tag="Symbolic.Symbol" Name="matrix"/></expression></expression></expression><expression tag="Formulae.Script.Row" type="1"><expression tag="List.Table"><expression tag="List.List"><expression tag="List.List"><expression tag="String.Text" Value="number"/><expression tag="String.Text" Value="square"/></expression><expression tag="List.List"><expression tag="Math.Number" Value="1"/><expression tag="Math.Number" Value="1"/></expression><expression tag="List.List"><expression tag="Math.Number" Value="2"/><expression tag="Math.Number" Value="4"/></expression><expression tag="List.List"><expression tag="Math.Number" Value="3"/><expression tag="Math.Number" Value="9"/></expression><expression tag="List.List"><expression tag="Math.Number" Value="4"/><expression tag="Math.Number" Value="16"/></expression><expression tag="List.List"><expression tag="Math.Number" Value="5"/><expression tag="Math.Number" Value="25"/></expression></expression></expression></expression><expression tag="Formulae.Script.Row" type="0"><expression tag="Typesetting.MultiParagraph"><expression tag="Typesetting.Rule"/><expression tag="Typesetting.Paragraph"><expression tag="String.Text" Value="Author: Laurence R. Ugalde"/></expression><expression tag="Typesetting.Paragraph"><expression tag="String.Text" Value="Created: April 4, 2021. Last modified:"/><expression tag="Time.Time" Value="1626926520000"/></expression></expression></expression></expression>