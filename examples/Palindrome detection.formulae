<expression tag="Formulae.Script"><expression tag="Formulae.Script.Row" type="0"><expression tag="Typesetting.MultiParagraph"><expression tag="Typesetting.Paragraph"><expression tag="Typesetting.BoldChunk"><expression tag="String.Text" Value="Palindrome detection"/></expression></expression><expression tag="Typesetting.Paragraph"><expression tag="String.Text" Value="This exercise shows a solution for the"/><expression tag="Internet.UniformResourceLocator" Value="https://rosettacode.org/wiki/Palindrome_detection" Description="Palindrome detection"/><expression tag="String.Text" Value="problem, described in the website"/><expression tag="Internet.UniformResourceLocator" Value="https://rosettacode.org/wiki/Rosetta_Code" Description="Rosetta code."/></expression><expression tag="Typesetting.Paragraph"><expression tag="Typesetting.BoldChunk"><expression tag="String.Text" Value="Summary of the description from Rosetta Code"/></expression></expression><expression tag="Typesetting.Paragraph"><expression tag="String.Text" Value="A"/><expression tag="Internet.UniformResourceLocator" Value="https://en.wikipedia.org/wiki/Palindrome" Description="palindrome"/><expression tag="String.Text" Value="is a phrase which reads the same backward and forward."/></expression><expression tag="Typesetting.Paragraph"><expression tag="String.Text" Value="Write a function or program that checks whether a given sequence of characters (or, if you prefer, bytes) is a palindrome."/></expression><expression tag="Typesetting.Paragraph"><expression tag="String.Text" Value="For extra credit:"/></expression><expression tag="Typesetting.BulletedList"><expression tag="Typesetting.Paragraph"><expression tag="String.Text" Value="Support Unicode characters."/></expression><expression tag="Typesetting.Paragraph"><expression tag="String.Text" Value="Write a second function (possibly as a wrapper to the first) which detects inexact palindromes, i.e. phrases that are palindromes if white-space and punctuation is ignored and case-insensitive comparison is used."/></expression></expression><expression tag="Typesetting.Paragraph"><expression tag="Typesetting.BoldChunk"><expression tag="String.Text" Value="Solution"/></expression></expression></expression></expression><expression tag="Formulae.Script.Row" type="2"><expression tag="Symbolic.Assignment"><expression tag="Symbolic.Function"><expression tag="Symbolic.Symbol" Name="Is exact palindrome"/><expression tag="List.List"><expression tag="Symbolic.Symbol" Name="string"/></expression></expression><expression tag="Relation.Equals"><expression tag="Symbolic.Symbol" Name="string"/><expression tag="String.Reverse"><expression tag="Symbolic.Symbol" Name="string"/></expression></expression></expression></expression><expression tag="Formulae.Script.Row" type="2"><expression tag="Symbolic.Assignment"><expression tag="Symbolic.Function"><expression tag="Symbolic.Symbol" Name="Is inexact palindrome"/><expression tag="List.List"><expression tag="Symbolic.Symbol" Name="string"/></expression></expression><expression tag="Programming.Block" Description="Description" Expanded="True"><expression tag="Symbolic.Local"><expression tag="Symbolic.Assignment"><expression tag="Symbolic.Symbol" Name="s"/><expression tag="String.Uppercase"><expression tag="String.ReplaceAll"><expression tag="Symbolic.Symbol" Name="string"/><expression tag="String.String" Value="[\p{Space}\p{Punct}]+"/><expression tag="String.String" Value=""/></expression></expression></expression></expression><expression tag="Relation.Equals"><expression tag="Symbolic.Symbol" Name="s"/><expression tag="String.Reverse"><expression tag="Symbolic.Symbol" Name="s"/></expression></expression></expression></expression></expression><expression tag="Formulae.Script.Row" type="0"><expression tag="Typesetting.Paragraph"><expression tag="Typesetting.BoldChunk"><expression tag="String.Text" Value="Use cases"/></expression></expression></expression><expression tag="Formulae.Script.Row" type="0"><expression tag="List.CreateTable"><expression tag="List.List"><expression tag="Symbolic.Symbol" Name="s"/><expression tag="Symbolic.Function"><expression tag="Symbolic.Symbol" Name="Is exact palindrome"/><expression tag="List.List"><expression tag="Symbolic.Symbol" Name="s"/></expression></expression><expression tag="Symbolic.Function"><expression tag="Symbolic.Symbol" Name="Is inexact palindrome"/><expression tag="List.List"><expression tag="Symbolic.Symbol" Name="s"/></expression></expression></expression><expression tag="Symbolic.Symbol" Name="s"/><expression tag="List.List"><expression tag="String.String" Value="Fōrmulæ"/><expression tag="String.String" Value="rotor"/><expression tag="String.String" Value="Madam, ... I'm Adam."/><expression tag="String.String" Value="never odd or even"/><expression tag="String.String" Value="Rosetta code"/><expression tag="String.String" Value="stressed desserts"/></expression></expression></expression><expression tag="Formulae.Script.Row" type="1"><expression tag="List.Table"><expression tag="List.List"><expression tag="List.List"><expression tag="Symbolic.Symbol" Name="s"/><expression tag="Symbolic.Function"><expression tag="Symbolic.Symbol" Name="Is exact palindrome"/><expression tag="List.List"><expression tag="Symbolic.Symbol" Name="s"/></expression></expression><expression tag="Symbolic.Function"><expression tag="Symbolic.Symbol" Name="Is inexact palindrome"/><expression tag="List.List"><expression tag="Symbolic.Symbol" Name="s"/></expression></expression></expression><expression tag="List.List"><expression tag="String.String" Value="Fōrmulæ"/><expression tag="Logic.False"/><expression tag="Logic.False"/></expression><expression tag="List.List"><expression tag="String.String" Value="rotor"/><expression tag="Logic.True"/><expression tag="Logic.True"/></expression><expression tag="List.List"><expression tag="String.String" Value="Madam, ... I'm Adam."/><expression tag="Logic.False"/><expression tag="Logic.True"/></expression><expression tag="List.List"><expression tag="String.String" Value="never odd or even"/><expression tag="Logic.False"/><expression tag="Logic.True"/></expression><expression tag="List.List"><expression tag="String.String" Value="Rosetta code"/><expression tag="Logic.False"/><expression tag="Logic.False"/></expression><expression tag="List.List"><expression tag="String.String" Value="stressed desserts"/><expression tag="Logic.True"/><expression tag="Logic.True"/></expression></expression></expression></expression><expression tag="Formulae.Script.Row" type="0"><expression tag="Typesetting.MultiParagraph"><expression tag="Typesetting.Paragraph"><expression tag="Typesetting.BoldChunk"><expression tag="String.Text" Value="See also:"/></expression></expression><expression tag="Typesetting.BulletedList"><expression tag="Typesetting.Paragraph"><expression tag="String.Text" Value="Other"/><expression tag="Internet.UniformResourceLocator" Value="/?article=Rosetta_Code_examples" Description="Rosetta code"/><expression tag="String.Text" Value="examples"/></expression></expression><expression tag="Typesetting.Paragraph"><expression tag="String.Text" Value="Author: Laurence R. Ugalde"/></expression><expression tag="Typesetting.Paragraph"><expression tag="String.Text" Value="Last modified:"/><expression tag="Time.Time" Value="1621294372336"/></expression></expression></expression></expression>