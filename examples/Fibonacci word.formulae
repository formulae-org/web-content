<expression tag="Formulae.Script" Modules="org.formulae.typesetting,org.formulae.text.string,org.formulae.expression,org.formulae.math.arithmetic,org.formulae.visualization,org.formulae.symbolic,org.formulae.list,org.formulae.programming,org.formulae.relation,org.formulae.graphics.raster,org.formulae.time">
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Typesetting.MultiParagraph">
			<expression tag="Typesetting.Paragraph">
				<expression tag="Typesetting.BoldChunk">
					<expression tag="String.Text" Value="Fibonacci word"/>
				</expression>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="A"/>
				<expression tag="Internet.UniformResourceLocator" Value="https://en.wikipedia.org/wiki/Fibonacci_word" Description="Fibonacci word"/>
				<expression tag="String.Text" Value="is a specific sequence of binary digits (or symbols from any two-letter alphabet). The Fibonacci word is formed by repeated concatenation in the same way that the"/>
				<expression tag="Internet.UniformResourceLocator" Value="https://en.wikipedia.org/wiki/Fibonacci_number" Description="Fibonacci numbers"/>
				<expression tag="String.Text" Value="are formed by repeated addition."/>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="Let"/>
				<expression tag="Expression.Child">
					<expression tag="String.Text" Value="S"/>
					<expression tag="Math.Number" Value="0"/>
				</expression>
				<expression tag="String.Text" Value="be"/>
				<expression tag="String.String" Value="0"/>
				<expression tag="String.Text" Value="and"/>
				<expression tag="Expression.Child">
					<expression tag="String.Text" Value="S"/>
					<expression tag="Math.Number" Value="1"/>
				</expression>
				<expression tag="String.Text" Value="be"/>
				<expression tag="String.String" Value="01"/>
				<expression tag="String.Text" Value=". Now"/>
				<expression tag="Visualization.HorizontalArray">
					<expression tag="Expression.Child">
						<expression tag="String.Text" Value="S"/>
						<expression tag="String.Text" Value="n"/>
					</expression>
					<expression tag="String.Text" Value="="/>
					<expression tag="String.Concatenation">
						<expression tag="Expression.Child">
							<expression tag="String.Text" Value="S"/>
							<expression tag="Math.Arithmetic.Addition">
								<expression tag="String.Text" Value="n"/>
								<expression tag="Math.Arithmetic.Negative">
									<expression tag="Math.Number" Value="1"/>
								</expression>
							</expression>
						</expression>
						<expression tag="Expression.Child">
							<expression tag="String.Text" Value="S"/>
							<expression tag="Math.Arithmetic.Addition">
								<expression tag="String.Text" Value="n"/>
								<expression tag="Math.Arithmetic.Negative">
									<expression tag="Math.Number" Value="2"/>
								</expression>
							</expression>
						</expression>
					</expression>
				</expression>
				<expression tag="String.Text" Value="(the concatenation of the previous sequence and the one before that)."/>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="A"/>
				<expression tag="Internet.UniformResourceLocator" Value="https://en.wikipedia.org/wiki/Fibonacci_word_fractal" Description="Fibonacci word fractal"/>
				<expression tag="String.Text" Value="is a"/>
				<expression tag="Internet.UniformResourceLocator" Value="https://en.wikipedia.org/wiki/Fractal_curve" Description="fractal curve"/>
				<expression tag="String.Text" Value="defined on the plane from the Fibonacci word."/>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="This curve is built iteratively by applying to the Fibonacci word 0100101001001... the odd/even drawing rule:"/>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="For each digit at position k :"/>
			</expression>
			<expression tag="Typesetting.BulletedList">
				<expression tag="Typesetting.Paragraph">
					<expression tag="String.Text" Value="Draw a segment forward"/>
				</expression>
				<expression tag="Typesetting.MultiParagraph">
					<expression tag="Typesetting.Paragraph">
						<expression tag="String.Text" Value="If the digit is 0:"/>
					</expression>
					<expression tag="Typesetting.BulletedList">
						<expression tag="Typesetting.Paragraph">
							<expression tag="String.Text" Value="Turn 90° to the left if k is even"/>
						</expression>
						<expression tag="Typesetting.Paragraph">
							<expression tag="String.Text" Value="Turn 90° to the right if k is odd"/>
						</expression>
					</expression>
				</expression>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="In this script, several programs for calculating Fibonacci words and Fibonacci word fractals are shown."/>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="This is also a solution for the"/>
				<expression tag="Internet.UniformResourceLocator" Value="https://rosettacode.org/wiki/Fibonacci_word" Description="Fibonacci word"/>
				<expression tag="String.Text" Value="exercise, described in the website"/>
				<expression tag="Internet.UniformResourceLocator" Value="https://rosettacode.org/wiki/Rosetta_Code" Description="Rosetta code."/>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="This is also a solution for the"/>
				<expression tag="Internet.UniformResourceLocator" Value="https://rosettacode.org/wiki/Fibonacci_word/fractal" Description="Fibonacci word/fractal"/>
				<expression tag="String.Text" Value="exercise, described in the website"/>
				<expression tag="Internet.UniformResourceLocator" Value="https://rosettacode.org/wiki/Rosetta_Code" Description="Rosetta code."/>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Typesetting.Paragraph">
			<expression tag="Typesetting.BoldChunk">
				<expression tag="String.Text" Value="Main function"/>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="2">
		<expression tag="Symbolic.Assignment">
			<expression tag="Symbolic.Function">
				<expression tag="Symbolic.Symbol" Name="Fibonacci word recursive"/>
				<expression tag="List.List">
					<expression tag="Symbolic.Symbol" Name="n"/>
				</expression>
			</expression>
			<expression tag="Programming.Block" Description="Description" Expanded="True">
				<expression tag="Programming.InvertedIf">
					<expression tag="Symbolic.Return">
						<expression tag="String.String" Value="0"/>
					</expression>
					<expression tag="Relation.Equals">
						<expression tag="Symbolic.Symbol" Name="n"/>
						<expression tag="Math.Number" Value="0"/>
					</expression>
				</expression>
				<expression tag="Programming.InvertedIf">
					<expression tag="Symbolic.Return">
						<expression tag="String.String" Value="01"/>
					</expression>
					<expression tag="Relation.Equals">
						<expression tag="Symbolic.Symbol" Name="n"/>
						<expression tag="Math.Number" Value="1"/>
					</expression>
				</expression>
				<expression tag="String.Concatenation">
					<expression tag="Symbolic.Function">
						<expression tag="Symbolic.Symbol" Name="Fibonacci word"/>
						<expression tag="List.List">
							<expression tag="Math.Arithmetic.Addition">
								<expression tag="Symbolic.Symbol" Name="n"/>
								<expression tag="Math.Arithmetic.Negative">
									<expression tag="Math.Number" Value="1"/>
								</expression>
							</expression>
						</expression>
					</expression>
					<expression tag="Symbolic.Function">
						<expression tag="Symbolic.Symbol" Name="Fibonacci word"/>
						<expression tag="List.List">
							<expression tag="Math.Arithmetic.Addition">
								<expression tag="Symbolic.Symbol" Name="n"/>
								<expression tag="Math.Arithmetic.Negative">
									<expression tag="Math.Number" Value="2"/>
								</expression>
							</expression>
						</expression>
					</expression>
				</expression>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="2">
		<expression tag="Symbolic.Assignment">
			<expression tag="Symbolic.Function">
				<expression tag="Symbolic.Symbol" Name="Fibonacci word"/>
				<expression tag="List.List">
					<expression tag="Symbolic.Symbol" Name="n"/>
				</expression>
			</expression>
			<expression tag="Programming.Block" Description="block" Expanded="True">
				<expression tag="Symbolic.Local">
					<expression tag="Symbolic.Assignment">
						<expression tag="List.List">
							<expression tag="Symbolic.Symbol" Name="pen"/>
							<expression tag="Symbolic.Symbol" Name="ult"/>
						</expression>
						<expression tag="List.List">
							<expression tag="String.String" Value="1"/>
							<expression tag="String.String" Value="0"/>
						</expression>
					</expression>
				</expression>
				<expression tag="Programming.InvertedIf">
					<expression tag="Symbolic.Return">
						<expression tag="Symbolic.Symbol" Name="pen"/>
					</expression>
					<expression tag="Relation.Equals">
						<expression tag="Symbolic.Symbol" Name="n"/>
						<expression tag="Math.Number" Value="1"/>
					</expression>
				</expression>
				<expression tag="Programming.InvertedIf">
					<expression tag="Symbolic.Return">
						<expression tag="Symbolic.Symbol" Name="ult"/>
					</expression>
					<expression tag="Relation.Equals">
						<expression tag="Symbolic.Symbol" Name="n"/>
						<expression tag="Math.Number" Value="2"/>
					</expression>
				</expression>
				<expression tag="Symbolic.Local">
					<expression tag="Symbolic.Symbol" Name="fib"/>
				</expression>
				<expression tag="Programming.ForFromTo">
					<expression tag="Programming.Block" Description="block" Expanded="True">
						<expression tag="Symbolic.Assignment">
							<expression tag="Symbolic.Symbol" Name="fib"/>
							<expression tag="String.Concatenation">
								<expression tag="Symbolic.Symbol" Name="ult"/>
								<expression tag="Symbolic.Symbol" Name="pen"/>
							</expression>
						</expression>
						<expression tag="Symbolic.Assignment">
							<expression tag="List.List">
								<expression tag="Symbolic.Symbol" Name="ult"/>
								<expression tag="Symbolic.Symbol" Name="pen"/>
							</expression>
							<expression tag="List.List">
								<expression tag="Symbolic.Symbol" Name="fib"/>
								<expression tag="Symbolic.Symbol" Name="ult"/>
							</expression>
						</expression>
					</expression>
					<expression tag="Symbolic.Symbol" Name="i"/>
					<expression tag="Math.Number" Value="3"/>
					<expression tag="Symbolic.Symbol" Name="n"/>
				</expression>
				<expression tag="Symbolic.Symbol" Name="fib"/>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="List.CreateTable">
			<expression tag="List.List">
				<expression tag="Symbolic.Symbol" Name="n"/>
				<expression tag="Symbolic.Function">
					<expression tag="Symbolic.Symbol" Name="Fibonacci word"/>
					<expression tag="List.List">
						<expression tag="Symbolic.Symbol" Name="n"/>
					</expression>
				</expression>
			</expression>
			<expression tag="Symbolic.Symbol" Name="n"/>
			<expression tag="Math.Number" Value="1"/>
			<expression tag="Math.Number" Value="8"/>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="1">
		<expression tag="List.Table">
			<expression tag="List.List">
				<expression tag="List.List">
					<expression tag="Symbolic.Symbol" Name="n"/>
					<expression tag="Symbolic.Function">
						<expression tag="Symbolic.Symbol" Name="Fibonacci word"/>
						<expression tag="List.List">
							<expression tag="Symbolic.Symbol" Name="n"/>
						</expression>
					</expression>
				</expression>
				<expression tag="List.List">
					<expression tag="Math.Number" Value="1"/>
					<expression tag="String.String" Value="1"/>
				</expression>
				<expression tag="List.List">
					<expression tag="Math.Number" Value="2"/>
					<expression tag="String.String" Value="0"/>
				</expression>
				<expression tag="List.List">
					<expression tag="Math.Number" Value="3"/>
					<expression tag="String.String" Value="01"/>
				</expression>
				<expression tag="List.List">
					<expression tag="Math.Number" Value="4"/>
					<expression tag="String.String" Value="010"/>
				</expression>
				<expression tag="List.List">
					<expression tag="Math.Number" Value="5"/>
					<expression tag="String.String" Value="01001"/>
				</expression>
				<expression tag="List.List">
					<expression tag="Math.Number" Value="6"/>
					<expression tag="String.String" Value="01001010"/>
				</expression>
				<expression tag="List.List">
					<expression tag="Math.Number" Value="7"/>
					<expression tag="String.String" Value="0100101001001"/>
				</expression>
				<expression tag="List.List">
					<expression tag="Math.Number" Value="8"/>
					<expression tag="String.String" Value="010010100100101001010"/>
				</expression>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="String.Length">
			<expression tag="Symbolic.Function">
				<expression tag="Symbolic.Symbol" Name="Fibonacci word"/>
				<expression tag="List.List">
					<expression tag="Math.Number" Value="37"/>
				</expression>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="1">
		<expression tag="Math.Number" Value="24157817"/>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Typesetting.MultiParagraph">
			<expression tag="Typesetting.Paragraph">
				<expression tag="Typesetting.BoldChunk">
					<expression tag="String.Text" Value="Rosetta code task"/>
				</expression>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="Rosetta code exercise request to show the length and the entropy of Fibonacci words, from 0 to 35:"/>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="It is not necessary to calculate the actual values for the Fibonacci words in each step."/>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="Because the generation of a new word is the concatenation of the two previous words, its length is the sum of the two previous lengths. They are Fibonacci numbers."/>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="For the same reason (concatenation), the number of zeros of a new word is the sum of the number of zeros of the two previous words. The same happens to ones."/>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="The following table shows the length, the number of zeros and the number of ones of a sequence of Fibonacci words. Notice that all of them are Fibonacci sequences."/>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="List.CreateTable">
			<expression tag="List.List">
				<expression tag="Symbolic.Symbol" Name="n"/>
				<expression tag="Symbolic.Function">
					<expression tag="Symbolic.Symbol" Name="Fibonacci word"/>
					<expression tag="List.List">
						<expression tag="Symbolic.Symbol" Name="n"/>
					</expression>
				</expression>
				<expression tag="String.Length">
					<expression tag="Symbolic.Function">
						<expression tag="Symbolic.Symbol" Name="Fibonacci word"/>
						<expression tag="List.List">
							<expression tag="Symbolic.Symbol" Name="n"/>
						</expression>
					</expression>
				</expression>
				<expression tag="Expression.Cardinality">
					<expression tag="String.Indexes">
						<expression tag="Symbolic.Function">
							<expression tag="Symbolic.Symbol" Name="Fibonacci word"/>
							<expression tag="List.List">
								<expression tag="Symbolic.Symbol" Name="n"/>
							</expression>
						</expression>
						<expression tag="String.String" Value="0"/>
					</expression>
				</expression>
				<expression tag="Expression.Cardinality">
					<expression tag="String.Indexes">
						<expression tag="Symbolic.Function">
							<expression tag="Symbolic.Symbol" Name="Fibonacci word"/>
							<expression tag="List.List">
								<expression tag="Symbolic.Symbol" Name="n"/>
							</expression>
						</expression>
						<expression tag="String.String" Value="1"/>
					</expression>
				</expression>
			</expression>
			<expression tag="Symbolic.Symbol" Name="n"/>
			<expression tag="Math.Number" Value="1"/>
			<expression tag="Math.Number" Value="8"/>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="1">
		<expression tag="List.Table">
			<expression tag="List.List">
				<expression tag="List.List">
					<expression tag="Symbolic.Symbol" Name="n"/>
					<expression tag="Symbolic.Function">
						<expression tag="Symbolic.Symbol" Name="Fibonacci word"/>
						<expression tag="List.List">
							<expression tag="Symbolic.Symbol" Name="n"/>
						</expression>
					</expression>
					<expression tag="String.Length">
						<expression tag="Symbolic.Function">
							<expression tag="Symbolic.Symbol" Name="Fibonacci word"/>
							<expression tag="List.List">
								<expression tag="Symbolic.Symbol" Name="n"/>
							</expression>
						</expression>
					</expression>
					<expression tag="Expression.Cardinality">
						<expression tag="String.Indexes">
							<expression tag="Symbolic.Function">
								<expression tag="Symbolic.Symbol" Name="Fibonacci word"/>
								<expression tag="List.List">
									<expression tag="Symbolic.Symbol" Name="n"/>
								</expression>
							</expression>
							<expression tag="String.String" Value="0"/>
						</expression>
					</expression>
					<expression tag="Expression.Cardinality">
						<expression tag="String.Indexes">
							<expression tag="Symbolic.Function">
								<expression tag="Symbolic.Symbol" Name="Fibonacci word"/>
								<expression tag="List.List">
									<expression tag="Symbolic.Symbol" Name="n"/>
								</expression>
							</expression>
							<expression tag="String.String" Value="1"/>
						</expression>
					</expression>
				</expression>
				<expression tag="List.List">
					<expression tag="Math.Number" Value="1"/>
					<expression tag="String.String" Value="1"/>
					<expression tag="Math.Number" Value="1"/>
					<expression tag="Math.Number" Value="0"/>
					<expression tag="Math.Number" Value="1"/>
				</expression>
				<expression tag="List.List">
					<expression tag="Math.Number" Value="2"/>
					<expression tag="String.String" Value="0"/>
					<expression tag="Math.Number" Value="1"/>
					<expression tag="Math.Number" Value="1"/>
					<expression tag="Math.Number" Value="0"/>
				</expression>
				<expression tag="List.List">
					<expression tag="Math.Number" Value="3"/>
					<expression tag="String.String" Value="01"/>
					<expression tag="Math.Number" Value="2"/>
					<expression tag="Math.Number" Value="1"/>
					<expression tag="Math.Number" Value="1"/>
				</expression>
				<expression tag="List.List">
					<expression tag="Math.Number" Value="4"/>
					<expression tag="String.String" Value="010"/>
					<expression tag="Math.Number" Value="3"/>
					<expression tag="Math.Number" Value="2"/>
					<expression tag="Math.Number" Value="1"/>
				</expression>
				<expression tag="List.List">
					<expression tag="Math.Number" Value="5"/>
					<expression tag="String.String" Value="01001"/>
					<expression tag="Math.Number" Value="5"/>
					<expression tag="Math.Number" Value="3"/>
					<expression tag="Math.Number" Value="2"/>
				</expression>
				<expression tag="List.List">
					<expression tag="Math.Number" Value="6"/>
					<expression tag="String.String" Value="01001010"/>
					<expression tag="Math.Number" Value="8"/>
					<expression tag="Math.Number" Value="5"/>
					<expression tag="Math.Number" Value="3"/>
				</expression>
				<expression tag="List.List">
					<expression tag="Math.Number" Value="7"/>
					<expression tag="String.String" Value="0100101001001"/>
					<expression tag="Math.Number" Value="13"/>
					<expression tag="Math.Number" Value="8"/>
					<expression tag="Math.Number" Value="5"/>
				</expression>
				<expression tag="List.List">
					<expression tag="Math.Number" Value="8"/>
					<expression tag="String.String" Value="010010100100101001010"/>
					<expression tag="Math.Number" Value="21"/>
					<expression tag="Math.Number" Value="13"/>
					<expression tag="Math.Number" Value="8"/>
				</expression>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Typesetting.MultiParagraph">
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="Also notice that:"/>
			</expression>
			<expression tag="Typesetting.BulletedList">
				<expression tag="Typesetting.Paragraph">
					<expression tag="String.Text" Value="The number of zeros of the i-th word is the length of the (i - 1)-th word."/>
				</expression>
				<expression tag="Typesetting.Paragraph">
					<expression tag="String.Text" Value="The number of ones of the i-th word is the length of the (i - 2)-th word."/>
				</expression>
			</expression>
			<expression tag="String.Text" Value="Since we only need the number of zeros and ones of a given Fibonacci word in order to calculate its entropy, the actual word is not necessary:"/>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Programming.Block" Description="Description" Expanded="True">
			<expression tag="Symbolic.Local">
				<expression tag="Symbolic.Assignment">
					<expression tag="Symbolic.Symbol" Name="matrix"/>
					<expression tag="List.List">
						<expression tag="List.List">
							<expression tag="String.Text" Value="i"/>
							<expression tag="String.Text" Value="Length"/>
							<expression tag="String.Text" Value="Entropy"/>
						</expression>
						<expression tag="List.List">
							<expression tag="Math.Number" Value="1"/>
							<expression tag="Math.Number" Value="1"/>
							<expression tag="Math.Number" Value="0."/>
						</expression>
						<expression tag="List.List">
							<expression tag="Math.Number" Value="2"/>
							<expression tag="Math.Number" Value="1"/>
							<expression tag="Math.Number" Value="0."/>
						</expression>
					</expression>
				</expression>
			</expression>
			<expression tag="Symbolic.Local">
				<expression tag="List.List">
					<expression tag="Symbolic.Symbol" Name="u"/>
					<expression tag="Symbolic.Symbol" Name="p"/>
				</expression>
			</expression>
			<expression tag="Programming.ForFromTo">
				<expression tag="Programming.Block" Description="Description" Expanded="True">
					<expression tag="Symbolic.Assignment">
						<expression tag="List.List">
							<expression tag="Symbolic.Symbol" Name="u"/>
							<expression tag="Symbolic.Symbol" Name="p"/>
						</expression>
						<expression tag="List.List">
							<expression tag="Expression.Child">
								<expression tag="Symbolic.Symbol" Name="matrix"/>
								<expression tag="List.List">
									<expression tag="Math.Arithmetic.Negative">
										<expression tag="Math.Number" Value="1"/>
									</expression>
									<expression tag="Math.Number" Value="2"/>
								</expression>
							</expression>
							<expression tag="Expression.Child">
								<expression tag="Symbolic.Symbol" Name="matrix"/>
								<expression tag="List.List">
									<expression tag="Math.Arithmetic.Negative">
										<expression tag="Math.Number" Value="2"/>
									</expression>
									<expression tag="Math.Number" Value="2"/>
								</expression>
							</expression>
						</expression>
					</expression>
					<expression tag="Expression.Append">
						<expression tag="Symbolic.Symbol" Name="matrix"/>
						<expression tag="List.List">
							<expression tag="Symbolic.Symbol" Name="i"/>
							<expression tag="Math.Arithmetic.Addition">
								<expression tag="Symbolic.Symbol" Name="u"/>
								<expression tag="Symbolic.Symbol" Name="p"/>
							</expression>
							<expression tag="Math.Arithmetic.Negative">
								<expression tag="Math.Numeric">
									<expression tag="Math.Arithmetic.Addition">
										<expression tag="Math.Arithmetic.Multiplication">
											<expression tag="Math.Arithmetic.Division">
												<expression tag="Symbolic.Symbol" Name="u"/>
												<expression tag="Math.Arithmetic.Addition">
													<expression tag="Symbolic.Symbol" Name="u"/>
													<expression tag="Symbolic.Symbol" Name="p"/>
												</expression>
											</expression>
											<expression tag="Math.Trascendental.BinaryLogarithm">
												<expression tag="Math.Arithmetic.Division">
													<expression tag="Symbolic.Symbol" Name="u"/>
													<expression tag="Math.Arithmetic.Addition">
														<expression tag="Symbolic.Symbol" Name="u"/>
														<expression tag="Symbolic.Symbol" Name="p"/>
													</expression>
												</expression>
											</expression>
										</expression>
										<expression tag="Math.Arithmetic.Multiplication">
											<expression tag="Math.Arithmetic.Division">
												<expression tag="Symbolic.Symbol" Name="p"/>
												<expression tag="Math.Arithmetic.Addition">
													<expression tag="Symbolic.Symbol" Name="u"/>
													<expression tag="Symbolic.Symbol" Name="p"/>
												</expression>
											</expression>
											<expression tag="Math.Trascendental.BinaryLogarithm">
												<expression tag="Math.Arithmetic.Division">
													<expression tag="Symbolic.Symbol" Name="p"/>
													<expression tag="Math.Arithmetic.Addition">
														<expression tag="Symbolic.Symbol" Name="u"/>
														<expression tag="Symbolic.Symbol" Name="p"/>
													</expression>
												</expression>
											</expression>
										</expression>
									</expression>
								</expression>
							</expression>
						</expression>
					</expression>
				</expression>
				<expression tag="Symbolic.Symbol" Name="i"/>
				<expression tag="Math.Number" Value="3"/>
				<expression tag="Math.Number" Value="50"/>
			</expression>
			<expression tag="List.Table">
				<expression tag="Symbolic.Symbol" Name="matrix"/>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="1">
		<expression tag="List.Table">
			<expression tag="List.List">
				<expression tag="List.List">
					<expression tag="String.Text" Value="i"/>
					<expression tag="String.Text" Value="Length"/>
					<expression tag="String.Text" Value="Entropy"/>
				</expression>
				<expression tag="List.List">
					<expression tag="Math.Number" Value="1"/>
					<expression tag="Math.Number" Value="1"/>
					<expression tag="Math.Number" Value="0."/>
				</expression>
				<expression tag="List.List">
					<expression tag="Math.Number" Value="2"/>
					<expression tag="Math.Number" Value="1"/>
					<expression tag="Math.Number" Value="0."/>
				</expression>
				<expression tag="List.List">
					<expression tag="Math.Number" Value="3"/>
					<expression tag="Math.Number" Value="2"/>
					<expression tag="Math.Number" Value="1."/>
				</expression>
				<expression tag="List.List">
					<expression tag="Math.Number" Value="4"/>
					<expression tag="Math.Number" Value="3"/>
					<expression tag="Math.Number" Value="0.91829583405448951475"/>
				</expression>
				<expression tag="List.List">
					<expression tag="Math.Number" Value="5"/>
					<expression tag="Math.Number" Value="5"/>
					<expression tag="Math.Number" Value="0.97095059445466863896"/>
				</expression>
				<expression tag="List.List">
					<expression tag="Math.Number" Value="6"/>
					<expression tag="Math.Number" Value="8"/>
					<expression tag="Math.Number" Value="0.9544340029249649645"/>
				</expression>
				<expression tag="List.List">
					<expression tag="Math.Number" Value="7"/>
					<expression tag="Math.Number" Value="13"/>
					<expression tag="Math.Number" Value="0.96123660472287587272"/>
				</expression>
				<expression tag="List.List">
					<expression tag="Math.Number" Value="8"/>
					<expression tag="Math.Number" Value="21"/>
					<expression tag="Math.Number" Value="0.9587118829771318086"/>
				</expression>
				<expression tag="List.List">
					<expression tag="Math.Number" Value="9"/>
					<expression tag="Math.Number" Value="34"/>
					<expression tag="Math.Number" Value="0.95968689377421693315"/>
				</expression>
				<expression tag="List.List">
					<expression tag="Math.Number" Value="10"/>
					<expression tag="Math.Number" Value="55"/>
					<expression tag="Math.Number" Value="0.95931603205437767772"/>
				</expression>
				<expression tag="List.List">
					<expression tag="Math.Number" Value="11"/>
					<expression tag="Math.Number" Value="89"/>
					<expression tag="Math.Number" Value="0.95945791583866946164"/>
				</expression>
				<expression tag="List.List">
					<expression tag="Math.Number" Value="12"/>
					<expression tag="Math.Number" Value="144"/>
					<expression tag="Math.Number" Value="0.95940375422102292944"/>
				</expression>
				<expression tag="List.List">
					<expression tag="Math.Number" Value="13"/>
					<expression tag="Math.Number" Value="233"/>
					<expression tag="Math.Number" Value="0.95942444695598675865"/>
				</expression>
				<expression tag="List.List">
					<expression tag="Math.Number" Value="14"/>
					<expression tag="Math.Number" Value="377"/>
					<expression tag="Math.Number" Value="0.95941654374044073872"/>
				</expression>
				<expression tag="List.List">
					<expression tag="Math.Number" Value="15"/>
					<expression tag="Math.Number" Value="610"/>
					<expression tag="Math.Number" Value="0.95941956260314415022"/>
				</expression>
				<expression tag="List.List">
					<expression tag="Math.Number" Value="16"/>
					<expression tag="Math.Number" Value="987"/>
					<expression tag="Math.Number" Value="0.95941840951522431267"/>
				</expression>
				<expression tag="List.List">
					<expression tag="Math.Number" Value="17"/>
					<expression tag="Math.Number" Value="1597"/>
					<expression tag="Math.Number" Value="0.95941884995780985565"/>
				</expression>
				<expression tag="List.List">
					<expression tag="Math.Number" Value="18"/>
					<expression tag="Math.Number" Value="2584"/>
					<expression tag="Math.Number" Value="0.95941868172403210661"/>
				</expression>
				<expression tag="List.List">
					<expression tag="Math.Number" Value="19"/>
					<expression tag="Math.Number" Value="4181"/>
					<expression tag="Math.Number" Value="0.95941874598366381431"/>
				</expression>
				<expression tag="List.List">
					<expression tag="Math.Number" Value="20"/>
					<expression tag="Math.Number" Value="6765"/>
					<expression tag="Math.Number" Value="0.9594187214386754146"/>
				</expression>
				<expression tag="List.List">
					<expression tag="Math.Number" Value="21"/>
					<expression tag="Math.Number" Value="10946"/>
					<expression tag="Math.Number" Value="0.95941873081402772311"/>
				</expression>
				<expression tag="List.List">
					<expression tag="Math.Number" Value="22"/>
					<expression tag="Math.Number" Value="17711"/>
					<expression tag="Math.Number" Value="0.95941872723296194269"/>
				</expression>
				<expression tag="List.List">
					<expression tag="Math.Number" Value="23"/>
					<expression tag="Math.Number" Value="28657"/>
					<expression tag="Math.Number" Value="0.959418728600807376"/>
				</expression>
				<expression tag="List.List">
					<expression tag="Math.Number" Value="24"/>
					<expression tag="Math.Number" Value="46368"/>
					<expression tag="Math.Number" Value="0.95941872807833691491"/>
				</expression>
				<expression tag="List.List">
					<expression tag="Math.Number" Value="25"/>
					<expression tag="Math.Number" Value="75025"/>
					<expression tag="Math.Number" Value="0.95941872827790287339"/>
				</expression>
				<expression tag="List.List">
					<expression tag="Math.Number" Value="26"/>
					<expression tag="Math.Number" Value="121393"/>
					<expression tag="Math.Number" Value="0.95941872820167546032"/>
				</expression>
				<expression tag="List.List">
					<expression tag="Math.Number" Value="27"/>
					<expression tag="Math.Number" Value="196418"/>
					<expression tag="Math.Number" Value="0.95941872823079174124"/>
				</expression>
				<expression tag="List.List">
					<expression tag="Math.Number" Value="28"/>
					<expression tag="Math.Number" Value="317811"/>
					<expression tag="Math.Number" Value="0.95941872821967031156"/>
				</expression>
				<expression tag="List.List">
					<expression tag="Math.Number" Value="29"/>
					<expression tag="Math.Number" Value="514229"/>
					<expression tag="Math.Number" Value="0.95941872822391831968"/>
				</expression>
				<expression tag="List.List">
					<expression tag="Math.Number" Value="30"/>
					<expression tag="Math.Number" Value="832040"/>
					<expression tag="Math.Number" Value="0.95941872822229572498"/>
				</expression>
				<expression tag="List.List">
					<expression tag="Math.Number" Value="31"/>
					<expression tag="Math.Number" Value="1346269"/>
					<expression tag="Math.Number" Value="0.959418728222915501"/>
				</expression>
				<expression tag="List.List">
					<expression tag="Math.Number" Value="32"/>
					<expression tag="Math.Number" Value="2178309"/>
					<expression tag="Math.Number" Value="0.9594187282226787676"/>
				</expression>
				<expression tag="List.List">
					<expression tag="Math.Number" Value="33"/>
					<expression tag="Math.Number" Value="3524578"/>
					<expression tag="Math.Number" Value="0.95941872822276919171"/>
				</expression>
				<expression tag="List.List">
					<expression tag="Math.Number" Value="34"/>
					<expression tag="Math.Number" Value="5702887"/>
					<expression tag="Math.Number" Value="0.9594187282227346528"/>
				</expression>
				<expression tag="List.List">
					<expression tag="Math.Number" Value="35"/>
					<expression tag="Math.Number" Value="9227465"/>
					<expression tag="Math.Number" Value="0.95941872822274784547"/>
				</expression>
				<expression tag="List.List">
					<expression tag="Math.Number" Value="36"/>
					<expression tag="Math.Number" Value="14930352"/>
					<expression tag="Math.Number" Value="0.95941872822274280632"/>
				</expression>
				<expression tag="List.List">
					<expression tag="Math.Number" Value="37"/>
					<expression tag="Math.Number" Value="24157817"/>
					<expression tag="Math.Number" Value="0.95941872822274473111"/>
				</expression>
				<expression tag="List.List">
					<expression tag="Math.Number" Value="38"/>
					<expression tag="Math.Number" Value="39088169"/>
					<expression tag="Math.Number" Value="0.95941872822274399592"/>
				</expression>
				<expression tag="List.List">
					<expression tag="Math.Number" Value="39"/>
					<expression tag="Math.Number" Value="63245986"/>
					<expression tag="Math.Number" Value="0.95941872822274427674"/>
				</expression>
				<expression tag="List.List">
					<expression tag="Math.Number" Value="40"/>
					<expression tag="Math.Number" Value="102334155"/>
					<expression tag="Math.Number" Value="0.95941872822274416946"/>
				</expression>
				<expression tag="List.List">
					<expression tag="Math.Number" Value="41"/>
					<expression tag="Math.Number" Value="165580141"/>
					<expression tag="Math.Number" Value="0.95941872822274421042"/>
				</expression>
				<expression tag="List.List">
					<expression tag="Math.Number" Value="42"/>
					<expression tag="Math.Number" Value="267914296"/>
					<expression tag="Math.Number" Value="0.9594187282227441948"/>
				</expression>
				<expression tag="List.List">
					<expression tag="Math.Number" Value="43"/>
					<expression tag="Math.Number" Value="433494437"/>
					<expression tag="Math.Number" Value="0.95941872822274420078"/>
				</expression>
				<expression tag="List.List">
					<expression tag="Math.Number" Value="44"/>
					<expression tag="Math.Number" Value="701408733"/>
					<expression tag="Math.Number" Value="0.95941872822274419849"/>
				</expression>
				<expression tag="List.List">
					<expression tag="Math.Number" Value="45"/>
					<expression tag="Math.Number" Value="1134903170"/>
					<expression tag="Math.Number" Value="0.95941872822274419935"/>
				</expression>
				<expression tag="List.List">
					<expression tag="Math.Number" Value="46"/>
					<expression tag="Math.Number" Value="1836311903"/>
					<expression tag="Math.Number" Value="0.95941872822274419901"/>
				</expression>
				<expression tag="List.List">
					<expression tag="Math.Number" Value="47"/>
					<expression tag="Math.Number" Value="2971215073"/>
					<expression tag="Math.Number" Value="0.95941872822274419917"/>
				</expression>
				<expression tag="List.List">
					<expression tag="Math.Number" Value="48"/>
					<expression tag="Math.Number" Value="4807526976"/>
					<expression tag="Math.Number" Value="0.9594187282227441991"/>
				</expression>
				<expression tag="List.List">
					<expression tag="Math.Number" Value="49"/>
					<expression tag="Math.Number" Value="7778742049"/>
					<expression tag="Math.Number" Value="0.95941872822274419912"/>
				</expression>
				<expression tag="List.List">
					<expression tag="Math.Number" Value="50"/>
					<expression tag="Math.Number" Value="12586269025"/>
					<expression tag="Math.Number" Value="0.9594187282227441991"/>
				</expression>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Typesetting.MultiParagraph">
			<expression tag="Typesetting.Paragraph">
				<expression tag="Typesetting.BoldChunk">
					<expression tag="String.Text" Value="Limit of the entropy"/>
				</expression>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="Given that the entropy of the i-th Fibonacci word is:"/>
			</expression>
			<expression tag="Typesetting.Centering">
				<expression tag="Math.Arithmetic.Negative">
					<expression tag="Math.Arithmetic.Addition">
						<expression tag="Math.Arithmetic.Multiplication">
							<expression tag="Math.Arithmetic.Division">
								<expression tag="Expression.Child">
									<expression tag="String.Text" Value="zeros"/>
									<expression tag="String.Text" Value="i"/>
								</expression>
								<expression tag="Math.Arithmetic.Addition">
									<expression tag="Expression.Child">
										<expression tag="String.Text" Value="zeros"/>
										<expression tag="String.Text" Value="i"/>
									</expression>
									<expression tag="Expression.Child">
										<expression tag="String.Text" Value="ones"/>
										<expression tag="String.Text" Value="i"/>
									</expression>
								</expression>
							</expression>
							<expression tag="Math.Trascendental.BinaryLogarithm">
								<expression tag="Math.Arithmetic.Division">
									<expression tag="Expression.Child">
										<expression tag="String.Text" Value="zeros"/>
										<expression tag="String.Text" Value="i"/>
									</expression>
									<expression tag="Math.Arithmetic.Addition">
										<expression tag="Expression.Child">
											<expression tag="String.Text" Value="zeros"/>
											<expression tag="String.Text" Value="i"/>
										</expression>
										<expression tag="Expression.Child">
											<expression tag="String.Text" Value="ones"/>
											<expression tag="String.Text" Value="i"/>
										</expression>
									</expression>
								</expression>
							</expression>
						</expression>
						<expression tag="Math.Arithmetic.Multiplication">
							<expression tag="Math.Arithmetic.Division">
								<expression tag="Expression.Child">
									<expression tag="String.Text" Value="ones"/>
									<expression tag="String.Text" Value="i"/>
								</expression>
								<expression tag="Math.Arithmetic.Addition">
									<expression tag="Expression.Child">
										<expression tag="String.Text" Value="zeros"/>
										<expression tag="String.Text" Value="i"/>
									</expression>
									<expression tag="Expression.Child">
										<expression tag="String.Text" Value="ones"/>
										<expression tag="String.Text" Value="i"/>
									</expression>
								</expression>
							</expression>
							<expression tag="Math.Trascendental.BinaryLogarithm">
								<expression tag="Math.Arithmetic.Division">
									<expression tag="Expression.Child">
										<expression tag="String.Text" Value="ones"/>
										<expression tag="String.Text" Value="i"/>
									</expression>
									<expression tag="Math.Arithmetic.Addition">
										<expression tag="Expression.Child">
											<expression tag="String.Text" Value="zeros"/>
											<expression tag="String.Text" Value="i"/>
										</expression>
										<expression tag="Expression.Child">
											<expression tag="String.Text" Value="ones"/>
											<expression tag="String.Text" Value="i"/>
										</expression>
									</expression>
								</expression>
							</expression>
						</expression>
					</expression>
				</expression>
			</expression>
			<expression tag="Typesetting.Centering">
				<expression tag="Math.Arithmetic.Negative">
					<expression tag="Math.Arithmetic.Addition">
						<expression tag="Math.Arithmetic.Multiplication">
							<expression tag="Math.Arithmetic.Division">
								<expression tag="Expression.Child">
									<expression tag="String.Text" Value="F"/>
									<expression tag="Math.Arithmetic.Addition">
										<expression tag="Symbolic.Symbol" Name="i"/>
										<expression tag="Math.Arithmetic.Negative">
											<expression tag="Math.Number" Value="1"/>
										</expression>
									</expression>
								</expression>
								<expression tag="Expression.Child">
									<expression tag="String.Text" Value="F"/>
									<expression tag="Symbolic.Symbol" Name="i"/>
								</expression>
							</expression>
							<expression tag="Math.Trascendental.BinaryLogarithm">
								<expression tag="Math.Arithmetic.Division">
									<expression tag="Expression.Child">
										<expression tag="String.Text" Value="F"/>
										<expression tag="Math.Arithmetic.Addition">
											<expression tag="Symbolic.Symbol" Name="i"/>
											<expression tag="Math.Arithmetic.Negative">
												<expression tag="Math.Number" Value="1"/>
											</expression>
										</expression>
									</expression>
									<expression tag="Expression.Child">
										<expression tag="String.Text" Value="F"/>
										<expression tag="Symbolic.Symbol" Name="i"/>
									</expression>
								</expression>
							</expression>
						</expression>
						<expression tag="Math.Arithmetic.Multiplication">
							<expression tag="Math.Arithmetic.Division">
								<expression tag="Expression.Child">
									<expression tag="String.Text" Value="F"/>
									<expression tag="Math.Arithmetic.Addition">
										<expression tag="Symbolic.Symbol" Name="i"/>
										<expression tag="Math.Arithmetic.Negative">
											<expression tag="Math.Number" Value="2"/>
										</expression>
									</expression>
								</expression>
								<expression tag="Expression.Child">
									<expression tag="String.Text" Value="F"/>
									<expression tag="Symbolic.Symbol" Name="i"/>
								</expression>
							</expression>
							<expression tag="Math.Trascendental.BinaryLogarithm">
								<expression tag="Math.Arithmetic.Division">
									<expression tag="Expression.Child">
										<expression tag="String.Text" Value="F"/>
										<expression tag="Math.Arithmetic.Addition">
											<expression tag="Symbolic.Symbol" Name="i"/>
											<expression tag="Math.Arithmetic.Negative">
												<expression tag="Math.Number" Value="2"/>
											</expression>
										</expression>
									</expression>
									<expression tag="Expression.Child">
										<expression tag="String.Text" Value="F"/>
										<expression tag="Symbolic.Symbol" Name="i"/>
									</expression>
								</expression>
							</expression>
						</expression>
					</expression>
				</expression>
			</expression>
			<expression tag="Typesetting.Centering">
				<expression tag="Math.Arithmetic.Negative">
					<expression tag="Math.Arithmetic.Addition">
						<expression tag="Math.Arithmetic.Multiplication">
							<expression tag="Math.Arithmetic.Division">
								<expression tag="Expression.Child">
									<expression tag="String.Text" Value="F"/>
									<expression tag="Math.Arithmetic.Addition">
										<expression tag="Symbolic.Symbol" Name="i"/>
										<expression tag="Math.Arithmetic.Negative">
											<expression tag="Math.Number" Value="1"/>
										</expression>
									</expression>
								</expression>
								<expression tag="Expression.Child">
									<expression tag="String.Text" Value="F"/>
									<expression tag="Symbolic.Symbol" Name="i"/>
								</expression>
							</expression>
							<expression tag="Math.Trascendental.BinaryLogarithm">
								<expression tag="Math.Arithmetic.Division">
									<expression tag="Expression.Child">
										<expression tag="String.Text" Value="F"/>
										<expression tag="Math.Arithmetic.Addition">
											<expression tag="Symbolic.Symbol" Name="i"/>
											<expression tag="Math.Arithmetic.Negative">
												<expression tag="Math.Number" Value="1"/>
											</expression>
										</expression>
									</expression>
									<expression tag="Expression.Child">
										<expression tag="String.Text" Value="F"/>
										<expression tag="Symbolic.Symbol" Name="i"/>
									</expression>
								</expression>
							</expression>
						</expression>
						<expression tag="Math.Arithmetic.Multiplication">
							<expression tag="Math.Arithmetic.Division">
								<expression tag="Expression.Child">
									<expression tag="String.Text" Value="F"/>
									<expression tag="Math.Arithmetic.Addition">
										<expression tag="Symbolic.Symbol" Name="i"/>
										<expression tag="Math.Arithmetic.Negative">
											<expression tag="Math.Number" Value="2"/>
										</expression>
									</expression>
								</expression>
								<expression tag="Expression.Child">
									<expression tag="String.Text" Value="F"/>
									<expression tag="Math.Arithmetic.Addition">
										<expression tag="Symbolic.Symbol" Name="i"/>
										<expression tag="Math.Arithmetic.Negative">
											<expression tag="Math.Number" Value="1"/>
										</expression>
									</expression>
								</expression>
							</expression>
							<expression tag="Math.Arithmetic.Division">
								<expression tag="Expression.Child">
									<expression tag="String.Text" Value="F"/>
									<expression tag="Math.Arithmetic.Addition">
										<expression tag="Symbolic.Symbol" Name="i"/>
										<expression tag="Math.Arithmetic.Negative">
											<expression tag="Math.Number" Value="1"/>
										</expression>
									</expression>
								</expression>
								<expression tag="Expression.Child">
									<expression tag="String.Text" Value="F"/>
									<expression tag="Symbolic.Symbol" Name="i"/>
								</expression>
							</expression>
							<expression tag="Math.Trascendental.BinaryLogarithm">
								<expression tag="Math.Arithmetic.Multiplication">
									<expression tag="Math.Arithmetic.Division">
										<expression tag="Expression.Child">
											<expression tag="String.Text" Value="F"/>
											<expression tag="Math.Arithmetic.Addition">
												<expression tag="Symbolic.Symbol" Name="i"/>
												<expression tag="Math.Arithmetic.Negative">
													<expression tag="Math.Number" Value="2"/>
												</expression>
											</expression>
										</expression>
										<expression tag="Expression.Child">
											<expression tag="String.Text" Value="F"/>
											<expression tag="Symbolic.Symbol" Name="i"/>
										</expression>
									</expression>
									<expression tag="Math.Arithmetic.Division">
										<expression tag="Expression.Child">
											<expression tag="String.Text" Value="F"/>
											<expression tag="Math.Arithmetic.Addition">
												<expression tag="Symbolic.Symbol" Name="i"/>
												<expression tag="Math.Arithmetic.Negative">
													<expression tag="Math.Number" Value="1"/>
												</expression>
											</expression>
										</expression>
										<expression tag="Expression.Child">
											<expression tag="String.Text" Value="F"/>
											<expression tag="Symbolic.Symbol" Name="i"/>
										</expression>
									</expression>
								</expression>
							</expression>
						</expression>
					</expression>
				</expression>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="Because the ratio between a Fibonacci term over the next term is"/>
				<expression tag="Math.Arithmetic.Division">
					<expression tag="Math.Number" Value="1"/>
					<expression tag="String.Text" Value="φ"/>
				</expression>
				<expression tag="String.Text" Value="as i is bigger, the previous expression tends to be:"/>
			</expression>
			<expression tag="Typesetting.Centering">
				<expression tag="Math.Arithmetic.Negative">
					<expression tag="Math.Arithmetic.Addition">
						<expression tag="Math.Arithmetic.Multiplication">
							<expression tag="Math.Arithmetic.Division">
								<expression tag="Math.Number" Value="1"/>
								<expression tag="String.Text" Value="φ"/>
							</expression>
							<expression tag="Math.Trascendental.BinaryLogarithm">
								<expression tag="Math.Arithmetic.Division">
									<expression tag="Math.Number" Value="1"/>
									<expression tag="String.Text" Value="φ"/>
								</expression>
							</expression>
						</expression>
						<expression tag="Math.Arithmetic.Multiplication">
							<expression tag="Math.Arithmetic.Division">
								<expression tag="Math.Number" Value="1"/>
								<expression tag="String.Text" Value="φ"/>
							</expression>
							<expression tag="Math.Arithmetic.Division">
								<expression tag="Math.Number" Value="1"/>
								<expression tag="String.Text" Value="φ"/>
							</expression>
							<expression tag="Math.Trascendental.BinaryLogarithm">
								<expression tag="Math.Arithmetic.Multiplication">
									<expression tag="Math.Arithmetic.Division">
										<expression tag="Math.Number" Value="1"/>
										<expression tag="String.Text" Value="φ"/>
									</expression>
									<expression tag="Math.Arithmetic.Division">
										<expression tag="Math.Number" Value="1"/>
										<expression tag="String.Text" Value="φ"/>
									</expression>
								</expression>
							</expression>
						</expression>
					</expression>
				</expression>
			</expression>
			<expression tag="Typesetting.Centering">
				<expression tag="Math.Arithmetic.Negative">
					<expression tag="Math.Arithmetic.Addition">
						<expression tag="Math.Arithmetic.Multiplication">
							<expression tag="Math.Arithmetic.Division">
								<expression tag="Math.Number" Value="1"/>
								<expression tag="String.Text" Value="φ"/>
							</expression>
							<expression tag="Math.Trascendental.BinaryLogarithm">
								<expression tag="Math.Arithmetic.Division">
									<expression tag="Math.Number" Value="1"/>
									<expression tag="String.Text" Value="φ"/>
								</expression>
							</expression>
						</expression>
						<expression tag="Math.Arithmetic.Multiplication">
							<expression tag="Math.Arithmetic.Division">
								<expression tag="Math.Number" Value="1"/>
								<expression tag="Math.Arithmetic.Exponentiation">
									<expression tag="String.Text" Value="φ"/>
									<expression tag="Math.Number" Value="2"/>
								</expression>
							</expression>
							<expression tag="Math.Trascendental.BinaryLogarithm">
								<expression tag="Math.Arithmetic.Division">
									<expression tag="Math.Number" Value="1"/>
									<expression tag="Math.Arithmetic.Exponentiation">
										<expression tag="String.Text" Value="φ"/>
										<expression tag="Math.Number" Value="2"/>
									</expression>
								</expression>
							</expression>
						</expression>
					</expression>
				</expression>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="This value, with a precision of 100 digits is:"/>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Programming.Block" Description="Description" Expanded="True">
			<expression tag="Math.Arithmetic.SetPrecision">
				<expression tag="Math.Number" Value="100"/>
			</expression>
			<expression tag="Symbolic.Local">
				<expression tag="Symbolic.Assignment">
					<expression tag="Symbolic.Symbol" Name="φ"/>
					<expression tag="Math.Arithmetic.Division">
						<expression tag="Math.Arithmetic.Addition">
							<expression tag="Math.Number" Value="1"/>
							<expression tag="Math.Arithmetic.SquareRoot">
								<expression tag="Math.Number" Value="5"/>
							</expression>
						</expression>
						<expression tag="Math.Number" Value="2"/>
					</expression>
				</expression>
			</expression>
			<expression tag="Math.Arithmetic.Negative">
				<expression tag="Math.Numeric">
					<expression tag="Math.Arithmetic.Addition">
						<expression tag="Math.Arithmetic.Multiplication">
							<expression tag="Math.Arithmetic.Division">
								<expression tag="Math.Number" Value="1"/>
								<expression tag="Symbolic.Symbol" Name="φ"/>
							</expression>
							<expression tag="Math.Trascendental.BinaryLogarithm">
								<expression tag="Math.Arithmetic.Division">
									<expression tag="Math.Number" Value="1"/>
									<expression tag="Symbolic.Symbol" Name="φ"/>
								</expression>
							</expression>
						</expression>
						<expression tag="Math.Arithmetic.Multiplication">
							<expression tag="Math.Arithmetic.Division">
								<expression tag="Math.Number" Value="1"/>
								<expression tag="Math.Arithmetic.Exponentiation">
									<expression tag="Symbolic.Symbol" Name="φ"/>
									<expression tag="Math.Number" Value="2"/>
								</expression>
							</expression>
							<expression tag="Math.Trascendental.BinaryLogarithm">
								<expression tag="Math.Arithmetic.Division">
									<expression tag="Math.Number" Value="1"/>
									<expression tag="Math.Arithmetic.Exponentiation">
										<expression tag="Symbolic.Symbol" Name="φ"/>
										<expression tag="Math.Number" Value="2"/>
									</expression>
								</expression>
							</expression>
						</expression>
					</expression>
				</expression>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="1">
		<expression tag="Math.Number" Value="0.959418728222744199142863005823056240701587249102021240825046208647570035036361676372788278028909586"/>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Typesetting.MultiParagraph">
			<expression tag="Typesetting.Paragraph">
				<expression tag="Typesetting.BoldChunk">
					<expression tag="String.Text" Value="Drawing a Fibonacci word fractal"/>
				</expression>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="We will need the following function to generate drawing by the using of"/>
				<expression tag="Internet.UniformResourceLocator" Value="https://en.wikipedia.org/wiki/L-system" Description="L-systems."/>
				<expression tag="String.Text" Value="Notice that the &quot;program&quot; to execute is given as input:"/>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="2">
		<expression tag="Symbolic.Assignment">
			<expression tag="Symbolic.Function">
				<expression tag="Symbolic.Symbol" Name="Execute L-system"/>
				<expression tag="List.List">
					<expression tag="Symbolic.Symbol" Name="program"/>
					<expression tag="Symbolic.Symbol" Name="rules"/>
				</expression>
			</expression>
			<expression tag="Programming.Block" Description="Expand to uncover the code" Expanded="False">
				<expression tag="Symbolic.Local">
					<expression tag="Symbolic.Assignment">
						<expression tag="Symbolic.Symbol" Name="n"/>
						<expression tag="Expression.Cardinality">
							<expression tag="Symbolic.Symbol" Name="rules"/>
						</expression>
					</expression>
				</expression>
				<expression tag="Symbolic.Local">
					<expression tag="Symbolic.Assignment">
						<expression tag="Symbolic.Function">
							<expression tag="Symbolic.Symbol" Name="Do"/>
							<expression tag="List.List">
								<expression tag="Symbolic.Symbol" Name="char"/>
								<expression tag="Symbolic.Symbol" Name="step"/>
							</expression>
						</expression>
						<expression tag="Programming.Block" Description="block" Expanded="True">
							<expression tag="Programming.ForFromTo">
								<expression tag="Programming.If">
									<expression tag="String.Contains">
										<expression tag="Expression.Child">
											<expression tag="Symbolic.Symbol" Name="rules"/>
											<expression tag="List.List">
												<expression tag="Symbolic.Symbol" Name="r"/>
												<expression tag="Math.Number" Value="1"/>
											</expression>
										</expression>
										<expression tag="Symbolic.Symbol" Name="char"/>
									</expression>
									<expression tag="Programming.Block" Description="block" Expanded="True">
										<expression tag="Symbolic.LambdaApplication">
											<expression tag="Expression.Child">
												<expression tag="Symbolic.Symbol" Name="rules"/>
												<expression tag="List.List">
													<expression tag="Symbolic.Symbol" Name="r"/>
													<expression tag="Math.Number" Value="2"/>
												</expression>
											</expression>
											<expression tag="List.List">
												<expression tag="Symbolic.Symbol" Name="step"/>
											</expression>
										</expression>
										<expression tag="Symbolic.Return">
											<expression tag="Null"/>
										</expression>
									</expression>
								</expression>
								<expression tag="Symbolic.Symbol" Name="r"/>
								<expression tag="Math.Number" Value="1"/>
								<expression tag="Symbolic.Symbol" Name="n"/>
							</expression>
						</expression>
					</expression>
				</expression>
				<expression tag="Symbolic.Local">
					<expression tag="Symbolic.Assignment">
						<expression tag="Symbolic.Symbol" Name="step"/>
						<expression tag="Math.Number" Value="0"/>
					</expression>
				</expression>
				<expression tag="Programming.ForIn">
					<expression tag="Programming.Block" Description="Description" Expanded="True">
						<expression tag="Symbolic.Assignment">
							<expression tag="Symbolic.Symbol" Name="step"/>
							<expression tag="Math.Arithmetic.Addition">
								<expression tag="Symbolic.Symbol" Name="step"/>
								<expression tag="Math.Number" Value="1"/>
							</expression>
						</expression>
						<expression tag="Symbolic.Function">
							<expression tag="Symbolic.Symbol" Name="Do"/>
							<expression tag="List.List">
								<expression tag="Symbolic.Symbol" Name="char"/>
								<expression tag="Symbolic.Symbol" Name="step"/>
							</expression>
						</expression>
					</expression>
					<expression tag="Symbolic.Symbol" Name="char"/>
					<expression tag="String.Split">
						<expression tag="Symbolic.Symbol" Name="program"/>
					</expression>
				</expression>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Typesetting.Paragraph">
			<expression tag="String.Text" Value="In this case, the program is a Fibonacci word:"/>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Programming.Block" Description="Description" Expanded="True">
			<expression tag="Symbolic.Local">
				<expression tag="Symbolic.Assignment">
					<expression tag="Symbolic.Symbol" Name="g"/>
					<expression tag="Graphics.CreateRasterGraphics">
						<expression tag="Math.Number" Value="500"/>
						<expression tag="Math.Number" Value="360"/>
					</expression>
				</expression>
			</expression>
			<expression tag="Graphics.AddTranslation">
				<expression tag="Symbolic.Symbol" Name="g"/>
				<expression tag="Math.Number" Value="10.5"/>
				<expression tag="Math.Number" Value="350.5"/>
			</expression>
			<expression tag="Graphics.Turtle.SetAngle">
				<expression tag="Symbolic.Symbol" Name="g"/>
				<expression tag="Math.Number" Value="0"/>
			</expression>
			<expression tag="Symbolic.Function">
				<expression tag="Symbolic.Symbol" Name="Execute L-system"/>
				<expression tag="List.List">
					<expression tag="Symbolic.Function">
						<expression tag="Symbolic.Symbol" Name="Fibonacci word"/>
						<expression tag="List.List">
							<expression tag="Math.Number" Value="20"/>
						</expression>
					</expression>
					<expression tag="List.List">
						<expression tag="List.List">
							<expression tag="String.String" Value="0"/>
							<expression tag="Symbolic.Lambda">
								<expression tag="List.List">
									<expression tag="Symbolic.Symbol" Name="step"/>
								</expression>
								<expression tag="Programming.Block" Description="Description" Expanded="True">
									<expression tag="Graphics.Turtle.ForwardDrawing">
										<expression tag="Symbolic.Symbol" Name="g"/>
										<expression tag="Math.Number" Value="2"/>
									</expression>
									<expression tag="Graphics.Turtle.Turn">
										<expression tag="Symbolic.Symbol" Name="g"/>
										<expression tag="Programming.Conditional">
											<expression tag="Math.Arithmetic.IsEven">
												<expression tag="Symbolic.Symbol" Name="step"/>
											</expression>
											<expression tag="Math.Arithmetic.Negative">
												<expression tag="Math.Number" Value="90"/>
											</expression>
											<expression tag="Math.Number" Value="90"/>
										</expression>
									</expression>
								</expression>
							</expression>
						</expression>
						<expression tag="List.List">
							<expression tag="String.String" Value="1"/>
							<expression tag="Symbolic.Lambda">
								<expression tag="List.List">
									<expression tag="Symbolic.Symbol" Name="step"/>
								</expression>
								<expression tag="Graphics.Turtle.ForwardDrawing">
									<expression tag="Symbolic.Symbol" Name="g"/>
									<expression tag="Math.Number" Value="2"/>
								</expression>
							</expression>
						</expression>
					</expression>
				</expression>
			</expression>
			<expression tag="Symbolic.Symbol" Name="g"/>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="1">
		<expression tag="Graphics.RasterGraphics" Value=""/>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Typesetting.MultiParagraph">
			<expression tag="Typesetting.Paragraph">
				<expression tag="Typesetting.BoldChunk">
					<expression tag="String.Text" Value="See also:"/>
				</expression>
			</expression>
			<expression tag="Typesetting.BulletedList">
				<expression tag="Typesetting.Paragraph">
					<expression tag="String.Text" Value="Other"/>
					<expression tag="Internet.UniformResourceLocator" Value="/?script=articles/Rosetta_Code_examples" Description="Rosetta code"/>
					<expression tag="String.Text" Value="examples"/>
				</expression>
				<expression tag="Typesetting.Paragraph">
					<expression tag="String.Text" Value="Other"/>
					<expression tag="Internet.UniformResourceLocator" Value="/?script=articles/Graphics_examples" Description="graphics"/>
					<expression tag="String.Text" Value="examples"/>
				</expression>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="Author: Laurence R. Ugalde"/>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="Last modified:"/>
				<expression tag="Time.Time" Value="1692239280000"/>
			</expression>
		</expression>
	</expression>
</expression>