<expression tag="Formulae.Script" Modules="org.formulae.typesetting,org.formulae.text.string,org.formulae.visualization,org.formulae.symbolic,org.formulae.list,org.formulae.programming,org.formulae.math.arithmetic,org.formulae.expression,org.formulae.relation,org.formulae.graphics.raster,org.formulae.color,org.formulae.chart,org.formulae.time">
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Typesetting.MultiParagraph">
			<expression tag="Typesetting.Paragraph">
				<expression tag="Typesetting.BoldChunk">
					<expression tag="String.Text" Value="Abelian sandpile model"/>
				</expression>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="The"/>
				<expression tag="Internet.UniformResourceLocator" Value="https://en.wikipedia.org/wiki/Abelian_sandpile_model" Description="Abelian sandpile model,"/>
				<expression tag="String.Text" Value="also known as the Bak–Tang–Wiesenfeld model, was the first discovered example of a dynamical system displaying self-organized criticality. It was introduced by Per Bak, Chao Tang and Kurt Wiesenfeld in a 1987 paper."/>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="The model takes place on a 2D grid of arbitrary size on which &quot;piles of sand&quot; can be placed. Any &quot;pile&quot; that has 4 or more sand particles on it collapses, resulting in"/>
				<expression tag="Typesetting.ItalicChunk">
					<expression tag="String.Text" Value="four particles being subtracted from the pile"/>
				</expression>
				<expression tag="String.Text" Value="and"/>
				<expression tag="Typesetting.ItalicChunk">
					<expression tag="String.Text" Value="distributed among its neighbors."/>
				</expression>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="In this script, several implementations of the Abelian sandpile model are presented."/>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="This is also a solution for the"/>
				<expression tag="Internet.UniformResourceLocator" Value="https://rosettacode.org/wiki/Abelian_sandpile_model" Description="Abelian sandpile model"/>
				<expression tag="String.Text" Value="exercise, described in the website"/>
				<expression tag="Internet.UniformResourceLocator" Value="https://rosettacode.org/wiki/Rosetta_Code" Description="Rosetta code."/>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Typesetting.MultiParagraph">
			<expression tag="Typesetting.Paragraph">
				<expression tag="Typesetting.BoldChunk">
					<expression tag="String.Text" Value="Solution"/>
				</expression>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="Visualization.Color" Red="1" Green="0" Blue="0" Alpha="1">
					<expression tag="String.Text" Value="Important."/>
				</expression>
				<expression tag="String.Text" Value="This exercise will not run on a remote server, even for small parameters, because it requires a great amount of calculations. If you want to run it (for example, to test different parameters) do it on a local server."/>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="Version 1. Recursive"/>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="2">
		<expression tag="Symbolic.Assignment">
			<expression tag="Symbolic.Function">
				<expression tag="Symbolic.Symbol" Name="SandPile v1"/>
				<expression tag="List.List">
					<expression tag="Symbolic.Symbol" Name="size"/>
					<expression tag="Symbolic.Symbol" Name="n"/>
				</expression>
			</expression>
			<expression tag="Programming.Block" Description="block" Expanded="True">
				<expression tag="Symbolic.Local">
					<expression tag="Symbolic.Assignment">
						<expression tag="Symbolic.Symbol" Name="m"/>
						<expression tag="List.CreateList">
							<expression tag="List.CreateList">
								<expression tag="Math.Number" Value="0"/>
								<expression tag="Symbolic.Symbol" Name="size"/>
							</expression>
							<expression tag="Symbolic.Symbol" Name="size"/>
						</expression>
					</expression>
				</expression>
				<expression tag="Symbolic.Local">
					<expression tag="Symbolic.Assignment">
						<expression tag="Symbolic.Function">
							<expression tag="Symbolic.Symbol" Name="Drop"/>
							<expression tag="List.List">
								<expression tag="Symbolic.Symbol" Name="r"/>
								<expression tag="Symbolic.Symbol" Name="c"/>
								<expression tag="Symbolic.Symbol" Name="n"/>
							</expression>
						</expression>
						<expression tag="Programming.Block" Description="block" Expanded="True">
							<expression tag="Symbolic.Local">
								<expression tag="Symbolic.Assignment">
									<expression tag="Symbolic.Symbol" Name="x"/>
									<expression tag="Math.Arithmetic.Addition">
										<expression tag="Expression.Child">
											<expression tag="Symbolic.Symbol" Name="m"/>
											<expression tag="List.List">
												<expression tag="Symbolic.Symbol" Name="r"/>
												<expression tag="Symbolic.Symbol" Name="c"/>
											</expression>
										</expression>
										<expression tag="Symbolic.Symbol" Name="n"/>
									</expression>
								</expression>
							</expression>
							<expression tag="Programming.IfElse">
								<expression tag="Relation.GreaterOrEquals">
									<expression tag="Symbolic.Symbol" Name="x"/>
									<expression tag="Math.Number" Value="4"/>
								</expression>
								<expression tag="Programming.Block" Description="block" Expanded="True">
									<expression tag="Symbolic.Local">
										<expression tag="Symbolic.Assignment">
											<expression tag="Symbolic.Symbol" Name="drop"/>
											<expression tag="Math.Arithmetic.DivE">
												<expression tag="Symbolic.Symbol" Name="x"/>
												<expression tag="Math.Number" Value="4"/>
											</expression>
										</expression>
									</expression>
									<expression tag="Symbolic.Assignment">
										<expression tag="Symbolic.Symbol" Name="x"/>
										<expression tag="Math.Arithmetic.Addition">
											<expression tag="Symbolic.Symbol" Name="x"/>
											<expression tag="Math.Arithmetic.Negative">
												<expression tag="Math.Arithmetic.Multiplication">
													<expression tag="Math.Number" Value="4"/>
													<expression tag="Symbolic.Symbol" Name="drop"/>
												</expression>
											</expression>
										</expression>
									</expression>
									<expression tag="Symbolic.Assignment">
										<expression tag="Expression.Child">
											<expression tag="Symbolic.Symbol" Name="m"/>
											<expression tag="List.List">
												<expression tag="Symbolic.Symbol" Name="r"/>
												<expression tag="Symbolic.Symbol" Name="c"/>
											</expression>
										</expression>
										<expression tag="Symbolic.Symbol" Name="x"/>
									</expression>
									<expression tag="Programming.InvertedIf">
										<expression tag="Symbolic.Function">
											<expression tag="Symbolic.Symbol" Name="Drop"/>
											<expression tag="List.List">
												<expression tag="Math.Arithmetic.Addition">
													<expression tag="Symbolic.Symbol" Name="r"/>
													<expression tag="Math.Arithmetic.Negative">
														<expression tag="Math.Number" Value="1"/>
													</expression>
												</expression>
												<expression tag="Symbolic.Symbol" Name="c"/>
												<expression tag="Symbolic.Symbol" Name="drop"/>
											</expression>
										</expression>
										<expression tag="Relation.Greater">
											<expression tag="Symbolic.Symbol" Name="r"/>
											<expression tag="Math.Number" Value="1"/>
										</expression>
									</expression>
									<expression tag="Programming.InvertedIf">
										<expression tag="Symbolic.Function">
											<expression tag="Symbolic.Symbol" Name="Drop"/>
											<expression tag="List.List">
												<expression tag="Math.Arithmetic.Addition">
													<expression tag="Symbolic.Symbol" Name="r"/>
													<expression tag="Math.Number" Value="1"/>
												</expression>
												<expression tag="Symbolic.Symbol" Name="c"/>
												<expression tag="Symbolic.Symbol" Name="drop"/>
											</expression>
										</expression>
										<expression tag="Relation.Less">
											<expression tag="Symbolic.Symbol" Name="r"/>
											<expression tag="Symbolic.Symbol" Name="size"/>
										</expression>
									</expression>
									<expression tag="Programming.InvertedIf">
										<expression tag="Symbolic.Function">
											<expression tag="Symbolic.Symbol" Name="Drop"/>
											<expression tag="List.List">
												<expression tag="Symbolic.Symbol" Name="r"/>
												<expression tag="Math.Arithmetic.Addition">
													<expression tag="Symbolic.Symbol" Name="c"/>
													<expression tag="Math.Arithmetic.Negative">
														<expression tag="Math.Number" Value="1"/>
													</expression>
												</expression>
												<expression tag="Symbolic.Symbol" Name="drop"/>
											</expression>
										</expression>
										<expression tag="Relation.Greater">
											<expression tag="Symbolic.Symbol" Name="c"/>
											<expression tag="Math.Number" Value="1"/>
										</expression>
									</expression>
									<expression tag="Programming.InvertedIf">
										<expression tag="Symbolic.Function">
											<expression tag="Symbolic.Symbol" Name="Drop"/>
											<expression tag="List.List">
												<expression tag="Symbolic.Symbol" Name="r"/>
												<expression tag="Math.Arithmetic.Addition">
													<expression tag="Symbolic.Symbol" Name="c"/>
													<expression tag="Math.Number" Value="1"/>
												</expression>
												<expression tag="Symbolic.Symbol" Name="drop"/>
											</expression>
										</expression>
										<expression tag="Relation.Less">
											<expression tag="Symbolic.Symbol" Name="c"/>
											<expression tag="Symbolic.Symbol" Name="size"/>
										</expression>
									</expression>
								</expression>
								<expression tag="Symbolic.Assignment">
									<expression tag="Expression.Child">
										<expression tag="Symbolic.Symbol" Name="m"/>
										<expression tag="List.List">
											<expression tag="Symbolic.Symbol" Name="r"/>
											<expression tag="Symbolic.Symbol" Name="c"/>
										</expression>
									</expression>
									<expression tag="Symbolic.Symbol" Name="x"/>
								</expression>
							</expression>
						</expression>
					</expression>
				</expression>
				<expression tag="Symbolic.Function">
					<expression tag="Symbolic.Symbol" Name="Drop"/>
					<expression tag="List.List">
						<expression tag="Math.Arithmetic.DivE">
							<expression tag="Symbolic.Symbol" Name="size"/>
							<expression tag="Math.Number" Value="2"/>
						</expression>
						<expression tag="Math.Arithmetic.DivE">
							<expression tag="Symbolic.Symbol" Name="size"/>
							<expression tag="Math.Number" Value="2"/>
						</expression>
						<expression tag="Symbolic.Symbol" Name="n"/>
					</expression>
				</expression>
				<expression tag="Symbolic.Local">
					<expression tag="Symbolic.Assignment">
						<expression tag="Symbolic.Symbol" Name="g"/>
						<expression tag="Graphics.CreateRasterGraphics">
							<expression tag="Symbolic.Symbol" Name="size"/>
							<expression tag="Symbolic.Symbol" Name="size"/>
						</expression>
					</expression>
				</expression>
				<expression tag="Symbolic.Local">
					<expression tag="Symbolic.Assignment">
						<expression tag="Symbolic.Symbol" Name="palette"/>
						<expression tag="List.List">
							<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="0"/>
							<expression tag="Color.Color" Red="1" Green="0.5019607843137255" Blue="0.5019607843137255" Alpha="1"/>
							<expression tag="Color.Color" Red="0.5019607843137255" Green="1" Blue="0.5019607843137255" Alpha="1"/>
							<expression tag="Color.Color" Red="0.5019607843137255" Green="0.5019607843137255" Blue="1" Alpha="1"/>
						</expression>
					</expression>
				</expression>
				<expression tag="Programming.ForFromTo">
					<expression tag="Programming.ForFromTo">
						<expression tag="Graphics.SetPixel">
							<expression tag="Symbolic.Symbol" Name="g"/>
							<expression tag="Symbolic.Symbol" Name="x"/>
							<expression tag="Symbolic.Symbol" Name="y"/>
							<expression tag="Expression.Child">
								<expression tag="Symbolic.Symbol" Name="palette"/>
								<expression tag="Math.Arithmetic.Addition">
									<expression tag="Expression.Child">
										<expression tag="Symbolic.Symbol" Name="m"/>
										<expression tag="List.List">
											<expression tag="Symbolic.Symbol" Name="y"/>
											<expression tag="Symbolic.Symbol" Name="x"/>
										</expression>
									</expression>
									<expression tag="Math.Number" Value="1"/>
								</expression>
							</expression>
						</expression>
						<expression tag="Symbolic.Symbol" Name="x"/>
						<expression tag="Math.Number" Value="1"/>
						<expression tag="Symbolic.Symbol" Name="size"/>
					</expression>
					<expression tag="Symbolic.Symbol" Name="y"/>
					<expression tag="Math.Number" Value="1"/>
					<expression tag="Symbolic.Symbol" Name="size"/>
				</expression>
				<expression tag="Symbolic.Symbol" Name="g"/>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Symbolic.Function">
			<expression tag="Symbolic.Symbol" Name="SandPile v1"/>
			<expression tag="List.List">
				<expression tag="Math.Number" Value="100"/>
				<expression tag="Math.Number" Value="10000"/>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="1">
		<expression tag="Graphics.RasterGraphics" Value="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"/>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Typesetting.Paragraph">
			<expression tag="String.Text" Value="Version 2."/>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="2">
		<expression tag="Symbolic.Assignment">
			<expression tag="Symbolic.Function">
				<expression tag="Symbolic.Symbol" Name="SandPile v2"/>
				<expression tag="List.List">
					<expression tag="Symbolic.Symbol" Name="size"/>
					<expression tag="Symbolic.Symbol" Name="n"/>
				</expression>
			</expression>
			<expression tag="Programming.Block" Description="block" Expanded="True">
				<expression tag="Symbolic.Local">
					<expression tag="Symbolic.Assignment">
						<expression tag="Symbolic.Symbol" Name="m"/>
						<expression tag="List.CreateList">
							<expression tag="List.CreateList">
								<expression tag="Math.Number" Value="0"/>
								<expression tag="Symbolic.Symbol" Name="size"/>
							</expression>
							<expression tag="Symbolic.Symbol" Name="size"/>
						</expression>
					</expression>
				</expression>
				<expression tag="Symbolic.Assignment">
					<expression tag="Expression.Child">
						<expression tag="Symbolic.Symbol" Name="m"/>
						<expression tag="List.List">
							<expression tag="Math.Arithmetic.DivE">
								<expression tag="Symbolic.Symbol" Name="size"/>
								<expression tag="Math.Number" Value="2"/>
							</expression>
							<expression tag="Math.Arithmetic.DivE">
								<expression tag="Symbolic.Symbol" Name="size"/>
								<expression tag="Math.Number" Value="2"/>
							</expression>
						</expression>
					</expression>
					<expression tag="Symbolic.Symbol" Name="n"/>
				</expression>
				<expression tag="Symbolic.Local">
					<expression tag="List.List">
						<expression tag="Symbolic.Symbol" Name="count"/>
						<expression tag="Symbolic.Symbol" Name="x"/>
						<expression tag="Symbolic.Symbol" Name="drop"/>
					</expression>
				</expression>
				<expression tag="Programming.Until">
					<expression tag="Programming.Block" Description="block" Expanded="True">
						<expression tag="Symbolic.Assignment">
							<expression tag="Symbolic.Symbol" Name="count"/>
							<expression tag="Math.Number" Value="0"/>
						</expression>
						<expression tag="Programming.ForFromTo">
							<expression tag="Programming.ForFromTo">
								<expression tag="Programming.Block" Description="block" Expanded="True">
									<expression tag="Symbolic.Assignment">
										<expression tag="Symbolic.Symbol" Name="x"/>
										<expression tag="Expression.Child">
											<expression tag="Symbolic.Symbol" Name="m"/>
											<expression tag="List.List">
												<expression tag="Symbolic.Symbol" Name="r"/>
												<expression tag="Symbolic.Symbol" Name="c"/>
											</expression>
										</expression>
									</expression>
									<expression tag="Programming.If">
										<expression tag="Relation.GreaterOrEquals">
											<expression tag="Symbolic.Symbol" Name="x"/>
											<expression tag="Math.Number" Value="4"/>
										</expression>
										<expression tag="Programming.Block" Description="block" Expanded="True">
											<expression tag="Symbolic.Assignment">
												<expression tag="Symbolic.Symbol" Name="drop"/>
												<expression tag="Math.Arithmetic.DivE">
													<expression tag="Symbolic.Symbol" Name="x"/>
													<expression tag="Math.Number" Value="4"/>
												</expression>
											</expression>
											<expression tag="Symbolic.Assignment">
												<expression tag="Expression.Child">
													<expression tag="Symbolic.Symbol" Name="m"/>
													<expression tag="List.List">
														<expression tag="Symbolic.Symbol" Name="r"/>
														<expression tag="Symbolic.Symbol" Name="c"/>
													</expression>
												</expression>
												<expression tag="Math.Arithmetic.Addition">
													<expression tag="Symbolic.Symbol" Name="x"/>
													<expression tag="Math.Arithmetic.Negative">
														<expression tag="Math.Arithmetic.Multiplication">
															<expression tag="Math.Number" Value="4"/>
															<expression tag="Symbolic.Symbol" Name="drop"/>
														</expression>
													</expression>
												</expression>
											</expression>
											<expression tag="Programming.InvertedIf">
												<expression tag="Symbolic.Assignment">
													<expression tag="Expression.Child">
														<expression tag="Symbolic.Symbol" Name="m"/>
														<expression tag="List.List">
															<expression tag="Math.Arithmetic.Addition">
																<expression tag="Symbolic.Symbol" Name="r"/>
																<expression tag="Math.Arithmetic.Negative">
																	<expression tag="Math.Number" Value="1"/>
																</expression>
															</expression>
															<expression tag="Symbolic.Symbol" Name="c"/>
														</expression>
													</expression>
													<expression tag="Math.Arithmetic.Addition">
														<expression tag="Expression.Child">
															<expression tag="Symbolic.Symbol" Name="m"/>
															<expression tag="List.List">
																<expression tag="Math.Arithmetic.Addition">
																	<expression tag="Symbolic.Symbol" Name="r"/>
																	<expression tag="Math.Arithmetic.Negative">
																		<expression tag="Math.Number" Value="1"/>
																	</expression>
																</expression>
																<expression tag="Symbolic.Symbol" Name="c"/>
															</expression>
														</expression>
														<expression tag="Symbolic.Symbol" Name="drop"/>
													</expression>
												</expression>
												<expression tag="Relation.Greater">
													<expression tag="Symbolic.Symbol" Name="r"/>
													<expression tag="Math.Number" Value="1"/>
												</expression>
											</expression>
											<expression tag="Programming.InvertedIf">
												<expression tag="Symbolic.Assignment">
													<expression tag="Expression.Child">
														<expression tag="Symbolic.Symbol" Name="m"/>
														<expression tag="List.List">
															<expression tag="Math.Arithmetic.Addition">
																<expression tag="Symbolic.Symbol" Name="r"/>
																<expression tag="Math.Number" Value="1"/>
															</expression>
															<expression tag="Symbolic.Symbol" Name="c"/>
														</expression>
													</expression>
													<expression tag="Math.Arithmetic.Addition">
														<expression tag="Expression.Child">
															<expression tag="Symbolic.Symbol" Name="m"/>
															<expression tag="List.List">
																<expression tag="Math.Arithmetic.Addition">
																	<expression tag="Symbolic.Symbol" Name="r"/>
																	<expression tag="Math.Number" Value="1"/>
																</expression>
																<expression tag="Symbolic.Symbol" Name="c"/>
															</expression>
														</expression>
														<expression tag="Symbolic.Symbol" Name="drop"/>
													</expression>
												</expression>
												<expression tag="Relation.Less">
													<expression tag="Symbolic.Symbol" Name="r"/>
													<expression tag="Symbolic.Symbol" Name="size"/>
												</expression>
											</expression>
											<expression tag="Programming.InvertedIf">
												<expression tag="Symbolic.Assignment">
													<expression tag="Expression.Child">
														<expression tag="Symbolic.Symbol" Name="m"/>
														<expression tag="List.List">
															<expression tag="Symbolic.Symbol" Name="r"/>
															<expression tag="Math.Arithmetic.Addition">
																<expression tag="Symbolic.Symbol" Name="c"/>
																<expression tag="Math.Arithmetic.Negative">
																	<expression tag="Math.Number" Value="1"/>
																</expression>
															</expression>
														</expression>
													</expression>
													<expression tag="Math.Arithmetic.Addition">
														<expression tag="Expression.Child">
															<expression tag="Symbolic.Symbol" Name="m"/>
															<expression tag="List.List">
																<expression tag="Symbolic.Symbol" Name="r"/>
																<expression tag="Math.Arithmetic.Addition">
																	<expression tag="Symbolic.Symbol" Name="c"/>
																	<expression tag="Math.Arithmetic.Negative">
																		<expression tag="Math.Number" Value="1"/>
																	</expression>
																</expression>
															</expression>
														</expression>
														<expression tag="Symbolic.Symbol" Name="drop"/>
													</expression>
												</expression>
												<expression tag="Relation.Greater">
													<expression tag="Symbolic.Symbol" Name="c"/>
													<expression tag="Math.Number" Value="1"/>
												</expression>
											</expression>
											<expression tag="Programming.InvertedIf">
												<expression tag="Symbolic.Assignment">
													<expression tag="Expression.Child">
														<expression tag="Symbolic.Symbol" Name="m"/>
														<expression tag="List.List">
															<expression tag="Symbolic.Symbol" Name="r"/>
															<expression tag="Math.Arithmetic.Addition">
																<expression tag="Symbolic.Symbol" Name="c"/>
																<expression tag="Math.Number" Value="1"/>
															</expression>
														</expression>
													</expression>
													<expression tag="Math.Arithmetic.Addition">
														<expression tag="Expression.Child">
															<expression tag="Symbolic.Symbol" Name="m"/>
															<expression tag="List.List">
																<expression tag="Symbolic.Symbol" Name="r"/>
																<expression tag="Math.Arithmetic.Addition">
																	<expression tag="Symbolic.Symbol" Name="c"/>
																	<expression tag="Math.Number" Value="1"/>
																</expression>
															</expression>
														</expression>
														<expression tag="Symbolic.Symbol" Name="drop"/>
													</expression>
												</expression>
												<expression tag="Relation.Less">
													<expression tag="Symbolic.Symbol" Name="c"/>
													<expression tag="Symbolic.Symbol" Name="size"/>
												</expression>
											</expression>
											<expression tag="Symbolic.Assignment">
												<expression tag="Symbolic.Symbol" Name="count"/>
												<expression tag="Math.Arithmetic.Addition">
													<expression tag="Symbolic.Symbol" Name="count"/>
													<expression tag="Math.Number" Value="1"/>
												</expression>
											</expression>
										</expression>
									</expression>
								</expression>
								<expression tag="Symbolic.Symbol" Name="c"/>
								<expression tag="Math.Number" Value="1"/>
								<expression tag="Symbolic.Symbol" Name="size"/>
							</expression>
							<expression tag="Symbolic.Symbol" Name="r"/>
							<expression tag="Math.Number" Value="1"/>
							<expression tag="Symbolic.Symbol" Name="size"/>
						</expression>
					</expression>
					<expression tag="Relation.Equals">
						<expression tag="Symbolic.Symbol" Name="count"/>
						<expression tag="Math.Number" Value="0"/>
					</expression>
				</expression>
				<expression tag="Symbolic.Local">
					<expression tag="Symbolic.Assignment">
						<expression tag="Symbolic.Symbol" Name="g"/>
						<expression tag="Graphics.CreateRasterGraphics">
							<expression tag="Symbolic.Symbol" Name="size"/>
							<expression tag="Symbolic.Symbol" Name="size"/>
						</expression>
					</expression>
				</expression>
				<expression tag="Symbolic.Local">
					<expression tag="Symbolic.Assignment">
						<expression tag="Symbolic.Symbol" Name="palette"/>
						<expression tag="List.List">
							<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="0"/>
							<expression tag="Color.Color" Red="1" Green="0.5019607843137255" Blue="0.5019607843137255" Alpha="1"/>
							<expression tag="Color.Color" Red="0.5019607843137255" Green="1" Blue="0.5019607843137255" Alpha="1"/>
							<expression tag="Color.Color" Red="0.5019607843137255" Green="0.5019607843137255" Blue="1" Alpha="1"/>
						</expression>
					</expression>
				</expression>
				<expression tag="Programming.ForFromTo">
					<expression tag="Programming.ForFromTo">
						<expression tag="Graphics.SetPixel">
							<expression tag="Symbolic.Symbol" Name="g"/>
							<expression tag="Symbolic.Symbol" Name="x"/>
							<expression tag="Symbolic.Symbol" Name="y"/>
							<expression tag="Expression.Child">
								<expression tag="Symbolic.Symbol" Name="palette"/>
								<expression tag="Math.Arithmetic.Addition">
									<expression tag="Expression.Child">
										<expression tag="Symbolic.Symbol" Name="m"/>
										<expression tag="List.List">
											<expression tag="Symbolic.Symbol" Name="y"/>
											<expression tag="Symbolic.Symbol" Name="x"/>
										</expression>
									</expression>
									<expression tag="Math.Number" Value="1"/>
								</expression>
							</expression>
						</expression>
						<expression tag="Symbolic.Symbol" Name="x"/>
						<expression tag="Math.Number" Value="1"/>
						<expression tag="Symbolic.Symbol" Name="size"/>
					</expression>
					<expression tag="Symbolic.Symbol" Name="y"/>
					<expression tag="Math.Number" Value="1"/>
					<expression tag="Symbolic.Symbol" Name="size"/>
				</expression>
				<expression tag="Symbolic.Symbol" Name="g"/>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Symbolic.Function">
			<expression tag="Symbolic.Symbol" Name="SandPile v2"/>
			<expression tag="List.List">
				<expression tag="Math.Number" Value="100"/>
				<expression tag="Math.Number" Value="10000"/>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="1">
		<expression tag="Graphics.RasterGraphics" Value="iVBORw0KGgoAAAANSUhEUgAAAGQAAABkCAYAAABw4pVUAAAAAXNSR0IArs4c6QAACYJJREFUeF7tXe22qzgI9Tx57ZN3VixkNjsQbbQ2M4v7p+dajQmbjw1B+7fkv6kk8DfVbHIySwIymRIkIAnIZBKYbDppIQnIZBKYbDppIQnIZBKYbDppIQnIZBKYbDppIQnIMQm81vVVznw+jp1/5KzH833W37pOq4jTTawA8Vwey7r+/a3r67V9vtbXKWQez2X9W/8db329HstzSmCmAUSBWFSNi2mUv+VzE+inwCgQeh2Mt5nK87HMBszPATFAKAjLYjUaBHoIGAcIYyFlPPWHAtIswPwMEBcItgYQWgOEajsHDzzuWYiC7VnNBBbzE0CK69nktli3VFxIjRki6MgiNMYwHu5xBAbHXV8vdIvqwopelPseIQpXn3PrTatVyCqKm9hYFLgqDN7b9wU0zwr0GNIwjT8BPWvGo3hVlQTmdzcjuw0QYxUg4KrRKMxF4rkHRnE5yMCKlqvWB8cRz6oEeFAtE8YqX+u5d1rL1wFxrQIFTUConFhbq/y889HCSNCNcalVer4GrI2t6a6g/1VAIqvgxZq40RFKkSFbx97/G+twlEEZWFUGx1XeZS1fA2TLGTgwg283oHDiBvkGn2cSRLGWGvg5dgDjGr4fsjJYz9XBXMf7CiAIhgGFMu8qJEzYvESQErouBWZG1Usw6b44Hzdvwdj3JRZ2OSBuDYoLUiA0FW4jALgGA7+JLQ6QakHI4Boq7FikmYdXEYDY9c2a2OWAlPpT9fWysKguhW7EUGDj+KV8YqL9mwobhsZMiRNHL5F8PN9piMSVrluTnAXjTbn/1a7r0gFNrQm0cJv0Tl1qL+do4oSoqZt6cAkGSyUkQS83MS4RgGwKnbLGK0G5DJDqqpTF8EL2Krdc5gCLQC3uVoGdqi7mE0wIunWxYKyqWJKnlPGvTB4vA0RdFWpclPS5pfTIgtCtQCGwZvAcRzShg7IMVwQiCzCazvkOuURe51VWcgkgXBY37EmoKAbWKO/wXAIGadVGTDa9rF2TuJ7VFk3n/ENL/xwnNmWDMkvk5q4A5TQgzaJlVjppDrwaT3qsqi6Mgm6NRXqCMLEmV6HvQ7cFbjGcj1igrsOLdeXYVa7rNCCeq6rrlDJFUwZx3IwRtlJeAMQTRJdlkWI0LA4Li8zgiJHptV4552rXdQqQzXVAMdYLkrtlclw8aiNtIqkw0B2ygFDoeh7Hj40uy3YuBmj9e3e+bFVQkSjzORvgTwGi1sHB0FBUiSGNf3XopGtJJEBDc3nvXfbKjcfiPRaulcneR12Ll68obZeBe+zsbG4yDAhbBwscfXKTvUeZu5a/A+ZUsZWdPW+vhC1ou4apeC+3QPcl6ZPGB9N0EUTws1YyDEhjHQ5N5N24hhFBclc7TSS7D+tKtGdR2ZJT7vByFm/c6taIETaEBBUFASEFO2MlQ4C4sYOoobuJxGk1uwf4vqGkpLnbf8FSGqoduEreIm6qx7y3IsKOlMnbdj5jJUOAIC9vkiwVBAtf/a/s6ql8XS0ETTV9WtyYELiNpkwDfVicU0TB3CtI1tvxlrNTYR61ko8BKQIqTKLxp6Kt6LNdxuJZBeQTOrbbn6XBFe7l4o/NE3ANjlnmZnYzO/NqlAfKJrVRg1qXVE6RzkTHhwBpukVoD7zZ5+C7c7wxtEiquEB7G+FheaTz94aFdCg2Vo0EwpOO18MqoLlVatSME+1EHwNSyiTclulZQpg9g++v1kSsqrkWN61AkO48ILibUgxYQKMwIGgzJydw9xJUJhEjzRFDgLjmFmgUJmE1OaZ9bRbsNj7WmjCr5kSSfRZk+dxexLWyXuVYyyHaptTU2VAIgcXfBwhUPqPMlkHD8zCLVo30qsSGjkKgL+7H01R1UdisXeMGuNWRuezFAo+F3QoILjQsp2NsALfkZeRKFauvJ7qpVrN9ghWEW69oVbi7CEG+xiZt1pP5NuWWgAobkBxKfy8gvEidHbka9DBeRZVdAyeTxn1JoA9zFJkD5hphQwQpCMYOr8GhrgNLMU5CiCWY2wHh4hwvPgr2Vcl75XMvJqkSQEEPk0O02i5oZD1MItxY51hZCDbEwD1Xx9+PBXXqp+XkMKqmGiF1NFSFjMC5rC1qGQK3Fta2mFlhjzG6SyzJyDXM3txi4+B++3lA2FU5bf6m+kvtPdxqWoeT7kGXuqJgnN7exu2BG+2RgZqUwprKn001wlMEVvWfAxIBg4FSMmh2J1g+0YDv5SLGBTJJiDQcHzmAJBIDN7tWVIIGwKgZY1pAnMBaiQ3kH4bJ4DWQ+BnmBewIs2/9G2tezcNA4v9rUdRjcDI+M0Cm3nuEouKSFgLPmbDAnSz9/28hnQcsM4Yc51rng3rnAUuXFju7goZmBuwnWVYAKreLelmzHss85PPnFE9ZSLTfwQVFZbqZqe+7rnFAuHbj0L56SGtB8pm1rBiYYUDcPfOOAoxUWLPau29Ri/d01HZZ7oc00rutuJg7hvbZefYWmunfAkj0bhKMC7mnPv5Sm49jSHadvB/Zq/s42uHyq66TrfoJTXHZl/V+XwtXI27ryyqAZOeifYAHdyi1BjraBf+xy1Iqkb29QKp+3dvrWQlzPmRi2f1+IJ+QU4YtpMaSYGPG5CudLsD3OO/3KnoZ/PY9PGBjCgT5fIiVfj5BJe+BFLHohtpxe2jPPGUhaCXeXrWWPlzNx/qWzou6QQp7cbd05Xzc+q2PBXjvvFreeYF2IW6X8730mDOvcB3UVzzKrBCW04DkU7j/5iSjzOpSQDYroaeXTKYudS4sLhqaSF0o0X6LJmJl0fmc+gGnmG9yOCCkA6ecdll6j3zXyQFpHzjlMkAa15VvAzog/i+wrCYhzPdlDQGhF11qIWXQfKPcKTy+88OS+c7FcVAutxCdSr6VdAyUrwGiQb7J0im7fWf78hshkrPUxN15f667Xapvq3M+USxe4/R2f62Vycm9qsPItuwn0HwVEI0p+E6SSCg8aQ/I7RysLupF/MgZHqeBm04W/B6SVJ6nNnV/ItyRc78OCLowT8imHgUrCAHJd7+P4Oxfk7+OsC/L2ywEp5K/HxID8xNATGyBJ6Ga35vSIO89tYSP95rIDS9ezl/Y2TdJPiN/g8pK5GcW0gUGLCN/pe1zJb/0CvN+rL23YR+9c/6O4VFJxee5NbGTw2oKc8XO3smphJdP47K+tcD/2rgJyGSIJSAJyGQSmGw6aSEJyGQSmGw6aSEJyGQSmGw6aSEJyGQSmGw6aSEJyGQSmGw6aSGTAfIPGs0VVWHqlYoAAAAASUVORK5CYII="/>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Typesetting.Paragraph">
			<expression tag="String.Text" Value="Version 3."/>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="2">
		<expression tag="Symbolic.Assignment">
			<expression tag="Symbolic.Function">
				<expression tag="Symbolic.Symbol" Name="SandPile v3"/>
				<expression tag="List.List">
					<expression tag="Symbolic.Symbol" Name="size"/>
					<expression tag="Symbolic.Symbol" Name="n"/>
				</expression>
			</expression>
			<expression tag="Programming.Block" Description="block" Expanded="True">
				<expression tag="Symbolic.Local">
					<expression tag="Symbolic.Assignment">
						<expression tag="Symbolic.Symbol" Name="m"/>
						<expression tag="List.CreateList">
							<expression tag="List.CreateList">
								<expression tag="Math.Number" Value="0"/>
								<expression tag="Symbolic.Symbol" Name="size"/>
							</expression>
							<expression tag="Symbolic.Symbol" Name="size"/>
						</expression>
					</expression>
				</expression>
				<expression tag="Symbolic.Assignment">
					<expression tag="Expression.Child">
						<expression tag="Symbolic.Symbol" Name="m"/>
						<expression tag="List.List">
							<expression tag="Math.Arithmetic.DivE">
								<expression tag="Symbolic.Symbol" Name="size"/>
								<expression tag="Math.Number" Value="2"/>
							</expression>
							<expression tag="Math.Arithmetic.DivE">
								<expression tag="Symbolic.Symbol" Name="size"/>
								<expression tag="Math.Number" Value="2"/>
							</expression>
						</expression>
					</expression>
					<expression tag="Symbolic.Symbol" Name="n"/>
				</expression>
				<expression tag="Symbolic.Local">
					<expression tag="List.List">
						<expression tag="Symbolic.Symbol" Name="r"/>
						<expression tag="Symbolic.Symbol" Name="c"/>
						<expression tag="Symbolic.Symbol" Name="x"/>
						<expression tag="Symbolic.Symbol" Name="drop"/>
						<expression tag="Symbolic.Symbol" Name="l1"/>
						<expression tag="Symbolic.Symbol" Name="l2"/>
					</expression>
				</expression>
				<expression tag="Symbolic.Assignment">
					<expression tag="Symbolic.Symbol" Name="l2"/>
					<expression tag="List.List">
						<expression tag="List.List">
							<expression tag="Math.Arithmetic.DivE">
								<expression tag="Symbolic.Symbol" Name="size"/>
								<expression tag="Math.Number" Value="2"/>
							</expression>
							<expression tag="Math.Arithmetic.DivE">
								<expression tag="Symbolic.Symbol" Name="size"/>
								<expression tag="Math.Number" Value="2"/>
							</expression>
						</expression>
					</expression>
				</expression>
				<expression tag="Symbolic.Local">
					<expression tag="Symbolic.Assignment">
						<expression tag="Symbolic.Symbol" Name="stats"/>
						<expression tag="List.List"/>
					</expression>
				</expression>
				<expression tag="Programming.Until">
					<expression tag="Programming.Block" Description="block" Expanded="True">
						<expression tag="Symbolic.Assignment">
							<expression tag="Symbolic.Symbol" Name="l1"/>
							<expression tag="Symbolic.Symbol" Name="l2"/>
						</expression>
						<expression tag="Symbolic.Assignment">
							<expression tag="Symbolic.Symbol" Name="l2"/>
							<expression tag="List.List"/>
						</expression>
						<expression tag="Expression.Append">
							<expression tag="Symbolic.Symbol" Name="stats"/>
							<expression tag="Expression.Cardinality">
								<expression tag="Symbolic.Symbol" Name="l1"/>
							</expression>
						</expression>
						<expression tag="Programming.ForFromTo">
							<expression tag="Programming.Block" Description="block" Expanded="True">
								<expression tag="Symbolic.Assignment">
									<expression tag="List.List">
										<expression tag="Symbolic.Symbol" Name="r"/>
										<expression tag="Symbolic.Symbol" Name="c"/>
									</expression>
									<expression tag="Expression.Child">
										<expression tag="Symbolic.Symbol" Name="l1"/>
										<expression tag="Symbolic.Symbol" Name="i"/>
									</expression>
								</expression>
								<expression tag="Symbolic.Assignment">
									<expression tag="Symbolic.Symbol" Name="x"/>
									<expression tag="Expression.Child">
										<expression tag="Symbolic.Symbol" Name="m"/>
										<expression tag="List.List">
											<expression tag="Symbolic.Symbol" Name="r"/>
											<expression tag="Symbolic.Symbol" Name="c"/>
										</expression>
									</expression>
								</expression>
								<expression tag="Programming.If">
									<expression tag="Relation.GreaterOrEquals">
										<expression tag="Symbolic.Symbol" Name="x"/>
										<expression tag="Math.Number" Value="4"/>
									</expression>
									<expression tag="Programming.Block" Description="block" Expanded="True">
										<expression tag="Symbolic.Assignment">
											<expression tag="Symbolic.Symbol" Name="drop"/>
											<expression tag="Math.Arithmetic.DivE">
												<expression tag="Symbolic.Symbol" Name="x"/>
												<expression tag="Math.Number" Value="4"/>
											</expression>
										</expression>
										<expression tag="Symbolic.Assignment">
											<expression tag="Expression.Child">
												<expression tag="Symbolic.Symbol" Name="m"/>
												<expression tag="List.List">
													<expression tag="Symbolic.Symbol" Name="r"/>
													<expression tag="Symbolic.Symbol" Name="c"/>
												</expression>
											</expression>
											<expression tag="Math.Arithmetic.Addition">
												<expression tag="Symbolic.Symbol" Name="x"/>
												<expression tag="Math.Arithmetic.Negative">
													<expression tag="Math.Arithmetic.Multiplication">
														<expression tag="Math.Number" Value="4"/>
														<expression tag="Symbolic.Symbol" Name="drop"/>
													</expression>
												</expression>
											</expression>
										</expression>
										<expression tag="Programming.If">
											<expression tag="Relation.Greater">
												<expression tag="Symbolic.Symbol" Name="r"/>
												<expression tag="Math.Number" Value="1"/>
											</expression>
											<expression tag="Programming.Block" Description="block" Expanded="True">
												<expression tag="Symbolic.Assignment">
													<expression tag="Expression.Child">
														<expression tag="Symbolic.Symbol" Name="m"/>
														<expression tag="List.List">
															<expression tag="Math.Arithmetic.Addition">
																<expression tag="Symbolic.Symbol" Name="r"/>
																<expression tag="Math.Arithmetic.Negative">
																	<expression tag="Math.Number" Value="1"/>
																</expression>
															</expression>
															<expression tag="Symbolic.Symbol" Name="c"/>
														</expression>
													</expression>
													<expression tag="Symbolic.Assignment">
														<expression tag="Symbolic.Symbol" Name="x"/>
														<expression tag="Math.Arithmetic.Addition">
															<expression tag="Expression.Child">
																<expression tag="Symbolic.Symbol" Name="m"/>
																<expression tag="List.List">
																	<expression tag="Math.Arithmetic.Addition">
																		<expression tag="Symbolic.Symbol" Name="r"/>
																		<expression tag="Math.Arithmetic.Negative">
																			<expression tag="Math.Number" Value="1"/>
																		</expression>
																	</expression>
																	<expression tag="Symbolic.Symbol" Name="c"/>
																</expression>
															</expression>
															<expression tag="Symbolic.Symbol" Name="drop"/>
														</expression>
													</expression>
												</expression>
												<expression tag="Programming.InvertedIf">
													<expression tag="Expression.Append">
														<expression tag="Symbolic.Symbol" Name="l2"/>
														<expression tag="List.List">
															<expression tag="Math.Arithmetic.Addition">
																<expression tag="Symbolic.Symbol" Name="r"/>
																<expression tag="Math.Arithmetic.Negative">
																	<expression tag="Math.Number" Value="1"/>
																</expression>
															</expression>
															<expression tag="Symbolic.Symbol" Name="c"/>
														</expression>
													</expression>
													<expression tag="Relation.GreaterOrEquals">
														<expression tag="Symbolic.Symbol" Name="x"/>
														<expression tag="Math.Number" Value="4"/>
													</expression>
												</expression>
											</expression>
										</expression>
										<expression tag="Programming.If">
											<expression tag="Relation.Less">
												<expression tag="Symbolic.Symbol" Name="r"/>
												<expression tag="Symbolic.Symbol" Name="size"/>
											</expression>
											<expression tag="Programming.Block" Description="block" Expanded="True">
												<expression tag="Symbolic.Assignment">
													<expression tag="Expression.Child">
														<expression tag="Symbolic.Symbol" Name="m"/>
														<expression tag="List.List">
															<expression tag="Math.Arithmetic.Addition">
																<expression tag="Symbolic.Symbol" Name="r"/>
																<expression tag="Math.Number" Value="1"/>
															</expression>
															<expression tag="Symbolic.Symbol" Name="c"/>
														</expression>
													</expression>
													<expression tag="Symbolic.Assignment">
														<expression tag="Symbolic.Symbol" Name="x"/>
														<expression tag="Math.Arithmetic.Addition">
															<expression tag="Expression.Child">
																<expression tag="Symbolic.Symbol" Name="m"/>
																<expression tag="List.List">
																	<expression tag="Math.Arithmetic.Addition">
																		<expression tag="Symbolic.Symbol" Name="r"/>
																		<expression tag="Math.Number" Value="1"/>
																	</expression>
																	<expression tag="Symbolic.Symbol" Name="c"/>
																</expression>
															</expression>
															<expression tag="Symbolic.Symbol" Name="drop"/>
														</expression>
													</expression>
												</expression>
												<expression tag="Programming.InvertedIf">
													<expression tag="Expression.Append">
														<expression tag="Symbolic.Symbol" Name="l2"/>
														<expression tag="List.List">
															<expression tag="Math.Arithmetic.Addition">
																<expression tag="Symbolic.Symbol" Name="r"/>
																<expression tag="Math.Number" Value="1"/>
															</expression>
															<expression tag="Symbolic.Symbol" Name="c"/>
														</expression>
													</expression>
													<expression tag="Relation.GreaterOrEquals">
														<expression tag="Symbolic.Symbol" Name="x"/>
														<expression tag="Math.Number" Value="4"/>
													</expression>
												</expression>
											</expression>
										</expression>
										<expression tag="Programming.If">
											<expression tag="Relation.Greater">
												<expression tag="Symbolic.Symbol" Name="c"/>
												<expression tag="Math.Number" Value="1"/>
											</expression>
											<expression tag="Programming.Block" Description="block" Expanded="True">
												<expression tag="Symbolic.Assignment">
													<expression tag="Expression.Child">
														<expression tag="Symbolic.Symbol" Name="m"/>
														<expression tag="List.List">
															<expression tag="Symbolic.Symbol" Name="r"/>
															<expression tag="Math.Arithmetic.Addition">
																<expression tag="Symbolic.Symbol" Name="c"/>
																<expression tag="Math.Arithmetic.Negative">
																	<expression tag="Math.Number" Value="1"/>
																</expression>
															</expression>
														</expression>
													</expression>
													<expression tag="Symbolic.Assignment">
														<expression tag="Symbolic.Symbol" Name="x"/>
														<expression tag="Math.Arithmetic.Addition">
															<expression tag="Expression.Child">
																<expression tag="Symbolic.Symbol" Name="m"/>
																<expression tag="List.List">
																	<expression tag="Symbolic.Symbol" Name="r"/>
																	<expression tag="Math.Arithmetic.Addition">
																		<expression tag="Symbolic.Symbol" Name="c"/>
																		<expression tag="Math.Arithmetic.Negative">
																			<expression tag="Math.Number" Value="1"/>
																		</expression>
																	</expression>
																</expression>
															</expression>
															<expression tag="Symbolic.Symbol" Name="drop"/>
														</expression>
													</expression>
												</expression>
												<expression tag="Programming.InvertedIf">
													<expression tag="Expression.Append">
														<expression tag="Symbolic.Symbol" Name="l2"/>
														<expression tag="List.List">
															<expression tag="Symbolic.Symbol" Name="r"/>
															<expression tag="Math.Arithmetic.Addition">
																<expression tag="Symbolic.Symbol" Name="c"/>
																<expression tag="Math.Arithmetic.Negative">
																	<expression tag="Math.Number" Value="1"/>
																</expression>
															</expression>
														</expression>
													</expression>
													<expression tag="Relation.GreaterOrEquals">
														<expression tag="Symbolic.Symbol" Name="x"/>
														<expression tag="Math.Number" Value="4"/>
													</expression>
												</expression>
											</expression>
										</expression>
										<expression tag="Programming.If">
											<expression tag="Relation.Less">
												<expression tag="Symbolic.Symbol" Name="c"/>
												<expression tag="Symbolic.Symbol" Name="size"/>
											</expression>
											<expression tag="Programming.Block" Description="block" Expanded="True">
												<expression tag="Symbolic.Assignment">
													<expression tag="Expression.Child">
														<expression tag="Symbolic.Symbol" Name="m"/>
														<expression tag="List.List">
															<expression tag="Symbolic.Symbol" Name="r"/>
															<expression tag="Math.Arithmetic.Addition">
																<expression tag="Symbolic.Symbol" Name="c"/>
																<expression tag="Math.Number" Value="1"/>
															</expression>
														</expression>
													</expression>
													<expression tag="Symbolic.Assignment">
														<expression tag="Symbolic.Symbol" Name="x"/>
														<expression tag="Math.Arithmetic.Addition">
															<expression tag="Expression.Child">
																<expression tag="Symbolic.Symbol" Name="m"/>
																<expression tag="List.List">
																	<expression tag="Symbolic.Symbol" Name="r"/>
																	<expression tag="Math.Arithmetic.Addition">
																		<expression tag="Symbolic.Symbol" Name="c"/>
																		<expression tag="Math.Number" Value="1"/>
																	</expression>
																</expression>
															</expression>
															<expression tag="Symbolic.Symbol" Name="drop"/>
														</expression>
													</expression>
												</expression>
												<expression tag="Programming.InvertedIf">
													<expression tag="Expression.Append">
														<expression tag="Symbolic.Symbol" Name="l2"/>
														<expression tag="List.List">
															<expression tag="Symbolic.Symbol" Name="r"/>
															<expression tag="Math.Arithmetic.Addition">
																<expression tag="Symbolic.Symbol" Name="c"/>
																<expression tag="Math.Number" Value="1"/>
															</expression>
														</expression>
													</expression>
													<expression tag="Relation.GreaterOrEquals">
														<expression tag="Symbolic.Symbol" Name="x"/>
														<expression tag="Math.Number" Value="4"/>
													</expression>
												</expression>
											</expression>
										</expression>
									</expression>
								</expression>
							</expression>
							<expression tag="Symbolic.Symbol" Name="i"/>
							<expression tag="Math.Number" Value="1"/>
							<expression tag="Expression.Cardinality">
								<expression tag="Symbolic.Symbol" Name="l1"/>
							</expression>
						</expression>
					</expression>
					<expression tag="Relation.Equals">
						<expression tag="Expression.Cardinality">
							<expression tag="Symbolic.Symbol" Name="l2"/>
						</expression>
						<expression tag="Math.Number" Value="0"/>
					</expression>
				</expression>
				<expression tag="Programming.Block" Description="block" Expanded="True">
					<expression tag="Symbolic.Local">
						<expression tag="Symbolic.Assignment">
							<expression tag="Symbolic.Symbol" Name="g"/>
							<expression tag="Graphics.CreateRasterGraphics">
								<expression tag="Symbolic.Symbol" Name="size"/>
								<expression tag="Symbolic.Symbol" Name="size"/>
							</expression>
						</expression>
					</expression>
					<expression tag="Symbolic.Local">
						<expression tag="Symbolic.Assignment">
							<expression tag="Symbolic.Symbol" Name="palette"/>
							<expression tag="List.List">
								<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="0"/>
								<expression tag="Color.Color" Red="1" Green="0.5019607843137255" Blue="0.5019607843137255" Alpha="1"/>
								<expression tag="Color.Color" Red="0.5019607843137255" Green="1" Blue="0.5019607843137255" Alpha="1"/>
								<expression tag="Color.Color" Red="0.5019607843137255" Green="0.5019607843137255" Blue="1" Alpha="1"/>
							</expression>
						</expression>
					</expression>
					<expression tag="Programming.ForFromTo">
						<expression tag="Programming.ForFromTo">
							<expression tag="Graphics.SetPixel">
								<expression tag="Symbolic.Symbol" Name="g"/>
								<expression tag="Symbolic.Symbol" Name="x"/>
								<expression tag="Symbolic.Symbol" Name="y"/>
								<expression tag="Expression.Child">
									<expression tag="Symbolic.Symbol" Name="palette"/>
									<expression tag="Math.Arithmetic.Addition">
										<expression tag="Expression.Child">
											<expression tag="Symbolic.Symbol" Name="m"/>
											<expression tag="List.List">
												<expression tag="Symbolic.Symbol" Name="y"/>
												<expression tag="Symbolic.Symbol" Name="x"/>
											</expression>
										</expression>
										<expression tag="Math.Number" Value="1"/>
									</expression>
								</expression>
							</expression>
							<expression tag="Symbolic.Symbol" Name="x"/>
							<expression tag="Math.Number" Value="1"/>
							<expression tag="Symbolic.Symbol" Name="size"/>
						</expression>
						<expression tag="Symbolic.Symbol" Name="y"/>
						<expression tag="Math.Number" Value="1"/>
						<expression tag="Symbolic.Symbol" Name="size"/>
					</expression>
					<expression tag="List.List">
						<expression tag="Symbolic.Symbol" Name="g"/>
						<expression tag="Chart.XYChart">
							<expression tag="Symbolic.Symbol" Name="stats"/>
						</expression>
					</expression>
				</expression>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Symbolic.Function">
			<expression tag="Symbolic.Symbol" Name="SandPile v3"/>
			<expression tag="List.List">
				<expression tag="Math.Number" Value="100"/>
				<expression tag="Math.Number" Value="10000"/>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="1">
		<expression tag="List.List">
			<expression tag="Graphics.RasterGraphics" Value="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"/>
			<expression tag="Graphics.RasterGraphics" Value=""/>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Symbolic.Function">
			<expression tag="Symbolic.Symbol" Name="SandPile v3"/>
			<expression tag="List.List">
				<expression tag="Math.Number" Value="300"/>
				<expression tag="Math.Number" Value="100000"/>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Typesetting.MultiParagraph">
			<expression tag="Typesetting.Paragraph">
				<expression tag="Typesetting.BoldChunk">
					<expression tag="String.Text" Value="See also:"/>
				</expression>
			</expression>
			<expression tag="Typesetting.BulletedList">
				<expression tag="Typesetting.Paragraph">
					<expression tag="String.Text" Value="Other"/>
					<expression tag="Internet.UniformResourceLocator" Value="/?script=articles/Rosetta_Code_examples" Description="Rosetta code"/>
					<expression tag="String.Text" Value="examples"/>
				</expression>
				<expression tag="Typesetting.Paragraph">
					<expression tag="String.Text" Value="Other"/>
					<expression tag="Internet.UniformResourceLocator" Value="/?script=articles/Graphics_examples" Description="graphics"/>
					<expression tag="String.Text" Value="examples"/>
				</expression>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="Author: Laurence R. Ugalde"/>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="Last modified:"/>
				<expression tag="Time.Time" Value="1621559711727"/>
			</expression>
		</expression>
	</expression>
</expression>
