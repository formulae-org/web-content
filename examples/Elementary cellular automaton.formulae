<expression tag="Formulae.Script" Modules="org.formulae.typesetting,org.formulae.text.string,org.formulae.symbolic,org.formulae.list,org.formulae.programming,org.formulae.math.arithmetic,org.formulae.relation,org.formulae.expression,org.formulae.color,org.formulae.graphics.raster,org.formulae.time">
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Typesetting.MultiParagraph">
			<expression tag="Typesetting.Paragraph">
				<expression tag="Typesetting.BoldChunk">
					<expression tag="String.Text" Value="Elementary cellular automaton"/>
				</expression>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="An"/>
				<expression tag="Internet.UniformResourceLocator" Value="https://en.wikipedia.org/wiki/Elementary_cellular_automaton" Description="elementary cellular automaton"/>
				<expression tag="String.Text" Value="is a one-dimensional"/>
				<expression tag="Internet.UniformResourceLocator" Value="https://en.wikipedia.org/wiki/Cellular_automaton" Description="cellular automaton"/>
				<expression tag="String.Text" Value="where there are two possible states (labeled 0 and 1) and the rule to determine the state of a cell in the next generation depends only on the current state of the cell and its two immediate neighbors. Those three values can be encoded with three bits."/>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="The rules of evolution are then encoded with eight bits indicating the outcome of each of the eight possibilities 111, 110, 101, 100, 011, 010, 001 and 000 in this order. Thus for instance the rule 13 means that a state is updated to 1 only in the cases 011, 010 and 000, since 13 in binary is 00001101."/>
			</expression>
			<expression tag="String.Text" Value="In this script, programs to calculate and show elementary cellular automatons are presented."/>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="This is also a solution for the"/>
				<expression tag="Internet.UniformResourceLocator" Value="https://rosettacode.org/wiki/Elementary_cellular_automaton" Description="Elementary cellular automaton"/>
				<expression tag="String.Text" Value="exercise, described in the website"/>
				<expression tag="Internet.UniformResourceLocator" Value="https://rosettacode.org/wiki/Rosetta_Code" Description="Rosetta code."/>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="Typesetting.BoldChunk">
					<expression tag="String.Text" Value="Requirements (from Rosetta code)"/>
				</expression>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="Create a subroutine, program or function that allows to create and visualize the evolution of any of the 256 possible elementary cellular automaton of arbitrary space length and for any given initial state. You can demonstrate your solution with any automaton of your choice."/>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="The space state should wrap: this means that the left-most cell should be considered as the right neighbor of the right-most cell, and reciprocally."/>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="This task is basically a generalization of"/>
				<expression tag="Internet.UniformResourceLocator" Value="https://rosettacode.org/wiki/One-dimensional_cellular_automata" Description="one-dimensional cellular automata."/>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="Typesetting.BoldChunk">
					<expression tag="String.Text" Value="Programs"/>
				</expression>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="Typesetting.BoldChunk">
					<expression tag="String.Text" Value="Version 1. Result a s a matrix"/>
				</expression>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="2">
		<expression tag="Symbolic.Assignment">
			<expression tag="Symbolic.Function">
				<expression tag="Symbolic.Symbol" Name="CA"/>
				<expression tag="List.List">
					<expression tag="Symbolic.Symbol" Name="rule"/>
					<expression tag="Symbolic.Symbol" Name="init"/>
					<expression tag="Symbolic.Symbol" Name="n"/>
					<expression tag="Symbolic.Symbol" Name="steps"/>
				</expression>
			</expression>
			<expression tag="Programming.Block" Description="block" Expanded="True">
				<expression tag="Symbolic.Local">
					<expression tag="Symbolic.Assignment">
						<expression tag="Symbolic.Symbol" Name="ca"/>
						<expression tag="List.List">
							<expression tag="Math.Arithmetic.Digits">
								<expression tag="Symbolic.Symbol" Name="init"/>
								<expression tag="Math.Number" Value="2"/>
								<expression tag="Symbolic.Symbol" Name="n"/>
							</expression>
						</expression>
					</expression>
				</expression>
				<expression tag="Symbolic.Local">
					<expression tag="Symbolic.Assignment">
						<expression tag="Symbolic.Symbol" Name="rules"/>
						<expression tag="Math.Arithmetic.Digits">
							<expression tag="Symbolic.Symbol" Name="rule"/>
							<expression tag="Math.Number" Value="2"/>
							<expression tag="Math.Number" Value="8"/>
						</expression>
					</expression>
				</expression>
				<expression tag="Symbolic.Local">
					<expression tag="List.List">
						<expression tag="Symbolic.Symbol" Name="left"/>
						<expression tag="Symbolic.Symbol" Name="right"/>
						<expression tag="Symbolic.Symbol" Name="value"/>
						<expression tag="Symbolic.Symbol" Name="arr"/>
					</expression>
				</expression>
				<expression tag="Programming.ForFromTo">
					<expression tag="Programming.Block" Description="block" Expanded="True">
						<expression tag="Symbolic.Assignment">
							<expression tag="Symbolic.Symbol" Name="arr"/>
							<expression tag="List.List"/>
						</expression>
						<expression tag="Programming.ForFromTo">
							<expression tag="Programming.Block" Description="block" Expanded="True">
								<expression tag="Symbolic.Assignment">
									<expression tag="List.List">
										<expression tag="Symbolic.Symbol" Name="left"/>
										<expression tag="Symbolic.Symbol" Name="right"/>
									</expression>
									<expression tag="List.List">
										<expression tag="Programming.Conditional">
											<expression tag="Relation.Equals">
												<expression tag="Symbolic.Symbol" Name="cell"/>
												<expression tag="Math.Number" Value="1"/>
											</expression>
											<expression tag="Symbolic.Symbol" Name="n"/>
											<expression tag="Math.Arithmetic.Addition">
												<expression tag="Symbolic.Symbol" Name="cell"/>
												<expression tag="Math.Arithmetic.Negative">
													<expression tag="Math.Number" Value="1"/>
												</expression>
											</expression>
										</expression>
										<expression tag="Programming.Conditional">
											<expression tag="Relation.Equals">
												<expression tag="Symbolic.Symbol" Name="cell"/>
												<expression tag="Symbolic.Symbol" Name="n"/>
											</expression>
											<expression tag="Math.Number" Value="1"/>
											<expression tag="Math.Arithmetic.Addition">
												<expression tag="Symbolic.Symbol" Name="cell"/>
												<expression tag="Math.Number" Value="1"/>
											</expression>
										</expression>
									</expression>
								</expression>
								<expression tag="Symbolic.Assignment">
									<expression tag="Symbolic.Symbol" Name="value"/>
									<expression tag="Math.Arithmetic.Addition">
										<expression tag="Math.Arithmetic.Multiplication">
											<expression tag="Math.Number" Value="4"/>
											<expression tag="Expression.Child">
												<expression tag="Symbolic.Symbol" Name="ca"/>
												<expression tag="List.List">
													<expression tag="Symbolic.Symbol" Name="step"/>
													<expression tag="Symbolic.Symbol" Name="left"/>
												</expression>
											</expression>
										</expression>
										<expression tag="Math.Arithmetic.Multiplication">
											<expression tag="Math.Number" Value="2"/>
											<expression tag="Expression.Child">
												<expression tag="Symbolic.Symbol" Name="ca"/>
												<expression tag="List.List">
													<expression tag="Symbolic.Symbol" Name="step"/>
													<expression tag="Symbolic.Symbol" Name="cell"/>
												</expression>
											</expression>
										</expression>
										<expression tag="Expression.Child">
											<expression tag="Symbolic.Symbol" Name="ca"/>
											<expression tag="List.List">
												<expression tag="Symbolic.Symbol" Name="step"/>
												<expression tag="Symbolic.Symbol" Name="right"/>
											</expression>
										</expression>
									</expression>
								</expression>
								<expression tag="Expression.Append">
									<expression tag="Symbolic.Symbol" Name="arr"/>
									<expression tag="Expression.Child">
										<expression tag="Symbolic.Symbol" Name="rules"/>
										<expression tag="Math.Arithmetic.Addition">
											<expression tag="Math.Number" Value="8"/>
											<expression tag="Math.Arithmetic.Negative">
												<expression tag="Symbolic.Symbol" Name="value"/>
											</expression>
										</expression>
									</expression>
								</expression>
							</expression>
							<expression tag="Symbolic.Symbol" Name="cell"/>
							<expression tag="Math.Number" Value="1"/>
							<expression tag="Symbolic.Symbol" Name="n"/>
						</expression>
						<expression tag="Expression.Append">
							<expression tag="Symbolic.Symbol" Name="ca"/>
							<expression tag="Symbolic.Symbol" Name="arr"/>
						</expression>
					</expression>
					<expression tag="Symbolic.Symbol" Name="step"/>
					<expression tag="Math.Number" Value="1"/>
					<expression tag="Symbolic.Symbol" Name="steps"/>
				</expression>
				<expression tag="List.CreateList">
					<expression tag="List.CreateList">
						<expression tag="Programming.Conditional">
							<expression tag="Relation.Equals">
								<expression tag="Expression.Child">
									<expression tag="Symbolic.Symbol" Name="ca"/>
									<expression tag="List.List">
										<expression tag="Symbolic.Symbol" Name="s"/>
										<expression tag="Symbolic.Symbol" Name="i"/>
									</expression>
								</expression>
								<expression tag="Math.Number" Value="1"/>
							</expression>
							<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
							<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
						</expression>
						<expression tag="Symbolic.Symbol" Name="i"/>
						<expression tag="Math.Number" Value="1"/>
						<expression tag="Symbolic.Symbol" Name="n"/>
					</expression>
					<expression tag="Symbolic.Symbol" Name="s"/>
					<expression tag="Math.Number" Value="1"/>
					<expression tag="Math.Arithmetic.Addition">
						<expression tag="Symbolic.Symbol" Name="steps"/>
						<expression tag="Math.Number" Value="1"/>
					</expression>
				</expression>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Symbolic.Function">
			<expression tag="Symbolic.Symbol" Name="CA"/>
			<expression tag="List.List">
				<expression tag="Math.Number" Value="246"/>
				<expression tag="Math.Arithmetic.Exponentiation">
					<expression tag="Math.Number" Value="2"/>
					<expression tag="Math.Number" Value="15"/>
				</expression>
				<expression tag="Math.Number" Value="30"/>
				<expression tag="Math.Number" Value="30"/>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="1">
		<expression tag="List.List">
			<expression tag="List.List">
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
			</expression>
			<expression tag="List.List">
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
			</expression>
			<expression tag="List.List">
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
			</expression>
			<expression tag="List.List">
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
			</expression>
			<expression tag="List.List">
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
			</expression>
			<expression tag="List.List">
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
			</expression>
			<expression tag="List.List">
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
			</expression>
			<expression tag="List.List">
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
			</expression>
			<expression tag="List.List">
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
			</expression>
			<expression tag="List.List">
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
			</expression>
			<expression tag="List.List">
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
			</expression>
			<expression tag="List.List">
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
			</expression>
			<expression tag="List.List">
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
			</expression>
			<expression tag="List.List">
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
			</expression>
			<expression tag="List.List">
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
			</expression>
			<expression tag="List.List">
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
			</expression>
			<expression tag="List.List">
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
			</expression>
			<expression tag="List.List">
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
			</expression>
			<expression tag="List.List">
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
			</expression>
			<expression tag="List.List">
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
			</expression>
			<expression tag="List.List">
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
			</expression>
			<expression tag="List.List">
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
			</expression>
			<expression tag="List.List">
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
			</expression>
			<expression tag="List.List">
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
			</expression>
			<expression tag="List.List">
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
			</expression>
			<expression tag="List.List">
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
			</expression>
			<expression tag="List.List">
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
			</expression>
			<expression tag="List.List">
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
			</expression>
			<expression tag="List.List">
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
			</expression>
			<expression tag="List.List">
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
			</expression>
			<expression tag="List.List">
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="1" Blue="1" Alpha="1"/>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Typesetting.Paragraph">
			<expression tag="Typesetting.BoldChunk">
				<expression tag="String.Text" Value="Version 2. Result a s a drawing"/>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="2">
		<expression tag="Symbolic.Assignment">
			<expression tag="Symbolic.Function">
				<expression tag="Symbolic.Symbol" Name="CA graphics"/>
				<expression tag="List.List">
					<expression tag="Symbolic.Symbol" Name="rule"/>
					<expression tag="Symbolic.Symbol" Name="init"/>
					<expression tag="Symbolic.Symbol" Name="n"/>
					<expression tag="Symbolic.Symbol" Name="steps"/>
					<expression tag="Symbolic.Symbol" Name="size"/>
				</expression>
			</expression>
			<expression tag="Programming.Block" Description="block" Expanded="True">
				<expression tag="Symbolic.Local">
					<expression tag="Symbolic.Assignment">
						<expression tag="Symbolic.Symbol" Name="old"/>
						<expression tag="Math.Arithmetic.Digits">
							<expression tag="Symbolic.Symbol" Name="init"/>
							<expression tag="Math.Number" Value="2"/>
							<expression tag="Symbolic.Symbol" Name="n"/>
						</expression>
					</expression>
				</expression>
				<expression tag="Symbolic.Local">
					<expression tag="Symbolic.Assignment">
						<expression tag="Symbolic.Symbol" Name="rules"/>
						<expression tag="Math.Arithmetic.Digits">
							<expression tag="Symbolic.Symbol" Name="rule"/>
							<expression tag="Math.Number" Value="2"/>
							<expression tag="Math.Number" Value="8"/>
						</expression>
					</expression>
				</expression>
				<expression tag="Symbolic.Local">
					<expression tag="List.List">
						<expression tag="Symbolic.Symbol" Name="left"/>
						<expression tag="Symbolic.Symbol" Name="right"/>
						<expression tag="Symbolic.Symbol" Name="value"/>
						<expression tag="Symbolic.Symbol" Name="arr"/>
					</expression>
				</expression>
				<expression tag="Symbolic.Local">
					<expression tag="Symbolic.Assignment">
						<expression tag="Symbolic.Symbol" Name="g"/>
						<expression tag="Graphics.CreateRasterGraphics">
							<expression tag="Math.Arithmetic.Multiplication">
								<expression tag="Symbolic.Symbol" Name="n"/>
								<expression tag="Symbolic.Symbol" Name="size"/>
							</expression>
							<expression tag="Math.Arithmetic.Multiplication">
								<expression tag="Math.Arithmetic.Addition">
									<expression tag="Symbolic.Symbol" Name="steps"/>
									<expression tag="Math.Number" Value="1"/>
								</expression>
								<expression tag="Symbolic.Symbol" Name="size"/>
							</expression>
						</expression>
					</expression>
				</expression>
				<expression tag="Symbolic.Local">
					<expression tag="Symbolic.Assignment">
						<expression tag="Symbolic.Function">
							<expression tag="Symbolic.Symbol" Name="draw"/>
							<expression tag="List.List">
								<expression tag="Symbolic.Symbol" Name="r"/>
							</expression>
						</expression>
						<expression tag="Programming.ForFromTo">
							<expression tag="Programming.InvertedIf">
								<expression tag="Graphics.FillRectanglePosSize">
									<expression tag="Symbolic.Symbol" Name="g"/>
									<expression tag="Math.Arithmetic.Multiplication">
										<expression tag="Math.Arithmetic.Addition">
											<expression tag="Symbolic.Symbol" Name="c"/>
											<expression tag="Math.Arithmetic.Negative">
												<expression tag="Math.Number" Value="1"/>
											</expression>
										</expression>
										<expression tag="Symbolic.Symbol" Name="size"/>
									</expression>
									<expression tag="Math.Arithmetic.Multiplication">
										<expression tag="Symbolic.Symbol" Name="r"/>
										<expression tag="Symbolic.Symbol" Name="size"/>
									</expression>
									<expression tag="Symbolic.Symbol" Name="size"/>
									<expression tag="Symbolic.Symbol" Name="size"/>
								</expression>
								<expression tag="Relation.Equals">
									<expression tag="Expression.Child">
										<expression tag="Symbolic.Symbol" Name="old"/>
										<expression tag="Symbolic.Symbol" Name="c"/>
									</expression>
									<expression tag="Math.Number" Value="1"/>
								</expression>
							</expression>
							<expression tag="Symbolic.Symbol" Name="c"/>
							<expression tag="Math.Number" Value="1"/>
							<expression tag="Symbolic.Symbol" Name="n"/>
						</expression>
					</expression>
				</expression>
				<expression tag="Symbolic.Function">
					<expression tag="Symbolic.Symbol" Name="draw"/>
					<expression tag="List.List">
						<expression tag="Math.Number" Value="0"/>
					</expression>
				</expression>
				<expression tag="Programming.ForFromTo">
					<expression tag="Programming.Block" Description="block" Expanded="True">
						<expression tag="Symbolic.Assignment">
							<expression tag="Symbolic.Symbol" Name="arr"/>
							<expression tag="List.List"/>
						</expression>
						<expression tag="Programming.ForFromTo">
							<expression tag="Programming.Block" Description="block" Expanded="True">
								<expression tag="Symbolic.Assignment">
									<expression tag="List.List">
										<expression tag="Symbolic.Symbol" Name="left"/>
										<expression tag="Symbolic.Symbol" Name="right"/>
									</expression>
									<expression tag="List.List">
										<expression tag="Programming.Conditional">
											<expression tag="Relation.Equals">
												<expression tag="Symbolic.Symbol" Name="cell"/>
												<expression tag="Math.Number" Value="1"/>
											</expression>
											<expression tag="Symbolic.Symbol" Name="n"/>
											<expression tag="Math.Arithmetic.Addition">
												<expression tag="Symbolic.Symbol" Name="cell"/>
												<expression tag="Math.Arithmetic.Negative">
													<expression tag="Math.Number" Value="1"/>
												</expression>
											</expression>
										</expression>
										<expression tag="Programming.Conditional">
											<expression tag="Relation.Equals">
												<expression tag="Symbolic.Symbol" Name="cell"/>
												<expression tag="Symbolic.Symbol" Name="n"/>
											</expression>
											<expression tag="Math.Number" Value="1"/>
											<expression tag="Math.Arithmetic.Addition">
												<expression tag="Symbolic.Symbol" Name="cell"/>
												<expression tag="Math.Number" Value="1"/>
											</expression>
										</expression>
									</expression>
								</expression>
								<expression tag="Symbolic.Assignment">
									<expression tag="Symbolic.Symbol" Name="value"/>
									<expression tag="Expression.Child">
										<expression tag="Symbolic.Symbol" Name="rules"/>
										<expression tag="Math.Arithmetic.Addition">
											<expression tag="Math.Number" Value="8"/>
											<expression tag="Math.Arithmetic.Negative">
												<expression tag="Math.Arithmetic.Addition">
													<expression tag="Math.Arithmetic.Multiplication">
														<expression tag="Math.Number" Value="4"/>
														<expression tag="Expression.Child">
															<expression tag="Symbolic.Symbol" Name="old"/>
															<expression tag="Symbolic.Symbol" Name="left"/>
														</expression>
													</expression>
													<expression tag="Math.Arithmetic.Multiplication">
														<expression tag="Math.Number" Value="2"/>
														<expression tag="Expression.Child">
															<expression tag="Symbolic.Symbol" Name="old"/>
															<expression tag="Symbolic.Symbol" Name="cell"/>
														</expression>
													</expression>
													<expression tag="Expression.Child">
														<expression tag="Symbolic.Symbol" Name="old"/>
														<expression tag="Symbolic.Symbol" Name="right"/>
													</expression>
												</expression>
											</expression>
										</expression>
									</expression>
								</expression>
								<expression tag="Expression.Append">
									<expression tag="Symbolic.Symbol" Name="arr"/>
									<expression tag="Symbolic.Symbol" Name="value"/>
								</expression>
							</expression>
							<expression tag="Symbolic.Symbol" Name="cell"/>
							<expression tag="Math.Number" Value="1"/>
							<expression tag="Symbolic.Symbol" Name="n"/>
						</expression>
						<expression tag="Symbolic.Assignment">
							<expression tag="Symbolic.Symbol" Name="old"/>
							<expression tag="Symbolic.Symbol" Name="arr"/>
						</expression>
						<expression tag="Symbolic.Function">
							<expression tag="Symbolic.Symbol" Name="draw"/>
							<expression tag="List.List">
								<expression tag="Symbolic.Symbol" Name="step"/>
							</expression>
						</expression>
					</expression>
					<expression tag="Symbolic.Symbol" Name="step"/>
					<expression tag="Math.Number" Value="1"/>
					<expression tag="Symbolic.Symbol" Name="steps"/>
				</expression>
				<expression tag="Symbolic.Symbol" Name="g"/>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Symbolic.Function">
			<expression tag="Symbolic.Symbol" Name="CA graphics"/>
			<expression tag="List.List">
				<expression tag="Math.Number" Value="110"/>
				<expression tag="Math.Number" Value="1"/>
				<expression tag="Math.Number" Value="200"/>
				<expression tag="Math.Number" Value="500"/>
				<expression tag="Math.Number" Value="1"/>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="1">
		<expression tag="Graphics.RasterGraphics" Value=""/>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Symbolic.Function">
			<expression tag="Symbolic.Symbol" Name="CA graphics"/>
			<expression tag="List.List">
				<expression tag="Math.Number" Value="30"/>
				<expression tag="Math.Arithmetic.Exponentiation">
					<expression tag="Math.Number" Value="2"/>
					<expression tag="Math.Number" Value="256"/>
				</expression>
				<expression tag="Math.Number" Value="512"/>
				<expression tag="Math.Number" Value="512"/>
				<expression tag="Math.Number" Value="1"/>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="1">
		<expression tag="Graphics.RasterGraphics" Value="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"/>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Typesetting.MultiParagraph">
			<expression tag="Typesetting.Paragraph">
				<expression tag="Typesetting.BoldChunk">
					<expression tag="String.Text" Value="See also:"/>
				</expression>
			</expression>
			<expression tag="Typesetting.BulletedList">
				<expression tag="Typesetting.Paragraph">
					<expression tag="String.Text" Value="Other"/>
					<expression tag="Internet.UniformResourceLocator" Value="/?script=articles/Rosetta_Code_examples" Description="Rosetta code"/>
					<expression tag="String.Text" Value="examples"/>
				</expression>
				<expression tag="Typesetting.Paragraph">
					<expression tag="String.Text" Value="Other"/>
					<expression tag="Internet.UniformResourceLocator" Value="/?script=articles/Graphics_examples" Description="graphics"/>
					<expression tag="String.Text" Value="examples"/>
				</expression>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="Author: Laurence R. Ugalde"/>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="Last modified:"/>
				<expression tag="Time.Time" Value="1679259060000"/>
			</expression>
		</expression>
	</expression>
</expression>