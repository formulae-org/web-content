<expression tag="Formulae.Script" Modules="org.formulae.typesetting,org.formulae.text.string,org.formulae.expression,org.formulae.relation,org.formulae.math.arithmetic,org.formulae.visualization,org.formulae.symbolic,org.formulae.list,org.formulae.programming,org.formulae.diagramming,org.formulae.chart,org.formulae.graphics.raster,org.formulae.time">
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Typesetting.MultiParagraph">
			<expression tag="Typesetting.Paragraph">
				<expression tag="Typesetting.BoldChunk">
					<expression tag="String.Text" Value="Fibonacci numbers"/>
				</expression>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="The"/>
				<expression tag="Internet.UniformResourceLocator" Value="https://en.wikipedia.org/wiki/Fibonacci_number" Description="Fibonacci numbers"/>
				<expression tag="String.Text" Value="commonly denoted"/>
				<expression tag="Expression.Child">
					<expression tag="String.Text" Value="F"/>
					<expression tag="String.Text" Value="n"/>
				</expression>
				<expression tag="String.Text" Value=", form a"/>
				<expression tag="Internet.UniformResourceLocator" Value="https://en.wikipedia.org/wiki/Integer_sequence" Description="sequence,"/>
				<expression tag="String.Text" Value="called the"/>
				<expression tag="Typesetting.ItalicChunk">
					<expression tag="String.Text" Value="Fibonacci sequence,"/>
				</expression>
				<expression tag="String.Text" Value="such that each number is the sum of the two preceding ones, starting from 0 and 1. That is:"/>
			</expression>
			<expression tag="Typesetting.Centering">
				<expression tag="Relation.Equals">
					<expression tag="Expression.Child">
						<expression tag="String.Text" Value="F"/>
						<expression tag="Math.Number" Value="0"/>
					</expression>
					<expression tag="Math.Number" Value="0"/>
				</expression>
			</expression>
			<expression tag="Typesetting.Centering">
				<expression tag="Relation.Equals">
					<expression tag="Expression.Child">
						<expression tag="String.Text" Value="F"/>
						<expression tag="Math.Number" Value="1"/>
					</expression>
					<expression tag="Math.Number" Value="1"/>
				</expression>
			</expression>
			<expression tag="Typesetting.Centering">
				<expression tag="Visualization.HorizontalArray">
					<expression tag="Expression.Child">
						<expression tag="String.Text" Value="F"/>
						<expression tag="String.Text" Value="n"/>
					</expression>
					<expression tag="String.Text" Value="="/>
					<expression tag="Math.Arithmetic.Addition">
						<expression tag="Expression.Child">
							<expression tag="String.Text" Value="F"/>
							<expression tag="Math.Arithmetic.Addition">
								<expression tag="String.Text" Value="n"/>
								<expression tag="Math.Arithmetic.Negative">
									<expression tag="Math.Number" Value="1"/>
								</expression>
							</expression>
						</expression>
						<expression tag="Expression.Child">
							<expression tag="String.Text" Value="F"/>
							<expression tag="Math.Arithmetic.Addition">
								<expression tag="String.Text" Value="n"/>
								<expression tag="Math.Arithmetic.Negative">
									<expression tag="Math.Number" Value="2"/>
								</expression>
							</expression>
						</expression>
					</expression>
					<expression tag="String.Text" Value="     for"/>
					<expression tag="Relation.GreaterOrEquals">
						<expression tag="String.Text" Value="n"/>
						<expression tag="Math.Number" Value="2"/>
					</expression>
				</expression>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="In this script, several programs for calculating Fibonacci numbers are shown."/>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="This is also a solution for the"/>
				<expression tag="Internet.UniformResourceLocator" Value="https://rosettacode.org/wiki/Fibonacci_sequence" Description="Fibonacci sequence"/>
				<expression tag="String.Text" Value="exercise, described in the website"/>
				<expression tag="Internet.UniformResourceLocator" Value="https://rosettacode.org/wiki/Rosetta_Code" Description="Rosetta code."/>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Typesetting.MultiParagraph">
			<expression tag="Typesetting.Paragraph">
				<expression tag="Typesetting.BoldChunk">
					<expression tag="String.Text" Value="Preliminaries"/>
				</expression>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="The number Ï†, also known as"/>
				<expression tag="Internet.UniformResourceLocator" Value="https://en.wikipedia.org/wiki/Golden_ratio" Description="the golden ratio,"/>
				<expression tag="String.Text" Value="has a value of"/>
				<expression tag="Math.Arithmetic.Division">
					<expression tag="Math.Arithmetic.Addition">
						<expression tag="Math.Number" Value="1"/>
						<expression tag="Math.Arithmetic.SquareRoot">
							<expression tag="Math.Number" Value="5"/>
						</expression>
					</expression>
					<expression tag="Math.Number" Value="2"/>
				</expression>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="Its numeric aproximation is:"/>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Math.Numeric">
			<expression tag="Math.Arithmetic.Division">
				<expression tag="Math.Arithmetic.Addition">
					<expression tag="Math.Number" Value="1"/>
					<expression tag="Math.Arithmetic.SquareRoot">
						<expression tag="Math.Number" Value="5"/>
					</expression>
				</expression>
				<expression tag="Math.Number" Value="2"/>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="1">
		<expression tag="Math.Number" Value="1.6180339887498948482"/>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Typesetting.Paragraph">
			<expression tag="Typesetting.BoldChunk">
				<expression tag="String.Text" Value="Recursive"/>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="2">
		<expression tag="Symbolic.Assignment">
			<expression tag="Symbolic.Function">
				<expression tag="Symbolic.Symbol" Name="Fibonacci recursive"/>
				<expression tag="List.List">
					<expression tag="Symbolic.Symbol" Name="n"/>
				</expression>
			</expression>
			<expression tag="Programming.Block" Description="block" Expanded="True">
				<expression tag="Programming.InvertedIf">
					<expression tag="Symbolic.Return">
						<expression tag="Symbolic.Symbol" Name="n"/>
					</expression>
					<expression tag="Relation.LessOrEquals">
						<expression tag="Symbolic.Symbol" Name="n"/>
						<expression tag="Math.Number" Value="1"/>
					</expression>
				</expression>
				<expression tag="Math.Arithmetic.Addition">
					<expression tag="Symbolic.Function">
						<expression tag="Symbolic.Symbol" Name="Fibonacci recursive"/>
						<expression tag="List.List">
							<expression tag="Math.Arithmetic.Addition">
								<expression tag="Symbolic.Symbol" Name="n"/>
								<expression tag="Math.Arithmetic.Negative">
									<expression tag="Math.Number" Value="1"/>
								</expression>
							</expression>
						</expression>
					</expression>
					<expression tag="Symbolic.Function">
						<expression tag="Symbolic.Symbol" Name="Fibonacci recursive"/>
						<expression tag="List.List">
							<expression tag="Math.Arithmetic.Addition">
								<expression tag="Symbolic.Symbol" Name="n"/>
								<expression tag="Math.Arithmetic.Negative">
									<expression tag="Math.Number" Value="2"/>
								</expression>
							</expression>
						</expression>
					</expression>
				</expression>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Typesetting.Paragraph">
			<expression tag="String.Text" Value="Recursive version is slow, it is"/>
			<expression tag="Symbolic.Function">
				<expression tag="String.Text" Value="O"/>
				<expression tag="List.List">
					<expression tag="Math.Arithmetic.Exponentiation">
						<expression tag="Math.Number" Value="2"/>
						<expression tag="String.Text" Value="n"/>
					</expression>
				</expression>
			</expression>
			<expression tag="String.Text" Value=", or of exponential order."/>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="List.CreateList">
			<expression tag="Symbolic.Function">
				<expression tag="Symbolic.Symbol" Name="Fibonacci recursive"/>
				<expression tag="List.List">
					<expression tag="Symbolic.Symbol" Name="n"/>
				</expression>
			</expression>
			<expression tag="Symbolic.Symbol" Name="n"/>
			<expression tag="Math.Arithmetic.Negative">
				<expression tag="Math.Number" Value="0"/>
			</expression>
			<expression tag="Math.Number" Value="25"/>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="1">
		<expression tag="List.List">
			<expression tag="Math.Number" Value="0"/>
			<expression tag="Math.Number" Value="1"/>
			<expression tag="Math.Number" Value="1"/>
			<expression tag="Math.Number" Value="2"/>
			<expression tag="Math.Number" Value="3"/>
			<expression tag="Math.Number" Value="5"/>
			<expression tag="Math.Number" Value="8"/>
			<expression tag="Math.Number" Value="13"/>
			<expression tag="Math.Number" Value="21"/>
			<expression tag="Math.Number" Value="34"/>
			<expression tag="Math.Number" Value="55"/>
			<expression tag="Math.Number" Value="89"/>
			<expression tag="Math.Number" Value="144"/>
			<expression tag="Math.Number" Value="233"/>
			<expression tag="Math.Number" Value="377"/>
			<expression tag="Math.Number" Value="610"/>
			<expression tag="Math.Number" Value="987"/>
			<expression tag="Math.Number" Value="1597"/>
			<expression tag="Math.Number" Value="2584"/>
			<expression tag="Math.Number" Value="4181"/>
			<expression tag="Math.Number" Value="6765"/>
			<expression tag="Math.Number" Value="10946"/>
			<expression tag="Math.Number" Value="17711"/>
			<expression tag="Math.Number" Value="28657"/>
			<expression tag="Math.Number" Value="46368"/>
			<expression tag="Math.Number" Value="75025"/>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Typesetting.MultiParagraph">
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="It is because it makes a lot of recursive calls."/>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="To illustrate this, the following is a functions that makes a tree or the recursive calls:"/>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="2">
		<expression tag="Symbolic.Assignment">
			<expression tag="Symbolic.Function">
				<expression tag="Symbolic.Symbol" Name="Fibonacci recursive tree"/>
				<expression tag="List.List">
					<expression tag="Symbolic.Symbol" Name="n"/>
				</expression>
			</expression>
			<expression tag="Programming.Block" Description="block" Expanded="True">
				<expression tag="Programming.InvertedIf">
					<expression tag="Symbolic.Return">
						<expression tag="Diagramming.Tree" Expanded="True">
							<expression tag="Symbolic.Symbol" Name="n"/>
						</expression>
					</expression>
					<expression tag="Relation.LessOrEquals">
						<expression tag="Symbolic.Symbol" Name="n"/>
						<expression tag="Math.Number" Value="1"/>
					</expression>
				</expression>
				<expression tag="Diagramming.Tree" Expanded="True">
					<expression tag="Symbolic.Symbol" Name="n"/>
					<expression tag="Symbolic.Function">
						<expression tag="Symbolic.Symbol" Name="Fibonacci recursive tree"/>
						<expression tag="List.List">
							<expression tag="Math.Arithmetic.Addition">
								<expression tag="Symbolic.Symbol" Name="n"/>
								<expression tag="Math.Arithmetic.Negative">
									<expression tag="Math.Number" Value="1"/>
								</expression>
							</expression>
						</expression>
					</expression>
					<expression tag="Symbolic.Function">
						<expression tag="Symbolic.Symbol" Name="Fibonacci recursive tree"/>
						<expression tag="List.List">
							<expression tag="Math.Arithmetic.Addition">
								<expression tag="Symbolic.Symbol" Name="n"/>
								<expression tag="Math.Arithmetic.Negative">
									<expression tag="Math.Number" Value="2"/>
								</expression>
							</expression>
						</expression>
					</expression>
				</expression>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Symbolic.Function">
			<expression tag="Symbolic.Symbol" Name="Fibonacci recursive tree"/>
			<expression tag="List.List">
				<expression tag="Math.Number" Value="8"/>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="1">
		<expression tag="Diagramming.Tree" Expanded="True">
			<expression tag="Math.Number" Value="8"/>
			<expression tag="Diagramming.Tree" Expanded="True">
				<expression tag="Math.Number" Value="7"/>
				<expression tag="Diagramming.Tree" Expanded="True">
					<expression tag="Math.Number" Value="6"/>
					<expression tag="Diagramming.Tree" Expanded="True">
						<expression tag="Math.Number" Value="5"/>
						<expression tag="Diagramming.Tree" Expanded="True">
							<expression tag="Math.Number" Value="4"/>
							<expression tag="Diagramming.Tree" Expanded="True">
								<expression tag="Math.Number" Value="3"/>
								<expression tag="Diagramming.Tree" Expanded="True">
									<expression tag="Math.Number" Value="2"/>
									<expression tag="Diagramming.Tree" Expanded="True">
										<expression tag="Math.Number" Value="1"/>
									</expression>
									<expression tag="Diagramming.Tree" Expanded="True">
										<expression tag="Math.Number" Value="0"/>
									</expression>
								</expression>
								<expression tag="Diagramming.Tree" Expanded="True">
									<expression tag="Math.Number" Value="1"/>
								</expression>
							</expression>
							<expression tag="Diagramming.Tree" Expanded="True">
								<expression tag="Math.Number" Value="2"/>
								<expression tag="Diagramming.Tree" Expanded="True">
									<expression tag="Math.Number" Value="1"/>
								</expression>
								<expression tag="Diagramming.Tree" Expanded="True">
									<expression tag="Math.Number" Value="0"/>
								</expression>
							</expression>
						</expression>
						<expression tag="Diagramming.Tree" Expanded="True">
							<expression tag="Math.Number" Value="3"/>
							<expression tag="Diagramming.Tree" Expanded="True">
								<expression tag="Math.Number" Value="2"/>
								<expression tag="Diagramming.Tree" Expanded="True">
									<expression tag="Math.Number" Value="1"/>
								</expression>
								<expression tag="Diagramming.Tree" Expanded="True">
									<expression tag="Math.Number" Value="0"/>
								</expression>
							</expression>
							<expression tag="Diagramming.Tree" Expanded="True">
								<expression tag="Math.Number" Value="1"/>
							</expression>
						</expression>
					</expression>
					<expression tag="Diagramming.Tree" Expanded="True">
						<expression tag="Math.Number" Value="4"/>
						<expression tag="Diagramming.Tree" Expanded="True">
							<expression tag="Math.Number" Value="3"/>
							<expression tag="Diagramming.Tree" Expanded="True">
								<expression tag="Math.Number" Value="2"/>
								<expression tag="Diagramming.Tree" Expanded="True">
									<expression tag="Math.Number" Value="1"/>
								</expression>
								<expression tag="Diagramming.Tree" Expanded="True">
									<expression tag="Math.Number" Value="0"/>
								</expression>
							</expression>
							<expression tag="Diagramming.Tree" Expanded="True">
								<expression tag="Math.Number" Value="1"/>
							</expression>
						</expression>
						<expression tag="Diagramming.Tree" Expanded="True">
							<expression tag="Math.Number" Value="2"/>
							<expression tag="Diagramming.Tree" Expanded="True">
								<expression tag="Math.Number" Value="1"/>
							</expression>
							<expression tag="Diagramming.Tree" Expanded="True">
								<expression tag="Math.Number" Value="0"/>
							</expression>
						</expression>
					</expression>
				</expression>
				<expression tag="Diagramming.Tree" Expanded="True">
					<expression tag="Math.Number" Value="5"/>
					<expression tag="Diagramming.Tree" Expanded="True">
						<expression tag="Math.Number" Value="4"/>
						<expression tag="Diagramming.Tree" Expanded="True">
							<expression tag="Math.Number" Value="3"/>
							<expression tag="Diagramming.Tree" Expanded="True">
								<expression tag="Math.Number" Value="2"/>
								<expression tag="Diagramming.Tree" Expanded="True">
									<expression tag="Math.Number" Value="1"/>
								</expression>
								<expression tag="Diagramming.Tree" Expanded="True">
									<expression tag="Math.Number" Value="0"/>
								</expression>
							</expression>
							<expression tag="Diagramming.Tree" Expanded="True">
								<expression tag="Math.Number" Value="1"/>
							</expression>
						</expression>
						<expression tag="Diagramming.Tree" Expanded="True">
							<expression tag="Math.Number" Value="2"/>
							<expression tag="Diagramming.Tree" Expanded="True">
								<expression tag="Math.Number" Value="1"/>
							</expression>
							<expression tag="Diagramming.Tree" Expanded="True">
								<expression tag="Math.Number" Value="0"/>
							</expression>
						</expression>
					</expression>
					<expression tag="Diagramming.Tree" Expanded="True">
						<expression tag="Math.Number" Value="3"/>
						<expression tag="Diagramming.Tree" Expanded="True">
							<expression tag="Math.Number" Value="2"/>
							<expression tag="Diagramming.Tree" Expanded="True">
								<expression tag="Math.Number" Value="1"/>
							</expression>
							<expression tag="Diagramming.Tree" Expanded="True">
								<expression tag="Math.Number" Value="0"/>
							</expression>
						</expression>
						<expression tag="Diagramming.Tree" Expanded="True">
							<expression tag="Math.Number" Value="1"/>
						</expression>
					</expression>
				</expression>
			</expression>
			<expression tag="Diagramming.Tree" Expanded="True">
				<expression tag="Math.Number" Value="6"/>
				<expression tag="Diagramming.Tree" Expanded="True">
					<expression tag="Math.Number" Value="5"/>
					<expression tag="Diagramming.Tree" Expanded="True">
						<expression tag="Math.Number" Value="4"/>
						<expression tag="Diagramming.Tree" Expanded="True">
							<expression tag="Math.Number" Value="3"/>
							<expression tag="Diagramming.Tree" Expanded="True">
								<expression tag="Math.Number" Value="2"/>
								<expression tag="Diagramming.Tree" Expanded="True">
									<expression tag="Math.Number" Value="1"/>
								</expression>
								<expression tag="Diagramming.Tree" Expanded="True">
									<expression tag="Math.Number" Value="0"/>
								</expression>
							</expression>
							<expression tag="Diagramming.Tree" Expanded="True">
								<expression tag="Math.Number" Value="1"/>
							</expression>
						</expression>
						<expression tag="Diagramming.Tree" Expanded="True">
							<expression tag="Math.Number" Value="2"/>
							<expression tag="Diagramming.Tree" Expanded="True">
								<expression tag="Math.Number" Value="1"/>
							</expression>
							<expression tag="Diagramming.Tree" Expanded="True">
								<expression tag="Math.Number" Value="0"/>
							</expression>
						</expression>
					</expression>
					<expression tag="Diagramming.Tree" Expanded="True">
						<expression tag="Math.Number" Value="3"/>
						<expression tag="Diagramming.Tree" Expanded="True">
							<expression tag="Math.Number" Value="2"/>
							<expression tag="Diagramming.Tree" Expanded="True">
								<expression tag="Math.Number" Value="1"/>
							</expression>
							<expression tag="Diagramming.Tree" Expanded="True">
								<expression tag="Math.Number" Value="0"/>
							</expression>
						</expression>
						<expression tag="Diagramming.Tree" Expanded="True">
							<expression tag="Math.Number" Value="1"/>
						</expression>
					</expression>
				</expression>
				<expression tag="Diagramming.Tree" Expanded="True">
					<expression tag="Math.Number" Value="4"/>
					<expression tag="Diagramming.Tree" Expanded="True">
						<expression tag="Math.Number" Value="3"/>
						<expression tag="Diagramming.Tree" Expanded="True">
							<expression tag="Math.Number" Value="2"/>
							<expression tag="Diagramming.Tree" Expanded="True">
								<expression tag="Math.Number" Value="1"/>
							</expression>
							<expression tag="Diagramming.Tree" Expanded="True">
								<expression tag="Math.Number" Value="0"/>
							</expression>
						</expression>
						<expression tag="Diagramming.Tree" Expanded="True">
							<expression tag="Math.Number" Value="1"/>
						</expression>
					</expression>
					<expression tag="Diagramming.Tree" Expanded="True">
						<expression tag="Math.Number" Value="2"/>
						<expression tag="Diagramming.Tree" Expanded="True">
							<expression tag="Math.Number" Value="1"/>
						</expression>
						<expression tag="Diagramming.Tree" Expanded="True">
							<expression tag="Math.Number" Value="0"/>
						</expression>
					</expression>
				</expression>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Typesetting.MultiParagraph">
			<expression tag="Typesetting.Paragraph">
				<expression tag="Typesetting.BoldChunk">
					<expression tag="String.Text" Value="Iterative (3 variables)"/>
				</expression>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="It is"/>
				<expression tag="Symbolic.Function">
					<expression tag="String.Text" Value="O"/>
					<expression tag="List.List">
						<expression tag="String.Text" Value="n"/>
					</expression>
				</expression>
				<expression tag="String.Text" Value=", or of linear order."/>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="2">
		<expression tag="Symbolic.Assignment">
			<expression tag="Symbolic.Function">
				<expression tag="Symbolic.Symbol" Name="Fibonacci iterative 3"/>
				<expression tag="List.List">
					<expression tag="Symbolic.Symbol" Name="n"/>
				</expression>
			</expression>
			<expression tag="Programming.Block" Description="block" Expanded="True">
				<expression tag="Programming.InvertedIf">
					<expression tag="Symbolic.Return">
						<expression tag="Symbolic.Symbol" Name="n"/>
					</expression>
					<expression tag="Relation.LessOrEquals">
						<expression tag="Symbolic.Symbol" Name="n"/>
						<expression tag="Math.Number" Value="1"/>
					</expression>
				</expression>
				<expression tag="Symbolic.Local">
					<expression tag="Symbolic.Assignment">
						<expression tag="List.List">
							<expression tag="Symbolic.Symbol" Name="pen"/>
							<expression tag="Symbolic.Symbol" Name="ult"/>
						</expression>
						<expression tag="List.List">
							<expression tag="Math.Number" Value="0"/>
							<expression tag="Math.Number" Value="1"/>
						</expression>
					</expression>
				</expression>
				<expression tag="Symbolic.Local">
					<expression tag="Symbolic.Symbol" Name="fib"/>
				</expression>
				<expression tag="Programming.ForFromTo">
					<expression tag="Programming.Block" Description="block" Expanded="True">
						<expression tag="Symbolic.Assignment">
							<expression tag="Symbolic.Symbol" Name="fib"/>
							<expression tag="Math.Arithmetic.Addition">
								<expression tag="Symbolic.Symbol" Name="ult"/>
								<expression tag="Symbolic.Symbol" Name="pen"/>
							</expression>
						</expression>
						<expression tag="Symbolic.Assignment">
							<expression tag="List.List">
								<expression tag="Symbolic.Symbol" Name="ult"/>
								<expression tag="Symbolic.Symbol" Name="pen"/>
							</expression>
							<expression tag="List.List">
								<expression tag="Symbolic.Symbol" Name="fib"/>
								<expression tag="Symbolic.Symbol" Name="ult"/>
							</expression>
						</expression>
					</expression>
					<expression tag="Symbolic.Symbol" Name="i"/>
					<expression tag="Math.Number" Value="2"/>
					<expression tag="Symbolic.Symbol" Name="n"/>
				</expression>
				<expression tag="Symbolic.Symbol" Name="fib"/>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="List.CreateList">
			<expression tag="Symbolic.Function">
				<expression tag="Symbolic.Symbol" Name="Fibonacci iterative 3"/>
				<expression tag="List.List">
					<expression tag="Symbolic.Symbol" Name="n"/>
				</expression>
			</expression>
			<expression tag="Symbolic.Symbol" Name="n"/>
			<expression tag="Math.Arithmetic.Negative">
				<expression tag="Math.Number" Value="0"/>
			</expression>
			<expression tag="Math.Number" Value="25"/>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="1">
		<expression tag="List.List">
			<expression tag="Math.Number" Value="0"/>
			<expression tag="Math.Number" Value="1"/>
			<expression tag="Math.Number" Value="1"/>
			<expression tag="Math.Number" Value="2"/>
			<expression tag="Math.Number" Value="3"/>
			<expression tag="Math.Number" Value="5"/>
			<expression tag="Math.Number" Value="8"/>
			<expression tag="Math.Number" Value="13"/>
			<expression tag="Math.Number" Value="21"/>
			<expression tag="Math.Number" Value="34"/>
			<expression tag="Math.Number" Value="55"/>
			<expression tag="Math.Number" Value="89"/>
			<expression tag="Math.Number" Value="144"/>
			<expression tag="Math.Number" Value="233"/>
			<expression tag="Math.Number" Value="377"/>
			<expression tag="Math.Number" Value="610"/>
			<expression tag="Math.Number" Value="987"/>
			<expression tag="Math.Number" Value="1597"/>
			<expression tag="Math.Number" Value="2584"/>
			<expression tag="Math.Number" Value="4181"/>
			<expression tag="Math.Number" Value="6765"/>
			<expression tag="Math.Number" Value="10946"/>
			<expression tag="Math.Number" Value="17711"/>
			<expression tag="Math.Number" Value="28657"/>
			<expression tag="Math.Number" Value="46368"/>
			<expression tag="Math.Number" Value="75025"/>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Typesetting.MultiParagraph">
			<expression tag="Typesetting.Paragraph">
				<expression tag="Typesetting.BoldChunk">
					<expression tag="String.Text" Value="Iterative (2 variables)"/>
				</expression>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="It is"/>
				<expression tag="Symbolic.Function">
					<expression tag="String.Text" Value="O"/>
					<expression tag="List.List">
						<expression tag="String.Text" Value="n"/>
					</expression>
				</expression>
				<expression tag="String.Text" Value=", or of linear order."/>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="2">
		<expression tag="Symbolic.Assignment">
			<expression tag="Symbolic.Function">
				<expression tag="Symbolic.Symbol" Name="Fibonacci iterative 2"/>
				<expression tag="List.List">
					<expression tag="Symbolic.Symbol" Name="n"/>
				</expression>
			</expression>
			<expression tag="Programming.Block" Description="block" Expanded="True">
				<expression tag="Programming.InvertedIf">
					<expression tag="Symbolic.Return">
						<expression tag="Symbolic.Symbol" Name="n"/>
					</expression>
					<expression tag="Relation.LessOrEquals">
						<expression tag="Symbolic.Symbol" Name="n"/>
						<expression tag="Math.Number" Value="1"/>
					</expression>
				</expression>
				<expression tag="Symbolic.Local">
					<expression tag="Symbolic.Assignment">
						<expression tag="List.List">
							<expression tag="Symbolic.Symbol" Name="a"/>
							<expression tag="Symbolic.Symbol" Name="b"/>
						</expression>
						<expression tag="List.List">
							<expression tag="Math.Number" Value="0"/>
							<expression tag="Math.Number" Value="1"/>
						</expression>
					</expression>
				</expression>
				<expression tag="Programming.ForFromTo">
					<expression tag="Symbolic.Assignment">
						<expression tag="Symbolic.Symbol" Name="a"/>
						<expression tag="Math.Arithmetic.Addition">
							<expression tag="Symbolic.Assignment">
								<expression tag="Symbolic.Symbol" Name="b"/>
								<expression tag="Math.Arithmetic.Addition">
									<expression tag="Symbolic.Symbol" Name="b"/>
									<expression tag="Symbolic.Symbol" Name="a"/>
								</expression>
							</expression>
							<expression tag="Math.Arithmetic.Negative">
								<expression tag="Symbolic.Symbol" Name="a"/>
							</expression>
						</expression>
					</expression>
					<expression tag="Symbolic.Symbol" Name="i"/>
					<expression tag="Math.Number" Value="1"/>
					<expression tag="Symbolic.Symbol" Name="n"/>
				</expression>
				<expression tag="Symbolic.Symbol" Name="a"/>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="List.CreateList">
			<expression tag="Symbolic.Function">
				<expression tag="Symbolic.Symbol" Name="Fibonacci iterative 2"/>
				<expression tag="List.List">
					<expression tag="Symbolic.Symbol" Name="n"/>
				</expression>
			</expression>
			<expression tag="Symbolic.Symbol" Name="n"/>
			<expression tag="Math.Number" Value="0"/>
			<expression tag="Math.Number" Value="25"/>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="1">
		<expression tag="List.List">
			<expression tag="Math.Number" Value="0"/>
			<expression tag="Math.Number" Value="1"/>
			<expression tag="Math.Number" Value="1"/>
			<expression tag="Math.Number" Value="2"/>
			<expression tag="Math.Number" Value="3"/>
			<expression tag="Math.Number" Value="5"/>
			<expression tag="Math.Number" Value="8"/>
			<expression tag="Math.Number" Value="13"/>
			<expression tag="Math.Number" Value="21"/>
			<expression tag="Math.Number" Value="34"/>
			<expression tag="Math.Number" Value="55"/>
			<expression tag="Math.Number" Value="89"/>
			<expression tag="Math.Number" Value="144"/>
			<expression tag="Math.Number" Value="233"/>
			<expression tag="Math.Number" Value="377"/>
			<expression tag="Math.Number" Value="610"/>
			<expression tag="Math.Number" Value="987"/>
			<expression tag="Math.Number" Value="1597"/>
			<expression tag="Math.Number" Value="2584"/>
			<expression tag="Math.Number" Value="4181"/>
			<expression tag="Math.Number" Value="6765"/>
			<expression tag="Math.Number" Value="10946"/>
			<expression tag="Math.Number" Value="17711"/>
			<expression tag="Math.Number" Value="28657"/>
			<expression tag="Math.Number" Value="46368"/>
			<expression tag="Math.Number" Value="75025"/>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Typesetting.MultiParagraph">
			<expression tag="Typesetting.Paragraph">
				<expression tag="Typesetting.BoldChunk">
					<expression tag="String.Text" Value="Iterative, using a list"/>
				</expression>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="It is"/>
				<expression tag="Symbolic.Function">
					<expression tag="String.Text" Value="O"/>
					<expression tag="List.List">
						<expression tag="String.Text" Value="n"/>
					</expression>
				</expression>
				<expression tag="String.Text" Value=", or of linear order."/>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="2">
		<expression tag="Symbolic.Assignment">
			<expression tag="Symbolic.Function">
				<expression tag="Symbolic.Symbol" Name="Fibonacci iterative list"/>
				<expression tag="List.List">
					<expression tag="Symbolic.Symbol" Name="n"/>
				</expression>
			</expression>
			<expression tag="Programming.Block" Description="block" Expanded="True">
				<expression tag="Programming.InvertedIf">
					<expression tag="Symbolic.Return">
						<expression tag="Symbolic.Symbol" Name="n"/>
					</expression>
					<expression tag="Relation.LessOrEquals">
						<expression tag="Symbolic.Symbol" Name="n"/>
						<expression tag="Math.Number" Value="1"/>
					</expression>
				</expression>
				<expression tag="Symbolic.Local">
					<expression tag="Symbolic.Assignment">
						<expression tag="Symbolic.Symbol" Name="list"/>
						<expression tag="List.List">
							<expression tag="Math.Number" Value="0"/>
							<expression tag="Math.Number" Value="1"/>
						</expression>
					</expression>
				</expression>
				<expression tag="Programming.ForFromTo">
					<expression tag="Expression.Append">
						<expression tag="Symbolic.Symbol" Name="list"/>
						<expression tag="Math.Arithmetic.Addition">
							<expression tag="Expression.Child">
								<expression tag="Symbolic.Symbol" Name="list"/>
								<expression tag="Math.Arithmetic.Negative">
									<expression tag="Math.Number" Value="1"/>
								</expression>
							</expression>
							<expression tag="Expression.Child">
								<expression tag="Symbolic.Symbol" Name="list"/>
								<expression tag="Math.Arithmetic.Negative">
									<expression tag="Math.Number" Value="2"/>
								</expression>
							</expression>
						</expression>
					</expression>
					<expression tag="Symbolic.Symbol" Name="i"/>
					<expression tag="Math.Number" Value="2"/>
					<expression tag="Symbolic.Symbol" Name="n"/>
				</expression>
				<expression tag="Expression.Child">
					<expression tag="Symbolic.Symbol" Name="list"/>
					<expression tag="Math.Arithmetic.Negative">
						<expression tag="Math.Number" Value="1"/>
					</expression>
				</expression>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="List.CreateList">
			<expression tag="Symbolic.Function">
				<expression tag="Symbolic.Symbol" Name="Fibonacci iterative list"/>
				<expression tag="List.List">
					<expression tag="Symbolic.Symbol" Name="n"/>
				</expression>
			</expression>
			<expression tag="Symbolic.Symbol" Name="n"/>
			<expression tag="Math.Number" Value="0"/>
			<expression tag="Math.Number" Value="25"/>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="1">
		<expression tag="List.List">
			<expression tag="Math.Number" Value="0"/>
			<expression tag="Math.Number" Value="1"/>
			<expression tag="Math.Number" Value="1"/>
			<expression tag="Math.Number" Value="2"/>
			<expression tag="Math.Number" Value="3"/>
			<expression tag="Math.Number" Value="5"/>
			<expression tag="Math.Number" Value="8"/>
			<expression tag="Math.Number" Value="13"/>
			<expression tag="Math.Number" Value="21"/>
			<expression tag="Math.Number" Value="34"/>
			<expression tag="Math.Number" Value="55"/>
			<expression tag="Math.Number" Value="89"/>
			<expression tag="Math.Number" Value="144"/>
			<expression tag="Math.Number" Value="233"/>
			<expression tag="Math.Number" Value="377"/>
			<expression tag="Math.Number" Value="610"/>
			<expression tag="Math.Number" Value="987"/>
			<expression tag="Math.Number" Value="1597"/>
			<expression tag="Math.Number" Value="2584"/>
			<expression tag="Math.Number" Value="4181"/>
			<expression tag="Math.Number" Value="6765"/>
			<expression tag="Math.Number" Value="10946"/>
			<expression tag="Math.Number" Value="17711"/>
			<expression tag="Math.Number" Value="28657"/>
			<expression tag="Math.Number" Value="46368"/>
			<expression tag="Math.Number" Value="75025"/>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Typesetting.Paragraph">
			<expression tag="Typesetting.BoldChunk">
				<expression tag="String.Text" Value="Using matrix multiplication"/>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="2">
		<expression tag="Symbolic.Assignment">
			<expression tag="Symbolic.Function">
				<expression tag="Symbolic.Symbol" Name="Fibonacci matrix"/>
				<expression tag="List.List">
					<expression tag="Symbolic.Symbol" Name="n"/>
				</expression>
			</expression>
			<expression tag="Programming.Block" Description="block" Expanded="True">
				<expression tag="Programming.InvertedIf">
					<expression tag="Symbolic.Return">
						<expression tag="Symbolic.Symbol" Name="n"/>
					</expression>
					<expression tag="Relation.LessOrEquals">
						<expression tag="Symbolic.Symbol" Name="n"/>
						<expression tag="Math.Number" Value="1"/>
					</expression>
				</expression>
				<expression tag="Expression.Child">
					<expression tag="Math.Arithmetic.Exponentiation">
						<expression tag="List.List">
							<expression tag="List.List">
								<expression tag="Math.Number" Value="0"/>
								<expression tag="Math.Number" Value="1"/>
							</expression>
							<expression tag="List.List">
								<expression tag="Math.Number" Value="1"/>
								<expression tag="Math.Number" Value="1"/>
							</expression>
						</expression>
						<expression tag="Math.Arithmetic.Addition">
							<expression tag="Symbolic.Symbol" Name="n"/>
							<expression tag="Math.Arithmetic.Negative">
								<expression tag="Math.Number" Value="1"/>
							</expression>
						</expression>
					</expression>
					<expression tag="List.List">
						<expression tag="Math.Number" Value="2"/>
						<expression tag="Math.Number" Value="2"/>
					</expression>
				</expression>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="List.CreateList">
			<expression tag="Symbolic.Function">
				<expression tag="Symbolic.Symbol" Name="Fibonacci matrix"/>
				<expression tag="List.List">
					<expression tag="Symbolic.Symbol" Name="n"/>
				</expression>
			</expression>
			<expression tag="Symbolic.Symbol" Name="n"/>
			<expression tag="Math.Number" Value="0"/>
			<expression tag="Math.Number" Value="25"/>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="1">
		<expression tag="List.List">
			<expression tag="Math.Number" Value="0"/>
			<expression tag="Math.Number" Value="1"/>
			<expression tag="Math.Number" Value="1"/>
			<expression tag="Math.Number" Value="2"/>
			<expression tag="Math.Number" Value="3"/>
			<expression tag="Math.Number" Value="5"/>
			<expression tag="Math.Number" Value="8"/>
			<expression tag="Math.Number" Value="13"/>
			<expression tag="Math.Number" Value="21"/>
			<expression tag="Math.Number" Value="34"/>
			<expression tag="Math.Number" Value="55"/>
			<expression tag="Math.Number" Value="89"/>
			<expression tag="Math.Number" Value="144"/>
			<expression tag="Math.Number" Value="233"/>
			<expression tag="Math.Number" Value="377"/>
			<expression tag="Math.Number" Value="610"/>
			<expression tag="Math.Number" Value="987"/>
			<expression tag="Math.Number" Value="1597"/>
			<expression tag="Math.Number" Value="2584"/>
			<expression tag="Math.Number" Value="4181"/>
			<expression tag="Math.Number" Value="6765"/>
			<expression tag="Math.Number" Value="10946"/>
			<expression tag="Math.Number" Value="17711"/>
			<expression tag="Math.Number" Value="28657"/>
			<expression tag="Math.Number" Value="46368"/>
			<expression tag="Math.Number" Value="75025"/>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Typesetting.MultiParagraph">
			<expression tag="Typesetting.Paragraph">
				<expression tag="Typesetting.BoldChunk">
					<expression tag="String.Text" Value="Divide and conquer"/>
				</expression>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="It is an optimized version of the matrix multiplication algorithm, with an order of"/>
				<expression tag="Symbolic.Function">
					<expression tag="String.Text" Value="O"/>
					<expression tag="List.List">
						<expression tag="Math.Transcendental.BinaryLogarithm">
							<expression tag="String.Text" Value="n"/>
						</expression>
					</expression>
				</expression>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="2">
		<expression tag="Symbolic.Assignment">
			<expression tag="Symbolic.Function">
				<expression tag="Symbolic.Symbol" Name="Fibonacci divide&amp;conquer"/>
				<expression tag="List.List">
					<expression tag="Symbolic.Symbol" Name="n"/>
				</expression>
			</expression>
			<expression tag="Programming.Block" Description="block" Expanded="True">
				<expression tag="Programming.InvertedIf">
					<expression tag="Symbolic.Return">
						<expression tag="Symbolic.Symbol" Name="n"/>
					</expression>
					<expression tag="Relation.LessOrEquals">
						<expression tag="Symbolic.Symbol" Name="n"/>
						<expression tag="Math.Number" Value="1"/>
					</expression>
				</expression>
				<expression tag="Symbolic.Local">
					<expression tag="Symbolic.Assignment">
						<expression tag="List.List">
							<expression tag="Symbolic.Symbol" Name="i"/>
							<expression tag="Symbolic.Symbol" Name="aux1"/>
							<expression tag="Symbolic.Symbol" Name="aux2"/>
							<expression tag="Symbolic.Symbol" Name="a"/>
							<expression tag="Symbolic.Symbol" Name="b"/>
							<expression tag="Symbolic.Symbol" Name="c"/>
							<expression tag="Symbolic.Symbol" Name="d"/>
						</expression>
						<expression tag="List.List">
							<expression tag="Math.Arithmetic.Addition">
								<expression tag="Symbolic.Symbol" Name="n"/>
								<expression tag="Math.Arithmetic.Negative">
									<expression tag="Math.Number" Value="1"/>
								</expression>
							</expression>
							<expression tag="Math.Number" Value="0"/>
							<expression tag="Math.Number" Value="1"/>
							<expression tag="Math.Number" Value="1"/>
							<expression tag="Math.Number" Value="0"/>
							<expression tag="Math.Number" Value="0"/>
							<expression tag="Math.Number" Value="1"/>
						</expression>
					</expression>
				</expression>
				<expression tag="Programming.While">
					<expression tag="Relation.Greater">
						<expression tag="Symbolic.Symbol" Name="i"/>
						<expression tag="Math.Number" Value="0"/>
					</expression>
					<expression tag="Programming.Block" Description="block" Expanded="True">
						<expression tag="Programming.If">
							<expression tag="Math.Arithmetic.IsOdd">
								<expression tag="Symbolic.Symbol" Name="i"/>
							</expression>
							<expression tag="Symbolic.Assignment">
								<expression tag="List.List">
									<expression tag="Symbolic.Symbol" Name="a"/>
									<expression tag="Symbolic.Symbol" Name="b"/>
								</expression>
								<expression tag="Symbolic.Assignment">
									<expression tag="List.List">
										<expression tag="Symbolic.Symbol" Name="aux1"/>
										<expression tag="Symbolic.Symbol" Name="aux2"/>
									</expression>
									<expression tag="List.List">
										<expression tag="Math.Arithmetic.Addition">
											<expression tag="Math.Arithmetic.Multiplication">
												<expression tag="Symbolic.Symbol" Name="d"/>
												<expression tag="Symbolic.Symbol" Name="b"/>
											</expression>
											<expression tag="Math.Arithmetic.Multiplication">
												<expression tag="Symbolic.Symbol" Name="c"/>
												<expression tag="Symbolic.Symbol" Name="a"/>
											</expression>
										</expression>
										<expression tag="Math.Arithmetic.Addition">
											<expression tag="Math.Arithmetic.Multiplication">
												<expression tag="Symbolic.Symbol" Name="d"/>
												<expression tag="Math.Arithmetic.Addition">
													<expression tag="Symbolic.Symbol" Name="b"/>
													<expression tag="Symbolic.Symbol" Name="a"/>
												</expression>
											</expression>
											<expression tag="Math.Arithmetic.Multiplication">
												<expression tag="Symbolic.Symbol" Name="c"/>
												<expression tag="Symbolic.Symbol" Name="b"/>
											</expression>
										</expression>
									</expression>
								</expression>
							</expression>
						</expression>
						<expression tag="Symbolic.Assignment">
							<expression tag="List.List">
								<expression tag="Symbolic.Symbol" Name="c"/>
								<expression tag="Symbolic.Symbol" Name="d"/>
							</expression>
							<expression tag="Symbolic.Assignment">
								<expression tag="List.List">
									<expression tag="Symbolic.Symbol" Name="aux1"/>
									<expression tag="Symbolic.Symbol" Name="aux2"/>
								</expression>
								<expression tag="List.List">
									<expression tag="Math.Arithmetic.Addition">
										<expression tag="Math.Arithmetic.Exponentiation">
											<expression tag="Symbolic.Symbol" Name="c"/>
											<expression tag="Math.Number" Value="2"/>
										</expression>
										<expression tag="Math.Arithmetic.Exponentiation">
											<expression tag="Symbolic.Symbol" Name="d"/>
											<expression tag="Math.Number" Value="2"/>
										</expression>
									</expression>
									<expression tag="Math.Arithmetic.Multiplication">
										<expression tag="Symbolic.Symbol" Name="d"/>
										<expression tag="Math.Arithmetic.Addition">
											<expression tag="Math.Arithmetic.Multiplication">
												<expression tag="Math.Number" Value="2"/>
												<expression tag="Symbolic.Symbol" Name="c"/>
											</expression>
											<expression tag="Symbolic.Symbol" Name="d"/>
										</expression>
									</expression>
								</expression>
							</expression>
						</expression>
						<expression tag="Symbolic.Assignment">
							<expression tag="Symbolic.Symbol" Name="i"/>
							<expression tag="Math.Arithmetic.Floor">
								<expression tag="Math.Arithmetic.Division">
									<expression tag="Symbolic.Symbol" Name="i"/>
									<expression tag="Math.Number" Value="2"/>
								</expression>
							</expression>
						</expression>
					</expression>
				</expression>
				<expression tag="Math.Arithmetic.Addition">
					<expression tag="Symbolic.Symbol" Name="a"/>
					<expression tag="Symbolic.Symbol" Name="b"/>
				</expression>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="List.CreateList">
			<expression tag="Symbolic.Function">
				<expression tag="Symbolic.Symbol" Name="Fibonacci divide&amp;conquer"/>
				<expression tag="List.List">
					<expression tag="Symbolic.Symbol" Name="n"/>
				</expression>
			</expression>
			<expression tag="Symbolic.Symbol" Name="n"/>
			<expression tag="Math.Number" Value="0"/>
			<expression tag="Math.Number" Value="25"/>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="1">
		<expression tag="List.List">
			<expression tag="Math.Number" Value="0"/>
			<expression tag="Math.Number" Value="1"/>
			<expression tag="Math.Number" Value="1"/>
			<expression tag="Math.Number" Value="2"/>
			<expression tag="Math.Number" Value="3"/>
			<expression tag="Math.Number" Value="5"/>
			<expression tag="Math.Number" Value="8"/>
			<expression tag="Math.Number" Value="13"/>
			<expression tag="Math.Number" Value="21"/>
			<expression tag="Math.Number" Value="34"/>
			<expression tag="Math.Number" Value="55"/>
			<expression tag="Math.Number" Value="89"/>
			<expression tag="Math.Number" Value="144"/>
			<expression tag="Math.Number" Value="233"/>
			<expression tag="Math.Number" Value="377"/>
			<expression tag="Math.Number" Value="610"/>
			<expression tag="Math.Number" Value="987"/>
			<expression tag="Math.Number" Value="1597"/>
			<expression tag="Math.Number" Value="2584"/>
			<expression tag="Math.Number" Value="4181"/>
			<expression tag="Math.Number" Value="6765"/>
			<expression tag="Math.Number" Value="10946"/>
			<expression tag="Math.Number" Value="17711"/>
			<expression tag="Math.Number" Value="28657"/>
			<expression tag="Math.Number" Value="46368"/>
			<expression tag="Math.Number" Value="75025"/>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Typesetting.MultiParagraph">
			<expression tag="Typesetting.Paragraph">
				<expression tag="Typesetting.BoldChunk">
					<expression tag="String.Text" Value="Closed-form"/>
				</expression>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="It uses the direct definition:"/>
			</expression>
			<expression tag="Typesetting.Centering">
				<expression tag="Relation.Equals">
					<expression tag="Expression.Child">
						<expression tag="String.Text" Value="F"/>
						<expression tag="String.Text" Value="n"/>
					</expression>
					<expression tag="Math.Arithmetic.Division">
						<expression tag="Math.Arithmetic.Addition">
							<expression tag="Math.Arithmetic.Exponentiation">
								<expression tag="String.Text" Value="Ï†"/>
								<expression tag="String.Text" Value="n"/>
							</expression>
							<expression tag="Math.Arithmetic.Negative">
								<expression tag="Math.Arithmetic.Exponentiation">
									<expression tag="Math.Arithmetic.Addition">
										<expression tag="Math.Number" Value="1"/>
										<expression tag="Math.Arithmetic.Negative">
											<expression tag="String.Text" Value="Ï†"/>
										</expression>
									</expression>
									<expression tag="String.Text" Value="n"/>
								</expression>
							</expression>
						</expression>
						<expression tag="Math.Arithmetic.SquareRoot">
							<expression tag="Math.Number" Value="5"/>
						</expression>
					</expression>
				</expression>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="It has an order of"/>
				<expression tag="Symbolic.Function">
					<expression tag="String.Text" Value="O"/>
					<expression tag="List.List">
						<expression tag="Math.Transcendental.BinaryLogarithm">
							<expression tag="String.Text" Value="n"/>
						</expression>
					</expression>
				</expression>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="2">
		<expression tag="Symbolic.Assignment">
			<expression tag="Symbolic.Function">
				<expression tag="Symbolic.Symbol" Name="Fibonacci closed-form"/>
				<expression tag="List.List">
					<expression tag="Symbolic.Symbol" Name="x"/>
				</expression>
			</expression>
			<expression tag="Programming.Block" Description="Description" Expanded="True">
				<expression tag="Symbolic.Local">
					<expression tag="Symbolic.Assignment">
						<expression tag="Symbolic.Symbol" Name="Ï†"/>
						<expression tag="Math.Arithmetic.Division">
							<expression tag="Math.Arithmetic.Addition">
								<expression tag="Math.Number" Value="1"/>
								<expression tag="Math.Arithmetic.SquareRoot">
									<expression tag="Math.Number" Value="5"/>
								</expression>
							</expression>
							<expression tag="Math.Number" Value="2"/>
						</expression>
					</expression>
				</expression>
				<expression tag="Math.Arithmetic.Round">
					<expression tag="Math.Numeric">
						<expression tag="Math.Arithmetic.Division">
							<expression tag="Math.Arithmetic.Addition">
								<expression tag="Math.Arithmetic.Exponentiation">
									<expression tag="Symbolic.Symbol" Name="Ï†"/>
									<expression tag="Symbolic.Symbol" Name="x"/>
								</expression>
								<expression tag="Math.Arithmetic.Negative">
									<expression tag="Math.Arithmetic.Exponentiation">
										<expression tag="Math.Arithmetic.Addition">
											<expression tag="Math.Number" Value="1"/>
											<expression tag="Math.Arithmetic.Negative">
												<expression tag="Symbolic.Symbol" Name="Ï†"/>
											</expression>
										</expression>
										<expression tag="Symbolic.Symbol" Name="x"/>
									</expression>
								</expression>
							</expression>
							<expression tag="Math.Arithmetic.SquareRoot">
								<expression tag="Math.Number" Value="5"/>
							</expression>
						</expression>
					</expression>
				</expression>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="List.CreateList">
			<expression tag="Symbolic.Function">
				<expression tag="Symbolic.Symbol" Name="Fibonacci closed-form"/>
				<expression tag="List.List">
					<expression tag="Symbolic.Symbol" Name="n"/>
				</expression>
			</expression>
			<expression tag="Symbolic.Symbol" Name="n"/>
			<expression tag="Math.Number" Value="0"/>
			<expression tag="Math.Number" Value="25"/>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="1">
		<expression tag="List.List">
			<expression tag="Math.Number" Value="0"/>
			<expression tag="Math.Number" Value="1"/>
			<expression tag="Math.Number" Value="1"/>
			<expression tag="Math.Number" Value="2"/>
			<expression tag="Math.Number" Value="3"/>
			<expression tag="Math.Number" Value="5"/>
			<expression tag="Math.Number" Value="8"/>
			<expression tag="Math.Number" Value="13"/>
			<expression tag="Math.Number" Value="21"/>
			<expression tag="Math.Number" Value="34"/>
			<expression tag="Math.Number" Value="55"/>
			<expression tag="Math.Number" Value="89"/>
			<expression tag="Math.Number" Value="144"/>
			<expression tag="Math.Number" Value="233"/>
			<expression tag="Math.Number" Value="377"/>
			<expression tag="Math.Number" Value="610"/>
			<expression tag="Math.Number" Value="987"/>
			<expression tag="Math.Number" Value="1597"/>
			<expression tag="Math.Number" Value="2584"/>
			<expression tag="Math.Number" Value="4181"/>
			<expression tag="Math.Number" Value="6765"/>
			<expression tag="Math.Number" Value="10946"/>
			<expression tag="Math.Number" Value="17711"/>
			<expression tag="Math.Number" Value="28657"/>
			<expression tag="Math.Number" Value="46368"/>
			<expression tag="Math.Number" Value="75025"/>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Typesetting.Paragraph">
			<expression tag="String.Text" Value="The advantage of this method is that Fibonacci numbers can be calculated for real values, not for integers only."/>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Typesetting.Paragraph">
			<expression tag="String.Text" Value="The ratio between a Fibonacci number and its predecesor tends to the number Ï†:"/>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Chart.Line">
			<expression tag="List.CreateList">
				<expression tag="Math.Arithmetic.Division">
					<expression tag="Symbolic.Function">
						<expression tag="Symbolic.Symbol" Name="Fibonacci closed-form"/>
						<expression tag="List.List">
							<expression tag="Symbolic.Symbol" Name="n"/>
						</expression>
					</expression>
					<expression tag="Symbolic.Function">
						<expression tag="Symbolic.Symbol" Name="Fibonacci closed-form"/>
						<expression tag="List.List">
							<expression tag="Math.Arithmetic.Addition">
								<expression tag="Symbolic.Symbol" Name="n"/>
								<expression tag="Math.Arithmetic.Negative">
									<expression tag="Math.Number" Value="1"/>
								</expression>
							</expression>
						</expression>
					</expression>
				</expression>
				<expression tag="Symbolic.Symbol" Name="n"/>
				<expression tag="Math.Number" Value="2"/>
				<expression tag="Math.Number" Value="10"/>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="1">
		<expression tag="Graphics.RasterGraphics" Value=""/>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Typesetting.MultiParagraph">
			<expression tag="Typesetting.Paragraph">
				<expression tag="Typesetting.BoldChunk">
					<expression tag="String.Text" Value="See also:"/>
				</expression>
			</expression>
			<expression tag="Typesetting.BulletedList">
				<expression tag="Typesetting.Paragraph">
					<expression tag="String.Text" Value="Other"/>
					<expression tag="Internet.UniformResourceLocator" Value="/?script=articles/Rosetta_Code_examples" Description="Rosetta code"/>
					<expression tag="String.Text" Value="examples"/>
				</expression>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="Author: Laurence R. Ugalde"/>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="Last modified:"/>
				<expression tag="Time.Time" Value="1620874500000"/>
			</expression>
		</expression>
	</expression>
</expression>