<expression tag="Formulae.Script" Modules="org.formulae.typesetting,org.formulae.text.string,org.formulae.logic,org.formulae.symbolic,org.formulae.list,org.formulae.programming,org.formulae.math.arithmetic,org.formulae.expression,org.formulae.color,org.formulae.graphics.raster,org.formulae.time">
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Typesetting.MultiParagraph">
			<expression tag="Typesetting.Paragraph">
				<expression tag="Typesetting.BoldChunk">
					<expression tag="String.Text" Value="100 doors"/>
				</expression>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="This exercise shows a solution for the"/>
				<expression tag="Internet.UniformResourceLocator" Value="https://rosettacode.org/wiki/100_doors" Description="100 doors"/>
				<expression tag="String.Text" Value="problem, described in the website"/>
				<expression tag="Internet.UniformResourceLocator" Value="https://rosettacode.org/wiki/Rosetta_Code" Description="Rosetta code."/>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="Typesetting.BoldChunk">
					<expression tag="String.Text" Value="Summary of the description from Rosetta Code"/>
				</expression>
			</expression>
			<expression tag="Typesetting.BulletedList">
				<expression tag="Typesetting.Paragraph">
					<expression tag="String.Text" Value="There are 100 doors in a row that are all initially closed."/>
				</expression>
				<expression tag="Typesetting.Paragraph">
					<expression tag="String.Text" Value="You make 100 passes by the doors."/>
				</expression>
				<expression tag="Typesetting.Paragraph">
					<expression tag="String.Text" Value="The first time through, visit every door and  toggle  the door  (if the door is closed,  open it; if it is open, close it)."/>
				</expression>
				<expression tag="Typesetting.Paragraph">
					<expression tag="String.Text" Value="The second time, only visit every 2nd door (door #2, #4, #6, ...), and toggle it."/>
				</expression>
				<expression tag="Typesetting.Paragraph">
					<expression tag="String.Text" Value="The third time, visit every 3rd door   (door #3, #6, #9, ...), etc, until you only visit the 100th door."/>
				</expression>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="Answer the question:   What state are the doors in after the last pass?   Which are open, which are closed?"/>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="Typesetting.BoldChunk">
					<expression tag="String.Text" Value="Solution"/>
				</expression>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="The solution consists in having a 100 element array, initializad with"/>
				<expression tag="Logic.False"/>
				<expression tag="String.Text" Value="values. In each of the 100 rounds (controlled by a simple FOR-FROM-TO cycle), the values are flipped using a FOR-FROM-TO-STEP cycle. Finally the array is shown, using green colors for open doors, and red for closed ones. The resulting matrix is transposed in order to be shown horizontally."/>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="2">
		<expression tag="Symbolic.Assignment">
			<expression tag="Symbolic.Function">
				<expression tag="Symbolic.Symbol" Name="100 doors"/>
				<expression tag="List.List"/>
			</expression>
			<expression tag="Programming.Block" Description="block" Expanded="True">
				<expression tag="Symbolic.Local">
					<expression tag="Symbolic.Assignment">
						<expression tag="Symbolic.Symbol" Name="doors"/>
						<expression tag="List.CreateList">
							<expression tag="Logic.False"/>
							<expression tag="Math.Number" Value="100"/>
						</expression>
					</expression>
				</expression>
				<expression tag="Programming.ForFromTo">
					<expression tag="Programming.ForFromTo">
						<expression tag="Symbolic.Assignment">
							<expression tag="Expression.Child">
								<expression tag="Symbolic.Symbol" Name="doors"/>
								<expression tag="Symbolic.Symbol" Name="d"/>
							</expression>
							<expression tag="Logic.Negation">
								<expression tag="Expression.Child">
									<expression tag="Symbolic.Symbol" Name="doors"/>
									<expression tag="Symbolic.Symbol" Name="d"/>
								</expression>
							</expression>
						</expression>
						<expression tag="Symbolic.Symbol" Name="d"/>
						<expression tag="Symbolic.Symbol" Name="step"/>
						<expression tag="Math.Number" Value="100"/>
						<expression tag="Symbolic.Symbol" Name="step"/>
					</expression>
					<expression tag="Symbolic.Symbol" Name="step"/>
					<expression tag="Math.Number" Value="1"/>
					<expression tag="Math.Number" Value="100"/>
				</expression>
				<expression tag="Math.Matrix.Transpose">
					<expression tag="List.CreateList">
						<expression tag="List.List">
							<expression tag="Symbolic.Symbol" Name="i"/>
							<expression tag="Programming.Conditional">
								<expression tag="Expression.Child">
									<expression tag="Symbolic.Symbol" Name="doors"/>
									<expression tag="Symbolic.Symbol" Name="i"/>
								</expression>
								<expression tag="Color.Color" Red="0" Green="1" Blue="0" Alpha="1"/>
								<expression tag="Color.Color" Red="1" Green="0" Blue="0" Alpha="1"/>
							</expression>
						</expression>
						<expression tag="Symbolic.Symbol" Name="i"/>
						<expression tag="Math.Number" Value="1"/>
						<expression tag="Math.Number" Value="100"/>
					</expression>
				</expression>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Symbolic.Function">
			<expression tag="Symbolic.Symbol" Name="100 doors"/>
			<expression tag="List.List"/>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="1">
		<expression tag="List.List">
			<expression tag="List.List">
				<expression tag="Math.Number" Value="1"/>
				<expression tag="Math.Number" Value="2"/>
				<expression tag="Math.Number" Value="3"/>
				<expression tag="Math.Number" Value="4"/>
				<expression tag="Math.Number" Value="5"/>
				<expression tag="Math.Number" Value="6"/>
				<expression tag="Math.Number" Value="7"/>
				<expression tag="Math.Number" Value="8"/>
				<expression tag="Math.Number" Value="9"/>
				<expression tag="Math.Number" Value="10"/>
				<expression tag="Math.Number" Value="11"/>
				<expression tag="Math.Number" Value="12"/>
				<expression tag="Math.Number" Value="13"/>
				<expression tag="Math.Number" Value="14"/>
				<expression tag="Math.Number" Value="15"/>
				<expression tag="Math.Number" Value="16"/>
				<expression tag="Math.Number" Value="17"/>
				<expression tag="Math.Number" Value="18"/>
				<expression tag="Math.Number" Value="19"/>
				<expression tag="Math.Number" Value="20"/>
				<expression tag="Math.Number" Value="21"/>
				<expression tag="Math.Number" Value="22"/>
				<expression tag="Math.Number" Value="23"/>
				<expression tag="Math.Number" Value="24"/>
				<expression tag="Math.Number" Value="25"/>
				<expression tag="Math.Number" Value="26"/>
				<expression tag="Math.Number" Value="27"/>
				<expression tag="Math.Number" Value="28"/>
				<expression tag="Math.Number" Value="29"/>
				<expression tag="Math.Number" Value="30"/>
				<expression tag="Math.Number" Value="31"/>
				<expression tag="Math.Number" Value="32"/>
				<expression tag="Math.Number" Value="33"/>
				<expression tag="Math.Number" Value="34"/>
				<expression tag="Math.Number" Value="35"/>
				<expression tag="Math.Number" Value="36"/>
				<expression tag="Math.Number" Value="37"/>
				<expression tag="Math.Number" Value="38"/>
				<expression tag="Math.Number" Value="39"/>
				<expression tag="Math.Number" Value="40"/>
				<expression tag="Math.Number" Value="41"/>
				<expression tag="Math.Number" Value="42"/>
				<expression tag="Math.Number" Value="43"/>
				<expression tag="Math.Number" Value="44"/>
				<expression tag="Math.Number" Value="45"/>
				<expression tag="Math.Number" Value="46"/>
				<expression tag="Math.Number" Value="47"/>
				<expression tag="Math.Number" Value="48"/>
				<expression tag="Math.Number" Value="49"/>
				<expression tag="Math.Number" Value="50"/>
				<expression tag="Math.Number" Value="51"/>
				<expression tag="Math.Number" Value="52"/>
				<expression tag="Math.Number" Value="53"/>
				<expression tag="Math.Number" Value="54"/>
				<expression tag="Math.Number" Value="55"/>
				<expression tag="Math.Number" Value="56"/>
				<expression tag="Math.Number" Value="57"/>
				<expression tag="Math.Number" Value="58"/>
				<expression tag="Math.Number" Value="59"/>
				<expression tag="Math.Number" Value="60"/>
				<expression tag="Math.Number" Value="61"/>
				<expression tag="Math.Number" Value="62"/>
				<expression tag="Math.Number" Value="63"/>
				<expression tag="Math.Number" Value="64"/>
				<expression tag="Math.Number" Value="65"/>
				<expression tag="Math.Number" Value="66"/>
				<expression tag="Math.Number" Value="67"/>
				<expression tag="Math.Number" Value="68"/>
				<expression tag="Math.Number" Value="69"/>
				<expression tag="Math.Number" Value="70"/>
				<expression tag="Math.Number" Value="71"/>
				<expression tag="Math.Number" Value="72"/>
				<expression tag="Math.Number" Value="73"/>
				<expression tag="Math.Number" Value="74"/>
				<expression tag="Math.Number" Value="75"/>
				<expression tag="Math.Number" Value="76"/>
				<expression tag="Math.Number" Value="77"/>
				<expression tag="Math.Number" Value="78"/>
				<expression tag="Math.Number" Value="79"/>
				<expression tag="Math.Number" Value="80"/>
				<expression tag="Math.Number" Value="81"/>
				<expression tag="Math.Number" Value="82"/>
				<expression tag="Math.Number" Value="83"/>
				<expression tag="Math.Number" Value="84"/>
				<expression tag="Math.Number" Value="85"/>
				<expression tag="Math.Number" Value="86"/>
				<expression tag="Math.Number" Value="87"/>
				<expression tag="Math.Number" Value="88"/>
				<expression tag="Math.Number" Value="89"/>
				<expression tag="Math.Number" Value="90"/>
				<expression tag="Math.Number" Value="91"/>
				<expression tag="Math.Number" Value="92"/>
				<expression tag="Math.Number" Value="93"/>
				<expression tag="Math.Number" Value="94"/>
				<expression tag="Math.Number" Value="95"/>
				<expression tag="Math.Number" Value="96"/>
				<expression tag="Math.Number" Value="97"/>
				<expression tag="Math.Number" Value="98"/>
				<expression tag="Math.Number" Value="99"/>
				<expression tag="Math.Number" Value="100"/>
			</expression>
			<expression tag="List.List">
				<expression tag="Color.Color" Red="0" Green="1" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="1" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="1" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="1" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="1" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="1" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="1" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="1" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="1" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="1" Green="0" Blue="0" Alpha="1"/>
				<expression tag="Color.Color" Red="0" Green="1" Blue="0" Alpha="1"/>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Typesetting.MultiParagraph">
			<expression tag="Typesetting.Paragraph">
				<expression tag="Typesetting.BoldChunk">
					<expression tag="String.Text" Value="Improvement"/>
				</expression>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="It includes:"/>
			</expression>
			<expression tag="Typesetting.BulletedList">
				<expression tag="Typesetting.Paragraph">
					<expression tag="String.Text" Value="Graphic output, in order to show evolution in time."/>
				</expression>
				<expression tag="Typesetting.Paragraph">
					<expression tag="String.Text" Value="Arbitrary number of doors."/>
				</expression>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Typesetting.Paragraph">
			<expression tag="String.Text" Value="The following function accepts two parameters, the number of doors and the size (in pixels) of the representation of a door. A door is a rectangle of dimensions size x size pixels. The resulting graphics is the number of doors multiplied by the size of representation. The n-th row represents the sate in the n-th round."/>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="2">
		<expression tag="Symbolic.Assignment">
			<expression tag="Symbolic.Function">
				<expression tag="Symbolic.Symbol" Name="Graphic doors"/>
				<expression tag="List.List">
					<expression tag="Symbolic.Symbol" Name="n"/>
					<expression tag="Symbolic.Symbol" Name="size"/>
				</expression>
			</expression>
			<expression tag="Programming.Block" Description="block" Expanded="True">
				<expression tag="Symbolic.Local">
					<expression tag="Symbolic.Assignment">
						<expression tag="Symbolic.Symbol" Name="doors"/>
						<expression tag="List.CreateList">
							<expression tag="Logic.False"/>
							<expression tag="Symbolic.Symbol" Name="n"/>
						</expression>
					</expression>
				</expression>
				<expression tag="Symbolic.Local">
					<expression tag="Symbolic.Assignment">
						<expression tag="Symbolic.Symbol" Name="g"/>
						<expression tag="Graphics.CreateRasterGraphics">
							<expression tag="Math.Arithmetic.Multiplication">
								<expression tag="Symbolic.Symbol" Name="n"/>
								<expression tag="Symbolic.Symbol" Name="size"/>
							</expression>
							<expression tag="Math.Arithmetic.Multiplication">
								<expression tag="Symbolic.Symbol" Name="n"/>
								<expression tag="Symbolic.Symbol" Name="size"/>
							</expression>
							<expression tag="Color.Color" Red="1" Green="0" Blue="0" Alpha="1"/>
						</expression>
					</expression>
				</expression>
				<expression tag="Graphics.SetColor">
					<expression tag="Symbolic.Symbol" Name="g"/>
					<expression tag="Color.Color" Red="0" Green="1" Blue="0" Alpha="1"/>
				</expression>
				<expression tag="Programming.ForFromTo">
					<expression tag="Programming.Block" Description="block" Expanded="True">
						<expression tag="Programming.ForFromTo">
							<expression tag="Symbolic.Assignment">
								<expression tag="Expression.Child">
									<expression tag="Symbolic.Symbol" Name="doors"/>
									<expression tag="Symbolic.Symbol" Name="d"/>
								</expression>
								<expression tag="Logic.Negation">
									<expression tag="Expression.Child">
										<expression tag="Symbolic.Symbol" Name="doors"/>
										<expression tag="Symbolic.Symbol" Name="d"/>
									</expression>
								</expression>
							</expression>
							<expression tag="Symbolic.Symbol" Name="d"/>
							<expression tag="Symbolic.Symbol" Name="step"/>
							<expression tag="Symbolic.Symbol" Name="n"/>
							<expression tag="Symbolic.Symbol" Name="step"/>
						</expression>
						<expression tag="Programming.ForFromTo">
							<expression tag="Programming.InvertedIf">
								<expression tag="Graphics.FillRectanglePosSize">
									<expression tag="Symbolic.Symbol" Name="g"/>
									<expression tag="Math.Arithmetic.Multiplication">
										<expression tag="Symbolic.Symbol" Name="size"/>
										<expression tag="Math.Arithmetic.Addition">
											<expression tag="Symbolic.Symbol" Name="x"/>
											<expression tag="Math.Arithmetic.Negative">
												<expression tag="Math.Number" Value="1"/>
											</expression>
										</expression>
									</expression>
									<expression tag="Math.Arithmetic.Multiplication">
										<expression tag="Symbolic.Symbol" Name="size"/>
										<expression tag="Math.Arithmetic.Addition">
											<expression tag="Symbolic.Symbol" Name="step"/>
											<expression tag="Math.Arithmetic.Negative">
												<expression tag="Math.Number" Value="1"/>
											</expression>
										</expression>
									</expression>
									<expression tag="Symbolic.Symbol" Name="size"/>
									<expression tag="Symbolic.Symbol" Name="size"/>
								</expression>
								<expression tag="Expression.Child">
									<expression tag="Symbolic.Symbol" Name="doors"/>
									<expression tag="Symbolic.Symbol" Name="x"/>
								</expression>
							</expression>
							<expression tag="Symbolic.Symbol" Name="x"/>
							<expression tag="Math.Number" Value="1"/>
							<expression tag="Symbolic.Symbol" Name="n"/>
						</expression>
					</expression>
					<expression tag="Symbolic.Symbol" Name="step"/>
					<expression tag="Math.Number" Value="1"/>
					<expression tag="Symbolic.Symbol" Name="n"/>
				</expression>
				<expression tag="Symbolic.Symbol" Name="g"/>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Typesetting.Paragraph">
			<expression tag="String.Text" Value="100 doors, each door is 3x3 pixels:"/>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Symbolic.Function">
			<expression tag="Symbolic.Symbol" Name="Graphic doors"/>
			<expression tag="List.List">
				<expression tag="Math.Number" Value="100"/>
				<expression tag="Math.Number" Value="3"/>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="1">
		<expression tag="Graphics.RasterGraphics" Value="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"/>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Typesetting.Paragraph">
			<expression tag="String.Text" Value="300 doors, each door is 1x1 pixel:"/>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Symbolic.Function">
			<expression tag="Symbolic.Symbol" Name="Graphic doors"/>
			<expression tag="List.List">
				<expression tag="Math.Number" Value="300"/>
				<expression tag="Math.Number" Value="1"/>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="1">
		<expression tag="Graphics.RasterGraphics" Value=""/>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="String.Text" Value="500 doors, each door is 1x1 pixel:"/>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Symbolic.Function">
			<expression tag="Symbolic.Symbol" Name="Graphic doors"/>
			<expression tag="List.List">
				<expression tag="Math.Number" Value="500"/>
				<expression tag="Math.Number" Value="1"/>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="1">
		<expression tag="Graphics.RasterGraphics" Value=""/>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Typesetting.MultiParagraph">
			<expression tag="Typesetting.Paragraph">
				<expression tag="Typesetting.BoldChunk">
					<expression tag="String.Text" Value="See also:"/>
				</expression>
			</expression>
			<expression tag="Typesetting.BulletedList">
				<expression tag="Typesetting.Paragraph">
					<expression tag="String.Text" Value="Other"/>
					<expression tag="Internet.UniformResourceLocator" Value="/?script=articles/Counterintuitive" Description="counterintuitive"/>
					<expression tag="String.Text" Value="examples"/>
				</expression>
				<expression tag="Typesetting.Paragraph">
					<expression tag="String.Text" Value="Other"/>
					<expression tag="Internet.UniformResourceLocator" Value="/?script=articles/Rosetta_Code_examples" Description="Rosetta code"/>
					<expression tag="String.Text" Value="examples"/>
				</expression>
				<expression tag="Typesetting.Paragraph">
					<expression tag="String.Text" Value="Other"/>
					<expression tag="Internet.UniformResourceLocator" Value="/?script=articles/Graphics_examples" Description="graphics"/>
					<expression tag="String.Text" Value="examples"/>
				</expression>
				<expression tag="Typesetting.Paragraph">
					<expression tag="String.Text" Value="Other"/>
					<expression tag="Internet.UniformResourceLocator" Value="/?script=articles/Color_examples" Description="color"/>
					<expression tag="String.Text" Value="examples"/>
				</expression>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="Author: Laurence R. Ugalde"/>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="Last modified:"/>
				<expression tag="Time.Time" Value="1621711380000"/>
			</expression>
		</expression>
	</expression>
</expression>