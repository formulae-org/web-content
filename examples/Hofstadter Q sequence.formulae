<expression tag="Formulae.Script" Modules="org.formulae.typesetting,org.formulae.text.string,org.formulae.visualization,org.formulae.symbolic,org.formulae.list,org.formulae.math.arithmetic,org.formulae.programming,org.formulae.expression,org.formulae.chart,org.formulae.graphics.raster,org.formulae.relation,org.formulae.time">
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Typesetting.MultiParagraph">
			<expression tag="Typesetting.Paragraph">
				<expression tag="Typesetting.BoldChunk">
					<expression tag="String.Text" Value="Hofstadter Q sequence"/>
				</expression>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="The"/>
				<expression tag="Internet.UniformResourceLocator" Value="https://en.wikipedia.org/wiki/Hofstadter_sequence#Hofstadter_Q_sequence" Description="Hofstadter Q sequence"/>
				<expression tag="String.Text" Value="is defined as follows:"/>
			</expression>
			<expression tag="Typesetting.Centering">
				<expression tag="Visualization.VerticalArray">
					<expression tag="Visualization.HorizontalArray">
						<expression tag="Symbolic.Function">
							<expression tag="String.Text" Value="Q"/>
							<expression tag="List.List">
								<expression tag="Math.Number" Value="1"/>
							</expression>
						</expression>
						<expression tag="String.Text" Value="="/>
						<expression tag="Symbolic.Function">
							<expression tag="String.Text" Value="Q"/>
							<expression tag="List.List">
								<expression tag="Math.Number" Value="2"/>
							</expression>
						</expression>
						<expression tag="String.Text" Value="="/>
						<expression tag="Math.Number" Value="1"/>
					</expression>
					<expression tag="Visualization.HorizontalArray">
						<expression tag="Symbolic.Function">
							<expression tag="String.Text" Value="Q"/>
							<expression tag="List.List">
								<expression tag="String.Text" Value="n"/>
							</expression>
						</expression>
						<expression tag="String.Text" Value="="/>
						<expression tag="Math.Arithmetic.Addition">
							<expression tag="Symbolic.Function">
								<expression tag="String.Text" Value="Q"/>
								<expression tag="List.List">
									<expression tag="Math.Arithmetic.Addition">
										<expression tag="String.Text" Value="n"/>
										<expression tag="Math.Arithmetic.Negative">
											<expression tag="Symbolic.Function">
												<expression tag="String.Text" Value="Q"/>
												<expression tag="List.List">
													<expression tag="Math.Arithmetic.Addition">
														<expression tag="String.Text" Value="n"/>
														<expression tag="Math.Arithmetic.Negative">
															<expression tag="Math.Number" Value="1"/>
														</expression>
													</expression>
												</expression>
											</expression>
										</expression>
									</expression>
								</expression>
							</expression>
							<expression tag="Symbolic.Function">
								<expression tag="String.Text" Value="Q"/>
								<expression tag="List.List">
									<expression tag="Math.Arithmetic.Addition">
										<expression tag="String.Text" Value="n"/>
										<expression tag="Math.Arithmetic.Negative">
											<expression tag="Symbolic.Function">
												<expression tag="String.Text" Value="Q"/>
												<expression tag="List.List">
													<expression tag="Math.Arithmetic.Addition">
														<expression tag="String.Text" Value="n"/>
														<expression tag="Math.Arithmetic.Negative">
															<expression tag="Math.Number" Value="2"/>
														</expression>
													</expression>
												</expression>
											</expression>
										</expression>
									</expression>
								</expression>
							</expression>
						</expression>
					</expression>
				</expression>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="The first few terms of the sequence are:"/>
			</expression>
			<expression tag="Typesetting.Centering">
				<expression tag="List.List">
					<expression tag="Math.Number" Value="1"/>
					<expression tag="Math.Number" Value="1"/>
					<expression tag="Math.Number" Value="2"/>
					<expression tag="Math.Number" Value="3"/>
					<expression tag="Math.Number" Value="3"/>
					<expression tag="Math.Number" Value="4"/>
					<expression tag="Math.Number" Value="5"/>
					<expression tag="Math.Number" Value="5"/>
					<expression tag="Math.Number" Value="6"/>
					<expression tag="Math.Number" Value="6"/>
					<expression tag="Math.Number" Value="6"/>
					<expression tag="Math.Number" Value="8"/>
					<expression tag="Math.Number" Value="8"/>
					<expression tag="Math.Number" Value="8"/>
					<expression tag="Math.Number" Value="10"/>
					<expression tag="Math.Number" Value="9"/>
					<expression tag="Math.Number" Value="10"/>
					<expression tag="Math.Number" Value="11"/>
					<expression tag="Math.Number" Value="11"/>
					<expression tag="Math.Number" Value="12"/>
				</expression>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="(Sequence"/>
				<expression tag="Internet.UniformResourceLocator" Value="https://oeis.org/A005185" Description="A005185"/>
				<expression tag="String.Text" Value="in the"/>
				<expression tag="Internet.UniformResourceLocator" Value="https://en.wikipedia.org/wiki/On-Line_Encyclopedia_of_Integer_Sequences" Description="OEIS"/>
				<expression tag="String.Text" Value=")."/>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="Hofstadter named the terms of the sequence &quot;Q numbers&quot;; thus the Q number of 6 is 4. The presentation of the Q sequence in Hofstadter's book is actually the first known mention of a meta-Fibonacci sequence in literature."/>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="In this script is shown an implementation of the Hofstadter Q sequence."/>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="This exercise is also a solution for the"/>
				<expression tag="Internet.UniformResourceLocator" Value="https://rosettacode.org/wiki/Hofstadter_Q_sequence" Description="Hofstadter Q sequence"/>
				<expression tag="String.Text" Value="problem, described in the website"/>
				<expression tag="Internet.UniformResourceLocator" Value="https://rosettacode.org/wiki/Rosetta_Code" Description="Rosetta code."/>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="Typesetting.BoldChunk">
					<expression tag="String.Text" Value="Solution"/>
				</expression>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="The following function calculate the given number of terms of the Hofstadter Q sequence:"/>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="2">
		<expression tag="Symbolic.Assignment">
			<expression tag="Symbolic.Function">
				<expression tag="Symbolic.Symbol" Name="Q"/>
				<expression tag="List.List">
					<expression tag="Symbolic.Symbol" Name="n"/>
				</expression>
			</expression>
			<expression tag="Programming.Block" Description="block" Expanded="True">
				<expression tag="Symbolic.Local">
					<expression tag="Symbolic.Assignment">
						<expression tag="Symbolic.Symbol" Name="list"/>
						<expression tag="List.List">
							<expression tag="Math.Number" Value="1"/>
							<expression tag="Math.Number" Value="1"/>
						</expression>
					</expression>
				</expression>
				<expression tag="Programming.ForFromTo">
					<expression tag="Expression.Append">
						<expression tag="Symbolic.Symbol" Name="list"/>
						<expression tag="Math.Arithmetic.Addition">
							<expression tag="Expression.Child">
								<expression tag="Symbolic.Symbol" Name="list"/>
								<expression tag="Math.Arithmetic.Addition">
									<expression tag="Symbolic.Symbol" Name="i"/>
									<expression tag="Math.Arithmetic.Negative">
										<expression tag="Expression.Child">
											<expression tag="Symbolic.Symbol" Name="list"/>
											<expression tag="Math.Arithmetic.Addition">
												<expression tag="Symbolic.Symbol" Name="i"/>
												<expression tag="Math.Arithmetic.Negative">
													<expression tag="Math.Number" Value="1"/>
												</expression>
											</expression>
										</expression>
									</expression>
								</expression>
							</expression>
							<expression tag="Expression.Child">
								<expression tag="Symbolic.Symbol" Name="list"/>
								<expression tag="Math.Arithmetic.Addition">
									<expression tag="Symbolic.Symbol" Name="i"/>
									<expression tag="Math.Arithmetic.Negative">
										<expression tag="Expression.Child">
											<expression tag="Symbolic.Symbol" Name="list"/>
											<expression tag="Math.Arithmetic.Addition">
												<expression tag="Symbolic.Symbol" Name="i"/>
												<expression tag="Math.Arithmetic.Negative">
													<expression tag="Math.Number" Value="2"/>
												</expression>
											</expression>
										</expression>
									</expression>
								</expression>
							</expression>
						</expression>
					</expression>
					<expression tag="Symbolic.Symbol" Name="i"/>
					<expression tag="Math.Number" Value="3"/>
					<expression tag="Symbolic.Symbol" Name="n"/>
				</expression>
				<expression tag="Symbolic.Symbol" Name="list"/>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Symbolic.Function">
			<expression tag="Symbolic.Symbol" Name="Q"/>
			<expression tag="List.List">
				<expression tag="Math.Number" Value="20"/>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="1">
		<expression tag="List.List">
			<expression tag="Math.Number" Value="1"/>
			<expression tag="Math.Number" Value="1"/>
			<expression tag="Math.Number" Value="2"/>
			<expression tag="Math.Number" Value="3"/>
			<expression tag="Math.Number" Value="3"/>
			<expression tag="Math.Number" Value="4"/>
			<expression tag="Math.Number" Value="5"/>
			<expression tag="Math.Number" Value="5"/>
			<expression tag="Math.Number" Value="6"/>
			<expression tag="Math.Number" Value="6"/>
			<expression tag="Math.Number" Value="6"/>
			<expression tag="Math.Number" Value="8"/>
			<expression tag="Math.Number" Value="8"/>
			<expression tag="Math.Number" Value="8"/>
			<expression tag="Math.Number" Value="10"/>
			<expression tag="Math.Number" Value="9"/>
			<expression tag="Math.Number" Value="10"/>
			<expression tag="Math.Number" Value="11"/>
			<expression tag="Math.Number" Value="11"/>
			<expression tag="Math.Number" Value="12"/>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Chart.Line">
			<expression tag="Symbolic.Function">
				<expression tag="Symbolic.Symbol" Name="Q"/>
				<expression tag="List.List">
					<expression tag="Math.Number" Value="1000"/>
				</expression>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="1">
		<expression tag="Graphics.RasterGraphics" Value=""/>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Typesetting.Paragraph">
			<expression tag="Typesetting.BoldChunk">
				<expression tag="String.Text" Value="Test case 1 (from Rosetta code). Confirm and display that the 1000th term is 502"/>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Expression.Child">
			<expression tag="Symbolic.Function">
				<expression tag="Symbolic.Symbol" Name="Q"/>
				<expression tag="List.List">
					<expression tag="Math.Number" Value="1000"/>
				</expression>
			</expression>
			<expression tag="Math.Arithmetic.Negative">
				<expression tag="Math.Number" Value="1"/>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="1">
		<expression tag="Math.Number" Value="502"/>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Typesetting.Paragraph">
			<expression tag="Typesetting.BoldChunk">
				<expression tag="String.Text" Value="Test case 2 (from Rosetta code). Count and display how many times a member of the sequence is less than its preceding term for terms up to and including the 100,000th term."/>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Programming.Block" Description="block" Expanded="True">
			<expression tag="Symbolic.Local">
				<expression tag="Symbolic.Assignment">
					<expression tag="Symbolic.Symbol" Name="c"/>
					<expression tag="Math.Number" Value="0"/>
				</expression>
			</expression>
			<expression tag="Programming.ForFromTo">
				<expression tag="Programming.InvertedIf">
					<expression tag="Symbolic.Assignment">
						<expression tag="Symbolic.Symbol" Name="c"/>
						<expression tag="Math.Arithmetic.Addition">
							<expression tag="Symbolic.Symbol" Name="c"/>
							<expression tag="Math.Number" Value="1"/>
						</expression>
					</expression>
					<expression tag="Relation.Less">
						<expression tag="Expression.Child">
							<expression tag="Symbolic.Symbol" Name="x"/>
							<expression tag="Symbolic.Symbol" Name="t"/>
						</expression>
						<expression tag="Expression.Child">
							<expression tag="Symbolic.Symbol" Name="x"/>
							<expression tag="Math.Arithmetic.Addition">
								<expression tag="Symbolic.Symbol" Name="t"/>
								<expression tag="Math.Arithmetic.Negative">
									<expression tag="Math.Number" Value="1"/>
								</expression>
							</expression>
						</expression>
					</expression>
				</expression>
				<expression tag="Symbolic.Symbol" Name="t"/>
				<expression tag="Math.Number" Value="2"/>
				<expression tag="Math.Number" Value="100000"/>
			</expression>
			<expression tag="Symbolic.Symbol" Name="c"/>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="1">
		<expression tag="Math.Number" Value="49798"/>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Typesetting.MultiParagraph">
			<expression tag="Typesetting.Paragraph">
				<expression tag="Typesetting.BoldChunk">
					<expression tag="String.Text" Value="See also:"/>
				</expression>
			</expression>
			<expression tag="Typesetting.BulletedList">
				<expression tag="Typesetting.Paragraph">
					<expression tag="String.Text" Value="Other"/>
					<expression tag="Internet.UniformResourceLocator" Value="/?script=articles/Rosetta_Code_examples" Description="Rosetta code"/>
					<expression tag="String.Text" Value="examples"/>
				</expression>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="Author: Laurence R. Ugalde"/>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="Last modified:"/>
				<expression tag="Time.Time" Value="1621121040000"/>
			</expression>
		</expression>
	</expression>
</expression>