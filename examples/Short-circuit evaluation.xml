<expression tag="Formulae.Script"><expression tag="Formulae.Script.Row" type="0"><expression tag="Typesetting.MultiParagraph"><expression tag="Typesetting.Paragraph"><expression tag="Typesetting.BoldChunk"><expression tag="String.Text" Value="Short-circuit evaluation"/></expression></expression><expression tag="Typesetting.Paragraph"><expression tag="Internet.UniformResourceLocator" Value="https://en.wikipedia.org/wiki/Short-circuit_evaluation" Description="Short-circuit evaluation,"/><expression tag="String.Text" Value="minimal evaluation, or McCarthy evaluation (after John McCarthy) is the semantics of some Boolean operators in some programming languages in which the second argument is executed or evaluated only if the first argument does not suffice to determine the value of the expression: when the first argument of the AND function evaluates to"/><expression tag="Logic.False"/><expression tag="String.Text" Value=", the overall value must be"/><expression tag="Logic.False"/><expression tag="String.Text" Value="; and when the first argument of the OR function evaluates to"/><expression tag="Logic.True"/><expression tag="String.Text" Value=", the overall value must be"/><expression tag="Logic.True"/><expression tag="String.Text" Value="."/></expression><expression tag="Typesetting.Paragraph"><expression tag="String.Text" Value="In this script, it will be shown the short-circuit evaluation."/></expression><expression tag="Typesetting.Paragraph"><expression tag="String.Text" Value="This is also a solution for the"/><expression tag="Internet.UniformResourceLocator" Value="https://rosettacode.org/wiki/Short-circuit_evaluation" Description="Short-circuit evaluation"/><expression tag="String.Text" Value="exercise, described in the website"/><expression tag="Internet.UniformResourceLocator" Value="https://rosettacode.org/wiki/Rosetta_Code" Description="Rosetta code."/></expression><expression tag="Typesetting.Paragraph"><expression tag="Typesetting.BoldChunk"><expression tag="String.Text" Value="Answer"/></expression></expression></expression></expression><expression tag="Formulae.Script.Row" type="0"><expression tag="Programming.Block" Description="block" Expanded="True"><expression tag="Symbolic.Local"><expression tag="Symbolic.Symbol" Name="list"/></expression><expression tag="Symbolic.Local"><expression tag="Symbolic.Assignment"><expression tag="Symbolic.Function"><expression tag="Symbolic.Symbol" Name="a"/><expression tag="List.List"><expression tag="Symbolic.Symbol" Name="v"/></expression></expression><expression tag="Programming.Block" Description="block" Expanded="True"><expression tag="Expression.Append"><expression tag="Symbolic.Symbol" Name="list"/><expression tag="String.String" Value="A was called"/></expression><expression tag="Symbolic.Symbol" Name="v"/></expression></expression></expression><expression tag="Symbolic.Local"><expression tag="Symbolic.Assignment"><expression tag="Symbolic.Function"><expression tag="Symbolic.Symbol" Name="b"/><expression tag="List.List"><expression tag="Symbolic.Symbol" Name="v"/></expression></expression><expression tag="Programming.Block" Description="block" Expanded="True"><expression tag="Expression.Append"><expression tag="Symbolic.Symbol" Name="list"/><expression tag="String.String" Value="B was called"/></expression><expression tag="Symbolic.Symbol" Name="v"/></expression></expression></expression><expression tag="List.CreateList"><expression tag="List.List"><expression tag="Symbolic.Symbol" Name="x"/><expression tag="Symbolic.Symbol" Name="y"/><expression tag="List.List"><expression tag="String.String" Value="Conjunction"/><expression tag="Programming.Block" Description="block" Expanded="True"><expression tag="Symbolic.Assignment"><expression tag="Symbolic.Symbol" Name="list"/><expression tag="List.List"/></expression><expression tag="Logic.Conjunction"><expression tag="Symbolic.Function"><expression tag="Symbolic.Symbol" Name="a"/><expression tag="List.List"><expression tag="Symbolic.Symbol" Name="x"/></expression></expression><expression tag="Symbolic.Function"><expression tag="Symbolic.Symbol" Name="b"/><expression tag="List.List"><expression tag="Symbolic.Symbol" Name="y"/></expression></expression></expression></expression><expression tag="Symbolic.Symbol" Name="list"/></expression><expression tag="List.List"><expression tag="String.String" Value="Disjunction"/><expression tag="Programming.Block" Description="block" Expanded="True"><expression tag="Symbolic.Assignment"><expression tag="Symbolic.Symbol" Name="list"/><expression tag="List.List"/></expression><expression tag="Logic.Disjunction"><expression tag="Symbolic.Function"><expression tag="Symbolic.Symbol" Name="a"/><expression tag="List.List"><expression tag="Symbolic.Symbol" Name="x"/></expression></expression><expression tag="Symbolic.Function"><expression tag="Symbolic.Symbol" Name="b"/><expression tag="List.List"><expression tag="Symbolic.Symbol" Name="y"/></expression></expression></expression></expression><expression tag="Symbolic.Symbol" Name="list"/></expression></expression><expression tag="List.List"><expression tag="Symbolic.Symbol" Name="x"/><expression tag="Symbolic.Symbol" Name="y"/></expression><expression tag="List.CartesianExponentiation"><expression tag="List.List"><expression tag="Logic.True"/><expression tag="Logic.False"/></expression><expression tag="Math.Number" Value="2"/></expression></expression></expression></expression><expression tag="Formulae.Script.Row" type="1"><expression tag="List.List"><expression tag="List.List"><expression tag="Logic.True"/><expression tag="Logic.True"/><expression tag="List.List"><expression tag="String.String" Value="Conjunction"/><expression tag="Logic.True"/><expression tag="List.List"><expression tag="String.String" Value="A was called"/><expression tag="String.String" Value="B was called"/></expression></expression><expression tag="List.List"><expression tag="String.String" Value="Disjunction"/><expression tag="Logic.True"/><expression tag="List.List"><expression tag="String.String" Value="A was called"/></expression></expression></expression><expression tag="List.List"><expression tag="Logic.True"/><expression tag="Logic.False"/><expression tag="List.List"><expression tag="String.String" Value="Conjunction"/><expression tag="Logic.False"/><expression tag="List.List"><expression tag="String.String" Value="A was called"/><expression tag="String.String" Value="B was called"/></expression></expression><expression tag="List.List"><expression tag="String.String" Value="Disjunction"/><expression tag="Logic.True"/><expression tag="List.List"><expression tag="String.String" Value="A was called"/></expression></expression></expression><expression tag="List.List"><expression tag="Logic.False"/><expression tag="Logic.True"/><expression tag="List.List"><expression tag="String.String" Value="Conjunction"/><expression tag="Logic.False"/><expression tag="List.List"><expression tag="String.String" Value="A was called"/></expression></expression><expression tag="List.List"><expression tag="String.String" Value="Disjunction"/><expression tag="Logic.True"/><expression tag="List.List"><expression tag="String.String" Value="A was called"/><expression tag="String.String" Value="B was called"/></expression></expression></expression><expression tag="List.List"><expression tag="Logic.False"/><expression tag="Logic.False"/><expression tag="List.List"><expression tag="String.String" Value="Conjunction"/><expression tag="Logic.False"/><expression tag="List.List"><expression tag="String.String" Value="A was called"/></expression></expression><expression tag="List.List"><expression tag="String.String" Value="Disjunction"/><expression tag="Logic.False"/><expression tag="List.List"><expression tag="String.String" Value="A was called"/><expression tag="String.String" Value="B was called"/></expression></expression></expression></expression></expression><expression tag="Formulae.Script.Row" type="0"><expression tag="Typesetting.MultiParagraph"><expression tag="Typesetting.Paragraph"><expression tag="Typesetting.BoldChunk"><expression tag="String.Text" Value="See also:"/></expression></expression><expression tag="Typesetting.BulletedList"><expression tag="Typesetting.Paragraph"><expression tag="String.Text" Value="Other"/><expression tag="Internet.UniformResourceLocator" Value="/?article=Rosetta_Code_examples" Description="Rosetta code"/><expression tag="String.Text" Value="examples"/></expression></expression><expression tag="Typesetting.Paragraph"><expression tag="String.Text" Value="Author: Laurence R. Ugalde"/></expression><expression tag="Typesetting.Paragraph"><expression tag="String.Text" Value="Last modified:"/><expression tag="Time.Time" Value="1621390584489"/></expression></expression></expression></expression>