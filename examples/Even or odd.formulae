<expression tag="Formulae.Script"><expression tag="Formulae.Script.Row" type="0"><expression tag="Typesetting.MultiParagraph"><expression tag="Typesetting.Paragraph"><expression tag="Typesetting.BoldChunk"><expression tag="String.Text" Value="Even or odd"/></expression></expression><expression tag="Typesetting.Paragraph"><expression tag="String.Text" Value="This exercise shows a solution for the"/><expression tag="Internet.UniformResourceLocator" Value="https://rosettacode.org/wiki/Even_or_odd" Description="Even or odd"/><expression tag="String.Text" Value="problem, described in the website"/><expression tag="Internet.UniformResourceLocator" Value="https://rosettacode.org/wiki/Rosetta_Code" Description="Rosetta code."/></expression><expression tag="Typesetting.Paragraph"><expression tag="Typesetting.BoldChunk"><expression tag="String.Text" Value="Summary of the description from Rosetta Code"/></expression></expression><expression tag="Typesetting.Paragraph"><expression tag="String.Text" Value="Task"/></expression><expression tag="Typesetting.Paragraph"><expression tag="String.Text" Value="Test whether an integer is even or odd."/></expression><expression tag="Typesetting.Paragraph"><expression tag="String.Text" Value="There is more than one way to solve this task:"/></expression><expression tag="Typesetting.BulletedList"><expression tag="Typesetting.Paragraph"><expression tag="String.Text" Value="Use the even and odd predicates, if the language provides them."/></expression><expression tag="Typesetting.Paragraph"><expression tag="String.Text" Value="Check the least significant digit. With binary integers, i bitwise-and 1 equals 0 iff i is even, or equals 1 iff i is odd."/></expression><expression tag="Typesetting.Paragraph"><expression tag="String.Text" Value="Divide i by 2. The remainder equals 0 iff i is even. The remainder equals +1 or -1 iff i is odd."/></expression><expression tag="Typesetting.MultiParagraph"><expression tag="Typesetting.Paragraph"><expression tag="String.Text" Value="Use modular congruences:"/></expression><expression tag="Typesetting.BulletedList"><expression tag="Typesetting.Paragraph"><expression tag="String.Text" Value="i ≡ 0 (mod 2) iff i is even."/></expression><expression tag="Typesetting.Paragraph"><expression tag="String.Text" Value="i ≡ 1 (mod 2) iff i is odd."/></expression></expression></expression></expression><expression tag="Typesetting.Paragraph"><expression tag="Typesetting.BoldChunk"><expression tag="String.Text" Value="Solution"/></expression></expression><expression tag="Typesetting.Paragraph"><expression tag="Typesetting.BoldChunk"><expression tag="String.Text" Value="Case 1. Intrinsic expressions"/></expression></expression></expression></expression><expression tag="Formulae.Script.Row" type="0"><expression tag="List.CreateTable"><expression tag="List.List"><expression tag="Symbolic.Symbol" Name="x"/><expression tag="Math.Arithmetic.IsEven"><expression tag="Symbolic.Symbol" Name="x"/></expression><expression tag="Math.Arithmetic.IsOdd"><expression tag="Symbolic.Symbol" Name="x"/></expression></expression><expression tag="Symbolic.Symbol" Name="x"/><expression tag="List.List"><expression tag="Math.Number" Value="0"/><expression tag="Math.Number" Value="2"/><expression tag="Math.Number" Value="3"/></expression></expression></expression><expression tag="Formulae.Script.Row" type="1"><expression tag="List.Table"><expression tag="List.List"><expression tag="List.List"><expression tag="Symbolic.Symbol" Name="x"/><expression tag="Math.Arithmetic.IsEven"><expression tag="Symbolic.Symbol" Name="x"/></expression><expression tag="Math.Arithmetic.IsOdd"><expression tag="Symbolic.Symbol" Name="x"/></expression></expression><expression tag="List.List"><expression tag="Math.Number" Value="0"/><expression tag="Logic.True"/><expression tag="Logic.False"/></expression><expression tag="List.List"><expression tag="Math.Number" Value="2"/><expression tag="Logic.True"/><expression tag="Logic.False"/></expression><expression tag="List.List"><expression tag="Math.Number" Value="3"/><expression tag="Logic.False"/><expression tag="Logic.True"/></expression></expression></expression></expression><expression tag="Formulae.Script.Row" type="0"><expression tag="Typesetting.Paragraph"><expression tag="Typesetting.BoldChunk"><expression tag="String.Text" Value="Case 2. Using the"/><expression tag="Internet.UniformResourceLocator" Value="/?reference=Math.Arithmetic.Divides" Description="Divides"/><expression tag="String.Text" Value="and"/><expression tag="Internet.UniformResourceLocator" Value="/?reference=Math.Arithmetic.DoesNotDivide" Description="DoesNotDivide"/><expression tag="String.Text" Value="expressions"/></expression></expression></expression><expression tag="Formulae.Script.Row" type="0"><expression tag="List.CreateTable"><expression tag="List.List"><expression tag="Symbolic.Symbol" Name="x"/><expression tag="Math.Arithmetic.Divides"><expression tag="Math.Number" Value="2"/><expression tag="Symbolic.Symbol" Name="x"/></expression><expression tag="Math.Arithmetic.DoesNotDivide"><expression tag="Math.Number" Value="2"/><expression tag="Symbolic.Symbol" Name="x"/></expression></expression><expression tag="Symbolic.Symbol" Name="x"/><expression tag="List.List"><expression tag="Math.Number" Value="0"/><expression tag="Math.Number" Value="2"/><expression tag="Math.Number" Value="3"/></expression></expression></expression><expression tag="Formulae.Script.Row" type="1"><expression tag="List.Table"><expression tag="List.List"><expression tag="List.List"><expression tag="Symbolic.Symbol" Name="x"/><expression tag="Math.Arithmetic.Divides"><expression tag="Math.Number" Value="2"/><expression tag="Symbolic.Symbol" Name="x"/></expression><expression tag="Math.Arithmetic.DoesNotDivide"><expression tag="Math.Number" Value="2"/><expression tag="Symbolic.Symbol" Name="x"/></expression></expression><expression tag="List.List"><expression tag="Math.Number" Value="0"/><expression tag="Logic.True"/><expression tag="Logic.False"/></expression><expression tag="List.List"><expression tag="Math.Number" Value="2"/><expression tag="Logic.True"/><expression tag="Logic.False"/></expression><expression tag="List.List"><expression tag="Math.Number" Value="3"/><expression tag="Logic.False"/><expression tag="Logic.True"/></expression></expression></expression></expression><expression tag="Formulae.Script.Row" type="0"><expression tag="Typesetting.Paragraph"><expression tag="Typesetting.BoldChunk"><expression tag="String.Text" Value="Case 3. Using modular congruences"/></expression></expression></expression><expression tag="Formulae.Script.Row" type="0"><expression tag="List.CreateTable"><expression tag="List.List"><expression tag="Symbolic.Symbol" Name="x"/><expression tag="Relation.Equals"><expression tag="Math.Arithmetic.ModE"><expression tag="Symbolic.Symbol" Name="x"/><expression tag="Math.Number" Value="2"/></expression><expression tag="Math.Number" Value="0"/></expression><expression tag="Relation.Different"><expression tag="Math.Arithmetic.ModE"><expression tag="Symbolic.Symbol" Name="x"/><expression tag="Math.Number" Value="2"/></expression><expression tag="Math.Number" Value="0"/></expression></expression><expression tag="Symbolic.Symbol" Name="x"/><expression tag="List.List"><expression tag="Math.Number" Value="0"/><expression tag="Math.Number" Value="2"/><expression tag="Math.Number" Value="3"/></expression></expression></expression><expression tag="Formulae.Script.Row" type="1"><expression tag="List.Table"><expression tag="List.List"><expression tag="List.List"><expression tag="Symbolic.Symbol" Name="x"/><expression tag="Relation.Equals"><expression tag="Math.Arithmetic.ModE"><expression tag="Symbolic.Symbol" Name="x"/><expression tag="Math.Number" Value="2"/></expression><expression tag="Math.Number" Value="0"/></expression><expression tag="Relation.Different"><expression tag="Math.Arithmetic.ModE"><expression tag="Symbolic.Symbol" Name="x"/><expression tag="Math.Number" Value="2"/></expression><expression tag="Math.Number" Value="0"/></expression></expression><expression tag="List.List"><expression tag="Math.Number" Value="0"/><expression tag="Logic.True"/><expression tag="Logic.False"/></expression><expression tag="List.List"><expression tag="Math.Number" Value="2"/><expression tag="Logic.True"/><expression tag="Logic.False"/></expression><expression tag="List.List"><expression tag="Math.Number" Value="3"/><expression tag="Logic.False"/><expression tag="Logic.True"/></expression></expression></expression></expression><expression tag="Formulae.Script.Row" type="0"><expression tag="Typesetting.Paragraph"><expression tag="Typesetting.BoldChunk"><expression tag="String.Text" Value="Case 4. Using bitwise operations"/></expression></expression></expression><expression tag="Formulae.Script.Row" type="0"><expression tag="List.CreateTable"><expression tag="List.List"><expression tag="Symbolic.Symbol" Name="x"/><expression tag="Logic.Negation"><expression tag="Bitwise.TestBit"><expression tag="Symbolic.Symbol" Name="x"/><expression tag="Math.Number" Value="0"/></expression></expression><expression tag="Bitwise.TestBit"><expression tag="Symbolic.Symbol" Name="x"/><expression tag="Math.Number" Value="0"/></expression></expression><expression tag="Symbolic.Symbol" Name="x"/><expression tag="List.List"><expression tag="Math.Number" Value="0"/><expression tag="Math.Number" Value="2"/><expression tag="Math.Number" Value="3"/></expression></expression></expression><expression tag="Formulae.Script.Row" type="1"><expression tag="List.Table"><expression tag="List.List"><expression tag="List.List"><expression tag="Symbolic.Symbol" Name="x"/><expression tag="Logic.Negation"><expression tag="Bitwise.TestBit"><expression tag="Symbolic.Symbol" Name="x"/><expression tag="Math.Number" Value="0"/></expression></expression><expression tag="Bitwise.TestBit"><expression tag="Symbolic.Symbol" Name="x"/><expression tag="Math.Number" Value="0"/></expression></expression><expression tag="List.List"><expression tag="Math.Number" Value="0"/><expression tag="Logic.True"/><expression tag="Logic.False"/></expression><expression tag="List.List"><expression tag="Math.Number" Value="2"/><expression tag="Logic.True"/><expression tag="Logic.False"/></expression><expression tag="List.List"><expression tag="Math.Number" Value="3"/><expression tag="Logic.False"/><expression tag="Logic.True"/></expression></expression></expression></expression><expression tag="Formulae.Script.Row" type="0"><expression tag="Typesetting.Paragraph"><expression tag="Typesetting.BoldChunk"><expression tag="String.Text" Value="Case 3. Using integer division and remainders"/></expression></expression></expression><expression tag="Formulae.Script.Row" type="0"><expression tag="List.CreateTable"><expression tag="List.List"><expression tag="Symbolic.Symbol" Name="x"/><expression tag="Relation.Equals"><expression tag="Math.Arithmetic.ModE"><expression tag="Symbolic.Symbol" Name="x"/><expression tag="Math.Number" Value="2"/></expression><expression tag="Math.Number" Value="0"/></expression><expression tag="Relation.Different"><expression tag="Math.Arithmetic.ModE"><expression tag="Symbolic.Symbol" Name="x"/><expression tag="Math.Number" Value="2"/></expression><expression tag="Math.Number" Value="0"/></expression></expression><expression tag="Symbolic.Symbol" Name="x"/><expression tag="List.List"><expression tag="Math.Number" Value="0"/><expression tag="Math.Number" Value="2"/><expression tag="Math.Number" Value="3"/></expression></expression></expression><expression tag="Formulae.Script.Row" type="1"><expression tag="List.Table"><expression tag="List.List"><expression tag="List.List"><expression tag="Symbolic.Symbol" Name="x"/><expression tag="Relation.Equals"><expression tag="Math.Arithmetic.ModE"><expression tag="Symbolic.Symbol" Name="x"/><expression tag="Math.Number" Value="2"/></expression><expression tag="Math.Number" Value="0"/></expression><expression tag="Relation.Different"><expression tag="Math.Arithmetic.ModE"><expression tag="Symbolic.Symbol" Name="x"/><expression tag="Math.Number" Value="2"/></expression><expression tag="Math.Number" Value="0"/></expression></expression><expression tag="List.List"><expression tag="Math.Number" Value="0"/><expression tag="Logic.True"/><expression tag="Logic.False"/></expression><expression tag="List.List"><expression tag="Math.Number" Value="2"/><expression tag="Logic.True"/><expression tag="Logic.False"/></expression><expression tag="List.List"><expression tag="Math.Number" Value="3"/><expression tag="Logic.False"/><expression tag="Logic.True"/></expression></expression></expression></expression><expression tag="Formulae.Script.Row" type="0"><expression tag="Typesetting.MultiParagraph"><expression tag="Typesetting.Paragraph"><expression tag="Typesetting.BoldChunk"><expression tag="String.Text" Value="See also:"/></expression></expression><expression tag="Typesetting.BulletedList"><expression tag="Typesetting.Paragraph"><expression tag="String.Text" Value="Other"/><expression tag="Internet.UniformResourceLocator" Value="/?article=Rosetta_Code_examples" Description="Rosetta code"/><expression tag="String.Text" Value="examples"/></expression></expression><expression tag="Typesetting.Paragraph"><expression tag="String.Text" Value="Author: Laurence R. Ugalde"/></expression><expression tag="Typesetting.Paragraph"><expression tag="String.Text" Value="Last modified:"/><expression tag="Time.Time" Value="1620791137224"/></expression></expression></expression></expression>