<expression tag="Formulae.Script" Modules="org.formulae.typesetting,org.formulae.text.string,org.formulae.symbolic,org.formulae.list,org.formulae.programming,org.formulae.math.arithmetic,org.formulae.relation,org.formulae.logic,org.formulae.expression,org.formulae.time">
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Typesetting.MultiParagraph">
			<expression tag="Typesetting.Paragraph">
				<expression tag="Typesetting.BoldChunk">
					<expression tag="String.Text" Value="Euler's totient function"/>
				</expression>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="The"/>
				<expression tag="Internet.UniformResourceLocator" Value="https://en.wikipedia.org/wiki/Euler%27s_totient_function" Description="Euler's totient function"/>
				<expression tag="String.Text" Value="counts the positive integers up to a given integer n that are"/>
				<expression tag="Internet.UniformResourceLocator" Value="https://en.wikipedia.org/wiki/Relatively_prime" Description="relatively prime"/>
				<expression tag="String.Text" Value="to n. It is written using the Greek letter phi as φ(n), and may also be called"/>
				<expression tag="Typesetting.ItalicChunk">
					<expression tag="String.Text" Value="Euler's phi function."/>
				</expression>
				<expression tag="String.Text" Value="In other words, it is the number of integers k in the range 1 ≤ k ≤ n for which the"/>
				<expression tag="Internet.UniformResourceLocator" Value="https://en.wikipedia.org/wiki/Greatest_common_divisor" Description="greatest common divisor"/>
				<expression tag="String.Text" Value="gcd(n, k) is equal to 1. The integers k of this form are sometimes referred to as"/>
				<expression tag="Internet.UniformResourceLocator" Value="https://en.wikipedia.org/wiki/Totative" Description="totative"/>
				<expression tag="String.Text" Value="of n."/>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="In this script a program to calculate the Euler's totient function of a given number is presented."/>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="This is also a solution for the"/>
				<expression tag="Internet.UniformResourceLocator" Value="https://rosettacode.org/wiki/Totient_function" Description="Totient function"/>
				<expression tag="String.Text" Value="exercise, described in the website"/>
				<expression tag="Internet.UniformResourceLocator" Value="https://rosettacode.org/wiki/Rosetta_Code" Description="Rosetta code."/>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="Typesetting.BoldChunk">
					<expression tag="String.Text" Value="Program"/>
				</expression>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="2">
		<expression tag="Symbolic.Assignment">
			<expression tag="Symbolic.Function">
				<expression tag="Symbolic.Symbol" Name="φ"/>
				<expression tag="List.List">
					<expression tag="Symbolic.Symbol" Name="n"/>
				</expression>
			</expression>
			<expression tag="Programming.Block" Description="Description" Expanded="True">
				<expression tag="Symbolic.Local">
					<expression tag="Symbolic.Assignment">
						<expression tag="Symbolic.Symbol" Name="count"/>
						<expression tag="Math.Number" Value="0"/>
					</expression>
				</expression>
				<expression tag="Programming.ForFromTo">
					<expression tag="Programming.InvertedIf">
						<expression tag="Symbolic.Assignment">
							<expression tag="Symbolic.Symbol" Name="count"/>
							<expression tag="Math.Arithmetic.Addition">
								<expression tag="Symbolic.Symbol" Name="count"/>
								<expression tag="Math.Number" Value="1"/>
							</expression>
						</expression>
						<expression tag="Relation.Equals">
							<expression tag="Math.Arithmetic.GreatestCommonDivisor">
								<expression tag="List.List">
									<expression tag="Symbolic.Symbol" Name="n"/>
									<expression tag="Symbolic.Symbol" Name="i"/>
								</expression>
							</expression>
							<expression tag="Math.Number" Value="1"/>
						</expression>
					</expression>
					<expression tag="Symbolic.Symbol" Name="i"/>
					<expression tag="Math.Number" Value="1"/>
					<expression tag="Symbolic.Symbol" Name="n"/>
				</expression>
				<expression tag="Symbolic.Symbol" Name="count"/>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Typesetting.Paragraph">
			<expression tag="Typesetting.BoldChunk">
				<expression tag="String.Text" Value="Example:"/>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Symbolic.Function">
			<expression tag="Symbolic.Symbol" Name="φ"/>
			<expression tag="List.List">
				<expression tag="Math.Number" Value="10000"/>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="1">
		<expression tag="Math.Number" Value="4000"/>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Typesetting.MultiParagraph">
			<expression tag="Typesetting.Paragraph">
				<expression tag="Typesetting.BoldChunk">
					<expression tag="String.Text" Value="Test case 1 (from Rosetta code)"/>
				</expression>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="Find and display   (1 per line)   for the 1st   25   integers:"/>
			</expression>
			<expression tag="Typesetting.BulletedList">
				<expression tag="Typesetting.Paragraph">
					<expression tag="String.Text" Value="The integer   (the index)"/>
				</expression>
				<expression tag="Typesetting.Paragraph">
					<expression tag="String.Text" Value="The totient number for that integer"/>
				</expression>
				<expression tag="Typesetting.Paragraph">
					<expression tag="String.Text" Value="Indicate if that integer is prime"/>
				</expression>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="If the totient number (for n) is one less than n, then   n   is prime."/>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="List.CreateTable">
			<expression tag="List.List">
				<expression tag="Symbolic.Symbol" Name="i"/>
				<expression tag="Symbolic.Function">
					<expression tag="Symbolic.Symbol" Name="φ"/>
					<expression tag="List.List">
						<expression tag="Symbolic.Symbol" Name="i"/>
					</expression>
				</expression>
				<expression tag="Relation.Equals">
					<expression tag="Symbolic.Symbol" Name="i"/>
					<expression tag="Math.Arithmetic.Addition">
						<expression tag="Symbolic.Function">
							<expression tag="Symbolic.Symbol" Name="φ"/>
							<expression tag="List.List">
								<expression tag="Symbolic.Symbol" Name="i"/>
							</expression>
						</expression>
						<expression tag="Math.Number" Value="1"/>
					</expression>
				</expression>
			</expression>
			<expression tag="Symbolic.Symbol" Name="i"/>
			<expression tag="Math.Number" Value="1"/>
			<expression tag="Math.Number" Value="25"/>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="1">
		<expression tag="List.Table">
			<expression tag="List.List">
				<expression tag="List.List">
					<expression tag="Symbolic.Symbol" Name="i"/>
					<expression tag="Symbolic.Function">
						<expression tag="Symbolic.Symbol" Name="φ"/>
						<expression tag="List.List">
							<expression tag="Symbolic.Symbol" Name="i"/>
						</expression>
					</expression>
					<expression tag="Relation.Equals">
						<expression tag="Symbolic.Symbol" Name="i"/>
						<expression tag="Math.Arithmetic.Addition">
							<expression tag="Symbolic.Function">
								<expression tag="Symbolic.Symbol" Name="φ"/>
								<expression tag="List.List">
									<expression tag="Symbolic.Symbol" Name="i"/>
								</expression>
							</expression>
							<expression tag="Math.Number" Value="1"/>
						</expression>
					</expression>
				</expression>
				<expression tag="List.List">
					<expression tag="Math.Number" Value="1"/>
					<expression tag="Math.Number" Value="1"/>
					<expression tag="Logic.False"/>
				</expression>
				<expression tag="List.List">
					<expression tag="Math.Number" Value="2"/>
					<expression tag="Math.Number" Value="1"/>
					<expression tag="Logic.True"/>
				</expression>
				<expression tag="List.List">
					<expression tag="Math.Number" Value="3"/>
					<expression tag="Math.Number" Value="2"/>
					<expression tag="Logic.True"/>
				</expression>
				<expression tag="List.List">
					<expression tag="Math.Number" Value="4"/>
					<expression tag="Math.Number" Value="2"/>
					<expression tag="Logic.False"/>
				</expression>
				<expression tag="List.List">
					<expression tag="Math.Number" Value="5"/>
					<expression tag="Math.Number" Value="4"/>
					<expression tag="Logic.True"/>
				</expression>
				<expression tag="List.List">
					<expression tag="Math.Number" Value="6"/>
					<expression tag="Math.Number" Value="2"/>
					<expression tag="Logic.False"/>
				</expression>
				<expression tag="List.List">
					<expression tag="Math.Number" Value="7"/>
					<expression tag="Math.Number" Value="6"/>
					<expression tag="Logic.True"/>
				</expression>
				<expression tag="List.List">
					<expression tag="Math.Number" Value="8"/>
					<expression tag="Math.Number" Value="4"/>
					<expression tag="Logic.False"/>
				</expression>
				<expression tag="List.List">
					<expression tag="Math.Number" Value="9"/>
					<expression tag="Math.Number" Value="6"/>
					<expression tag="Logic.False"/>
				</expression>
				<expression tag="List.List">
					<expression tag="Math.Number" Value="10"/>
					<expression tag="Math.Number" Value="4"/>
					<expression tag="Logic.False"/>
				</expression>
				<expression tag="List.List">
					<expression tag="Math.Number" Value="11"/>
					<expression tag="Math.Number" Value="10"/>
					<expression tag="Logic.True"/>
				</expression>
				<expression tag="List.List">
					<expression tag="Math.Number" Value="12"/>
					<expression tag="Math.Number" Value="4"/>
					<expression tag="Logic.False"/>
				</expression>
				<expression tag="List.List">
					<expression tag="Math.Number" Value="13"/>
					<expression tag="Math.Number" Value="12"/>
					<expression tag="Logic.True"/>
				</expression>
				<expression tag="List.List">
					<expression tag="Math.Number" Value="14"/>
					<expression tag="Math.Number" Value="6"/>
					<expression tag="Logic.False"/>
				</expression>
				<expression tag="List.List">
					<expression tag="Math.Number" Value="15"/>
					<expression tag="Math.Number" Value="8"/>
					<expression tag="Logic.False"/>
				</expression>
				<expression tag="List.List">
					<expression tag="Math.Number" Value="16"/>
					<expression tag="Math.Number" Value="8"/>
					<expression tag="Logic.False"/>
				</expression>
				<expression tag="List.List">
					<expression tag="Math.Number" Value="17"/>
					<expression tag="Math.Number" Value="16"/>
					<expression tag="Logic.True"/>
				</expression>
				<expression tag="List.List">
					<expression tag="Math.Number" Value="18"/>
					<expression tag="Math.Number" Value="6"/>
					<expression tag="Logic.False"/>
				</expression>
				<expression tag="List.List">
					<expression tag="Math.Number" Value="19"/>
					<expression tag="Math.Number" Value="18"/>
					<expression tag="Logic.True"/>
				</expression>
				<expression tag="List.List">
					<expression tag="Math.Number" Value="20"/>
					<expression tag="Math.Number" Value="8"/>
					<expression tag="Logic.False"/>
				</expression>
				<expression tag="List.List">
					<expression tag="Math.Number" Value="21"/>
					<expression tag="Math.Number" Value="12"/>
					<expression tag="Logic.False"/>
				</expression>
				<expression tag="List.List">
					<expression tag="Math.Number" Value="22"/>
					<expression tag="Math.Number" Value="10"/>
					<expression tag="Logic.False"/>
				</expression>
				<expression tag="List.List">
					<expression tag="Math.Number" Value="23"/>
					<expression tag="Math.Number" Value="22"/>
					<expression tag="Logic.True"/>
				</expression>
				<expression tag="List.List">
					<expression tag="Math.Number" Value="24"/>
					<expression tag="Math.Number" Value="8"/>
					<expression tag="Logic.False"/>
				</expression>
				<expression tag="List.List">
					<expression tag="Math.Number" Value="25"/>
					<expression tag="Math.Number" Value="20"/>
					<expression tag="Logic.False"/>
				</expression>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Typesetting.MultiParagraph">
			<expression tag="Typesetting.Paragraph">
				<expression tag="Typesetting.BoldChunk">
					<expression tag="String.Text" Value="Test case 2 (from Rosetta code)"/>
				</expression>
			</expression>
			<expression tag="Typesetting.BulletedList">
				<expression tag="Typesetting.Paragraph">
					<expression tag="String.Text" Value="Find and display the   count   of the primes up to          10"/>
				</expression>
				<expression tag="Typesetting.Paragraph">
					<expression tag="String.Text" Value="Find and display the   count   of the primes up to          100"/>
				</expression>
				<expression tag="Typesetting.Paragraph">
					<expression tag="String.Text" Value="Find and display the   count   of the primes up to          1,000"/>
				</expression>
				<expression tag="Typesetting.Paragraph">
					<expression tag="String.Text" Value="Find and display the   count   of the primes up to          10,000"/>
				</expression>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Programming.Block" Description="Description" Expanded="True">
			<expression tag="Symbolic.Local">
				<expression tag="Symbolic.Assignment">
					<expression tag="Symbolic.Symbol" Name="list"/>
					<expression tag="List.List"/>
				</expression>
			</expression>
			<expression tag="Symbolic.Local">
				<expression tag="Symbolic.Assignment">
					<expression tag="Symbolic.Symbol" Name="count"/>
					<expression tag="Math.Number" Value="0"/>
				</expression>
			</expression>
			<expression tag="Programming.ForFromTo">
				<expression tag="Programming.Block" Description="Description" Expanded="True">
					<expression tag="Programming.InvertedIf">
						<expression tag="Symbolic.Assignment">
							<expression tag="Symbolic.Symbol" Name="count"/>
							<expression tag="Math.Arithmetic.Addition">
								<expression tag="Symbolic.Symbol" Name="count"/>
								<expression tag="Math.Number" Value="1"/>
							</expression>
						</expression>
						<expression tag="Relation.Equals">
							<expression tag="Symbolic.Symbol" Name="n"/>
							<expression tag="Math.Arithmetic.Addition">
								<expression tag="Symbolic.Function">
									<expression tag="Symbolic.Symbol" Name="φ"/>
									<expression tag="List.List">
										<expression tag="Symbolic.Symbol" Name="n"/>
									</expression>
								</expression>
								<expression tag="Math.Number" Value="1"/>
							</expression>
						</expression>
					</expression>
					<expression tag="Programming.If">
						<expression tag="Relation.In">
							<expression tag="Symbolic.Symbol" Name="n"/>
							<expression tag="List.List">
								<expression tag="Math.Number" Value="10"/>
								<expression tag="Math.Number" Value="100"/>
								<expression tag="Math.Number" Value="1000"/>
								<expression tag="Math.Number" Value="10000"/>
							</expression>
						</expression>
						<expression tag="Expression.Append">
							<expression tag="Symbolic.Symbol" Name="list"/>
							<expression tag="List.List">
								<expression tag="Symbolic.Symbol" Name="n"/>
								<expression tag="Symbolic.Symbol" Name="count"/>
							</expression>
						</expression>
					</expression>
				</expression>
				<expression tag="Symbolic.Symbol" Name="n"/>
				<expression tag="Math.Number" Value="1"/>
				<expression tag="Math.Number" Value="10000"/>
			</expression>
			<expression tag="List.Table">
				<expression tag="Symbolic.Symbol" Name="list"/>
				<expression tag="List.List">
					<expression tag="String.Text" Value="n"/>
					<expression tag="String.Text" Value="count"/>
				</expression>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="1">
		<expression tag="List.Table">
			<expression tag="List.List">
				<expression tag="List.List">
					<expression tag="String.Text" Value="n"/>
					<expression tag="String.Text" Value="count"/>
				</expression>
				<expression tag="List.List">
					<expression tag="Math.Number" Value="10"/>
					<expression tag="Math.Number" Value="4"/>
				</expression>
				<expression tag="List.List">
					<expression tag="Math.Number" Value="100"/>
					<expression tag="Math.Number" Value="25"/>
				</expression>
				<expression tag="List.List">
					<expression tag="Math.Number" Value="1000"/>
					<expression tag="Math.Number" Value="168"/>
				</expression>
				<expression tag="List.List">
					<expression tag="Math.Number" Value="10000"/>
					<expression tag="Math.Number" Value="1229"/>
				</expression>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Typesetting.MultiParagraph">
			<expression tag="Typesetting.Paragraph">
				<expression tag="Typesetting.BoldChunk">
					<expression tag="String.Text" Value="See also:"/>
				</expression>
			</expression>
			<expression tag="Typesetting.BulletedList">
				<expression tag="Typesetting.Paragraph">
					<expression tag="String.Text" Value="Other"/>
					<expression tag="Internet.UniformResourceLocator" Value="/?script=articles/Rosetta_Code_examples" Description="Rosetta code"/>
					<expression tag="String.Text" Value="examples"/>
				</expression>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="Author: Laurence R. Ugalde"/>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="Last modified:"/>
				<expression tag="Time.Time" Value="1621471080000"/>
			</expression>
		</expression>
	</expression>
</expression>