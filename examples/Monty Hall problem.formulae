<expression tag="Formulae.Script" Modules="org.formulae.typesetting,org.formulae.text.string,org.formulae.math.arithmetic,org.formulae.symbolic,org.formulae.list,org.formulae.programming,org.formulae.relation,org.formulae.expression,org.formulae.chart,org.formulae.graphics.raster,org.formulae.time">
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Typesetting.MultiParagraph">
			<expression tag="Typesetting.Paragraph">
				<expression tag="Typesetting.BoldChunk">
					<expression tag="String.Text" Value="Monty Hall problem"/>
				</expression>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="The"/>
				<expression tag="Internet.UniformResourceLocator" Value="https://en.wikipedia.org/wiki/Monty_Hall_problem" Description="Monty Hall problem"/>
				<expression tag="String.Text" Value="is a brain teaser, in the form of a probability puzzle, loosely based on the American television game show"/>
				<expression tag="Internet.UniformResourceLocator" Value="https://en.wikipedia.org/wiki/Let%27s_Make_a_Deal" Description="Let's Make a Deal"/>
				<expression tag="String.Text" Value="and named after its original host,"/>
				<expression tag="Internet.UniformResourceLocator" Value="https://en.wikipedia.org/wiki/Monty_Hall" Description="Monty Hall."/>
				<expression tag="String.Text" Value="The problem was originally posed (and solved) in a letter by Steve Selvin to the American Statistician in 1975. It became famous as a question from reader Craig F. Whitaker's letter quoted in"/>
				<expression tag="Internet.UniformResourceLocator" Value="https://en.wikipedia.org/wiki/Marilyn_vos_Savant" Description="Marilyn vos Savant's"/>
				<expression tag="String.Text" Value="&quot;Ask Marilyn&quot; column in"/>
				<expression tag="Internet.UniformResourceLocator" Value="https://en.wikipedia.org/wiki/Parade_(magazine)" Description="Parade"/>
				<expression tag="String.Text" Value="magazine in 1990:"/>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="Typesetting.ItalicChunk">
					<expression tag="String.Text" Value="Suppose you're on a game show, and you're given the choice of three doors: Behind one door is a car; behind the others, goats. You pick a door, say No. 1, and the host, who knows what's behind the doors, opens another door, say No. 3, which has a goat. He then says to you, &quot;Do you want to pick door No. 2?&quot; Is it to your advantage to switch your choice?"/>
				</expression>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="Vos Savant's response was that the contestant should switch to the other door. Under the standard assumptions, contestants who switch have a"/>
				<expression tag="Math.Arithmetic.Division">
					<expression tag="Math.Number" Value="2"/>
					<expression tag="Math.Number" Value="3"/>
				</expression>
				<expression tag="String.Text" Value="chance of winning the car, while contestants who stick to their initial choice have only a"/>
				<expression tag="Math.Arithmetic.Division">
					<expression tag="Math.Number" Value="1"/>
					<expression tag="Math.Number" Value="3"/>
				</expression>
				<expression tag="String.Text" Value="chance."/>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="Many readers of vos Savant's column refused to believe switching is beneficial despite her explanation. After the problem appeared in Parade, approximately 10,000 readers, including nearly 1,000 with PhDs, wrote to the magazine, most of them claiming vos Savant was wrong. Even when given explanations, simulations, and formal mathematical proofs, many people still do not accept that switching is the best strategy."/>
				<expression tag="Internet.UniformResourceLocator" Value="https://en.wikipedia.org/wiki/Paul_Erd%C5%91s" Description="Paul ErdÅ‘s,"/>
				<expression tag="String.Text" Value="one of the most prolific mathematicians in history, remained unconvinced until he was shown a computer simulation demonstrating vos Savant's predicted result."/>
			</expression>
			<expression tag="String.Text" Value="In this article, a program for simulating the Monty Hall problem is presented."/>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="This is also a solution for the"/>
				<expression tag="Internet.UniformResourceLocator" Value="https://rosettacode.org/wiki/Monty_Hall_problem" Description="Monty Hall problem"/>
				<expression tag="String.Text" Value="problem, described in the website"/>
				<expression tag="Internet.UniformResourceLocator" Value="https://rosettacode.org/wiki/Rosetta_Code" Description="Rosetta code."/>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="Typesetting.BoldChunk">
					<expression tag="String.Text" Value="Program"/>
				</expression>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="The following program makes a given number of simulations. On each, three options are evaluated:"/>
			</expression>
			<expression tag="Typesetting.BulletedList">
				<expression tag="Typesetting.Paragraph">
					<expression tag="String.Text" Value="If the player keeps his/her selection"/>
				</expression>
				<expression tag="Typesetting.Paragraph">
					<expression tag="String.Text" Value="If the player randomly chooses between hs/her selection and the other (closed) door."/>
				</expression>
				<expression tag="Typesetting.Paragraph">
					<expression tag="String.Text" Value="If the player switches his/her selection"/>
				</expression>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="Finally, it shows the number of wins for each case."/>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="2">
		<expression tag="Symbolic.Assignment">
			<expression tag="Symbolic.Function">
				<expression tag="Symbolic.Symbol" Name="MontyHall"/>
				<expression tag="List.List">
					<expression tag="Symbolic.Symbol" Name="n"/>
				</expression>
			</expression>
			<expression tag="Programming.Block" Description="block" Expanded="True">
				<expression tag="Symbolic.Local">
					<expression tag="Symbolic.Assignment">
						<expression tag="List.List">
							<expression tag="Symbolic.Symbol" Name="winsKeep"/>
							<expression tag="Symbolic.Symbol" Name="winsRandom"/>
							<expression tag="Symbolic.Symbol" Name="winsSwitch"/>
						</expression>
						<expression tag="List.List">
							<expression tag="Math.Number" Value="0"/>
							<expression tag="Math.Number" Value="0"/>
							<expression tag="Math.Number" Value="0"/>
						</expression>
					</expression>
				</expression>
				<expression tag="Symbolic.Local">
					<expression tag="List.List">
						<expression tag="Symbolic.Symbol" Name="prize"/>
						<expression tag="Symbolic.Symbol" Name="selection"/>
						<expression tag="Symbolic.Symbol" Name="open"/>
						<expression tag="Symbolic.Symbol" Name="newselection"/>
					</expression>
				</expression>
				<expression tag="Programming.ForTimes">
					<expression tag="Programming.Block" Description="block" Expanded="True">
						<expression tag="Programming.Block" Description="The prize is set randomly" Expanded="False">
							<expression tag="String.String" Value="The prize is set randomly"/>
						</expression>
						<expression tag="Symbolic.Assignment">
							<expression tag="Symbolic.Symbol" Name="prize"/>
							<expression tag="Math.Arithmetic.RandomInRange">
								<expression tag="Math.Number" Value="1"/>
								<expression tag="Math.Number" Value="3"/>
							</expression>
						</expression>
						<expression tag="Programming.Block" Description="The player makes a random selection" Expanded="False">
							<expression tag="String.String" Value="The player makes a random selection"/>
						</expression>
						<expression tag="Symbolic.Assignment">
							<expression tag="Symbolic.Symbol" Name="selection"/>
							<expression tag="Math.Arithmetic.RandomInRange">
								<expression tag="Math.Number" Value="1"/>
								<expression tag="Math.Number" Value="3"/>
							</expression>
						</expression>
						<expression tag="Programming.Block" Description="The host must open a door. He knows where prize is, he will no open it!!!" Expanded="False">
							<expression tag="String.String" Value="A door is open"/>
						</expression>
						<expression tag="Programming.IfElse">
							<expression tag="Relation.Equals">
								<expression tag="Symbolic.Symbol" Name="prize"/>
								<expression tag="Symbolic.Symbol" Name="selection"/>
							</expression>
							<expression tag="Programming.Block" Description="block" Expanded="True">
								<expression tag="Programming.Block" Description="The host opens any of the doors containing no prize, randomly" Expanded="False">
									<expression tag="String.String" Value="The host opens any door containing no prize, randomly"/>
								</expression>
								<expression tag="Programming.Until">
									<expression tag="Symbolic.Assignment">
										<expression tag="Symbolic.Symbol" Name="open"/>
										<expression tag="Math.Arithmetic.RandomInRange">
											<expression tag="Math.Number" Value="1"/>
											<expression tag="Math.Number" Value="3"/>
										</expression>
									</expression>
									<expression tag="Relation.Different">
										<expression tag="Symbolic.Symbol" Name="open"/>
										<expression tag="Symbolic.Symbol" Name="prize"/>
									</expression>
								</expression>
							</expression>
							<expression tag="Programming.Block" Description="block" Expanded="True">
								<expression tag="Programming.Block" Description="The host opens the door that is neither the prize nor selected" Expanded="False">
									<expression tag="String.String" Value="The host opens the door that is neither the prize nor selected"/>
								</expression>
								<expression tag="Symbolic.Assignment">
									<expression tag="Symbolic.Symbol" Name="open"/>
									<expression tag="Math.Arithmetic.Addition">
										<expression tag="Math.Number" Value="6"/>
										<expression tag="Math.Arithmetic.Negative">
											<expression tag="Symbolic.Symbol" Name="prize"/>
										</expression>
										<expression tag="Math.Arithmetic.Negative">
											<expression tag="Symbolic.Symbol" Name="selection"/>
										</expression>
									</expression>
								</expression>
							</expression>
						</expression>
						<expression tag="Programming.Block" Description="CASE 1: The player always keeps his/her selection" Expanded="False">
							<expression tag="String.String" Value="CASE 1: The player always keeps his/her selection"/>
						</expression>
						<expression tag="Programming.InvertedIf">
							<expression tag="Symbolic.Assignment">
								<expression tag="Symbolic.Symbol" Name="winsKeep"/>
								<expression tag="Math.Arithmetic.Addition">
									<expression tag="Symbolic.Symbol" Name="winsKeep"/>
									<expression tag="Math.Number" Value="1"/>
								</expression>
							</expression>
							<expression tag="Relation.Equals">
								<expression tag="Symbolic.Symbol" Name="selection"/>
								<expression tag="Symbolic.Symbol" Name="prize"/>
							</expression>
						</expression>
						<expression tag="Programming.Block" Description="CASE 2: The player randomly chooses between his/her selection and the closed door" Expanded="False">
							<expression tag="String.String" Value="CASE 2: The player randomly chooses between his/her selection and the closed door"/>
						</expression>
						<expression tag="Programming.Until">
							<expression tag="Symbolic.Assignment">
								<expression tag="Symbolic.Symbol" Name="newselection"/>
								<expression tag="Math.Arithmetic.RandomInRange">
									<expression tag="Math.Number" Value="1"/>
									<expression tag="Math.Number" Value="3"/>
								</expression>
							</expression>
							<expression tag="Relation.Different">
								<expression tag="Symbolic.Symbol" Name="newselection"/>
								<expression tag="Symbolic.Symbol" Name="open"/>
							</expression>
						</expression>
						<expression tag="Programming.InvertedIf">
							<expression tag="Symbolic.Assignment">
								<expression tag="Symbolic.Symbol" Name="winsRandom"/>
								<expression tag="Math.Arithmetic.Addition">
									<expression tag="Symbolic.Symbol" Name="winsRandom"/>
									<expression tag="Math.Number" Value="1"/>
								</expression>
							</expression>
							<expression tag="Relation.Equals">
								<expression tag="Symbolic.Symbol" Name="newselection"/>
								<expression tag="Symbolic.Symbol" Name="prize"/>
							</expression>
						</expression>
						<expression tag="Programming.Block" Description="CASE 3: The player always switches his/her selection" Expanded="False">
							<expression tag="String.String" Value="CASE 3: The player always switches his/her selection"/>
						</expression>
						<expression tag="Symbolic.Assignment">
							<expression tag="Symbolic.Symbol" Name="newselection"/>
							<expression tag="Math.Arithmetic.Addition">
								<expression tag="Math.Number" Value="6"/>
								<expression tag="Math.Arithmetic.Negative">
									<expression tag="Symbolic.Symbol" Name="selection"/>
								</expression>
								<expression tag="Math.Arithmetic.Negative">
									<expression tag="Symbolic.Symbol" Name="open"/>
								</expression>
							</expression>
						</expression>
						<expression tag="Programming.InvertedIf">
							<expression tag="Symbolic.Assignment">
								<expression tag="Symbolic.Symbol" Name="winsSwitch"/>
								<expression tag="Math.Arithmetic.Addition">
									<expression tag="Symbolic.Symbol" Name="winsSwitch"/>
									<expression tag="Math.Number" Value="1"/>
								</expression>
							</expression>
							<expression tag="Relation.Equals">
								<expression tag="Symbolic.Symbol" Name="newselection"/>
								<expression tag="Symbolic.Symbol" Name="prize"/>
							</expression>
						</expression>
					</expression>
					<expression tag="Symbolic.Symbol" Name="n"/>
				</expression>
				<expression tag="List.List">
					<expression tag="List.List">
						<expression tag="String.String" Value="Keep"/>
						<expression tag="Symbolic.Symbol" Name="winsKeep"/>
					</expression>
					<expression tag="List.List">
						<expression tag="String.String" Value="Random"/>
						<expression tag="Symbolic.Symbol" Name="winsRandom"/>
					</expression>
					<expression tag="List.List">
						<expression tag="String.String" Value="Switch"/>
						<expression tag="Symbolic.Symbol" Name="winsSwitch"/>
					</expression>
				</expression>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Symbolic.Function">
			<expression tag="Symbolic.Symbol" Name="MontyHall"/>
			<expression tag="List.List">
				<expression tag="Math.Number" Value="100"/>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="1">
		<expression tag="List.List">
			<expression tag="List.List">
				<expression tag="String.String" Value="Keep"/>
				<expression tag="Math.Number" Value="34"/>
			</expression>
			<expression tag="List.List">
				<expression tag="String.String" Value="Random"/>
				<expression tag="Math.Number" Value="49"/>
			</expression>
			<expression tag="List.List">
				<expression tag="String.String" Value="Switch"/>
				<expression tag="Math.Number" Value="66"/>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Typesetting.MultiParagraph">
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="It can be seen that:"/>
			</expression>
			<expression tag="Typesetting.BulletedList">
				<expression tag="Typesetting.Paragraph">
					<expression tag="String.Text" Value="If the player keeps his/her selection, he/she wins around"/>
					<expression tag="Math.Arithmetic.Division">
						<expression tag="Math.Number" Value="1"/>
						<expression tag="Math.Number" Value="3"/>
					</expression>
					<expression tag="String.Text" Value="of times."/>
				</expression>
				<expression tag="Typesetting.Paragraph">
					<expression tag="String.Text" Value="If the player randomly chooses between hs/her selection and the other (closed) door, he/she wins around"/>
					<expression tag="Math.Arithmetic.Division">
						<expression tag="Math.Number" Value="1"/>
						<expression tag="Math.Number" Value="2"/>
					</expression>
					<expression tag="String.Text" Value="of times."/>
				</expression>
				<expression tag="Typesetting.Paragraph">
					<expression tag="String.Text" Value="If the player switches his/her selection, he/seh wins around"/>
					<expression tag="Math.Arithmetic.Division">
						<expression tag="Math.Number" Value="2"/>
						<expression tag="Math.Number" Value="3"/>
					</expression>
					<expression tag="String.Text" Value="of times."/>
				</expression>
			</expression>
			<expression tag="String.Text" Value="The following variation shows the evolution of the probabilities for each case:"/>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="2">
		<expression tag="Symbolic.Assignment">
			<expression tag="Symbolic.Function">
				<expression tag="Symbolic.Symbol" Name="Monty Hall G"/>
				<expression tag="List.List">
					<expression tag="Symbolic.Symbol" Name="n"/>
				</expression>
			</expression>
			<expression tag="Programming.Block" Description="block" Expanded="True">
				<expression tag="Symbolic.Local">
					<expression tag="Symbolic.Assignment">
						<expression tag="List.List">
							<expression tag="Symbolic.Symbol" Name="winsKeep"/>
							<expression tag="Symbolic.Symbol" Name="winsRandom"/>
							<expression tag="Symbolic.Symbol" Name="winsSwitch"/>
						</expression>
						<expression tag="List.List">
							<expression tag="Math.Number" Value="0"/>
							<expression tag="Math.Number" Value="0"/>
							<expression tag="Math.Number" Value="0"/>
						</expression>
					</expression>
				</expression>
				<expression tag="Symbolic.Local">
					<expression tag="List.List">
						<expression tag="Symbolic.Symbol" Name="prize"/>
						<expression tag="Symbolic.Symbol" Name="selection"/>
						<expression tag="Symbolic.Symbol" Name="open"/>
						<expression tag="Symbolic.Symbol" Name="newselection"/>
					</expression>
				</expression>
				<expression tag="Symbolic.Local">
					<expression tag="Symbolic.Assignment">
						<expression tag="Symbolic.Symbol" Name="data"/>
						<expression tag="List.List"/>
					</expression>
				</expression>
				<expression tag="Programming.ForFromTo">
					<expression tag="Programming.Block" Description="block" Expanded="True">
						<expression tag="Symbolic.Assignment">
							<expression tag="Symbolic.Symbol" Name="prize"/>
							<expression tag="Math.Arithmetic.RandomInRange">
								<expression tag="Math.Number" Value="1"/>
								<expression tag="Math.Number" Value="3"/>
							</expression>
						</expression>
						<expression tag="Symbolic.Assignment">
							<expression tag="Symbolic.Symbol" Name="selection"/>
							<expression tag="Math.Arithmetic.RandomInRange">
								<expression tag="Math.Number" Value="1"/>
								<expression tag="Math.Number" Value="3"/>
							</expression>
						</expression>
						<expression tag="Programming.IfElse">
							<expression tag="Relation.Equals">
								<expression tag="Symbolic.Symbol" Name="prize"/>
								<expression tag="Symbolic.Symbol" Name="selection"/>
							</expression>
							<expression tag="Programming.Until">
								<expression tag="Symbolic.Assignment">
									<expression tag="Symbolic.Symbol" Name="open"/>
									<expression tag="Math.Arithmetic.RandomInRange">
										<expression tag="Math.Number" Value="1"/>
										<expression tag="Math.Number" Value="3"/>
									</expression>
								</expression>
								<expression tag="Relation.Different">
									<expression tag="Symbolic.Symbol" Name="open"/>
									<expression tag="Symbolic.Symbol" Name="prize"/>
								</expression>
							</expression>
							<expression tag="Symbolic.Assignment">
								<expression tag="Symbolic.Symbol" Name="open"/>
								<expression tag="Math.Arithmetic.Addition">
									<expression tag="Math.Number" Value="6"/>
									<expression tag="Math.Arithmetic.Negative">
										<expression tag="Symbolic.Symbol" Name="prize"/>
									</expression>
									<expression tag="Math.Arithmetic.Negative">
										<expression tag="Symbolic.Symbol" Name="selection"/>
									</expression>
								</expression>
							</expression>
						</expression>
						<expression tag="Programming.InvertedIf">
							<expression tag="Symbolic.Assignment">
								<expression tag="Symbolic.Symbol" Name="winsKeep"/>
								<expression tag="Math.Arithmetic.Addition">
									<expression tag="Symbolic.Symbol" Name="winsKeep"/>
									<expression tag="Math.Number" Value="1"/>
								</expression>
							</expression>
							<expression tag="Relation.Equals">
								<expression tag="Symbolic.Symbol" Name="selection"/>
								<expression tag="Symbolic.Symbol" Name="prize"/>
							</expression>
						</expression>
						<expression tag="Programming.Until">
							<expression tag="Symbolic.Assignment">
								<expression tag="Symbolic.Symbol" Name="newselection"/>
								<expression tag="Math.Arithmetic.RandomInRange">
									<expression tag="Math.Number" Value="1"/>
									<expression tag="Math.Number" Value="3"/>
								</expression>
							</expression>
							<expression tag="Relation.Different">
								<expression tag="Symbolic.Symbol" Name="newselection"/>
								<expression tag="Symbolic.Symbol" Name="open"/>
							</expression>
						</expression>
						<expression tag="Programming.InvertedIf">
							<expression tag="Symbolic.Assignment">
								<expression tag="Symbolic.Symbol" Name="winsRandom"/>
								<expression tag="Math.Arithmetic.Addition">
									<expression tag="Symbolic.Symbol" Name="winsRandom"/>
									<expression tag="Math.Number" Value="1"/>
								</expression>
							</expression>
							<expression tag="Relation.Equals">
								<expression tag="Symbolic.Symbol" Name="newselection"/>
								<expression tag="Symbolic.Symbol" Name="prize"/>
							</expression>
						</expression>
						<expression tag="Symbolic.Assignment">
							<expression tag="Symbolic.Symbol" Name="newselection"/>
							<expression tag="Math.Arithmetic.Addition">
								<expression tag="Math.Number" Value="6"/>
								<expression tag="Math.Arithmetic.Negative">
									<expression tag="Symbolic.Symbol" Name="selection"/>
								</expression>
								<expression tag="Math.Arithmetic.Negative">
									<expression tag="Symbolic.Symbol" Name="open"/>
								</expression>
							</expression>
						</expression>
						<expression tag="Programming.InvertedIf">
							<expression tag="Symbolic.Assignment">
								<expression tag="Symbolic.Symbol" Name="winsSwitch"/>
								<expression tag="Math.Arithmetic.Addition">
									<expression tag="Symbolic.Symbol" Name="winsSwitch"/>
									<expression tag="Math.Number" Value="1"/>
								</expression>
							</expression>
							<expression tag="Relation.Equals">
								<expression tag="Symbolic.Symbol" Name="newselection"/>
								<expression tag="Symbolic.Symbol" Name="prize"/>
							</expression>
						</expression>
						<expression tag="Expression.Append">
							<expression tag="Symbolic.Symbol" Name="data"/>
							<expression tag="List.List">
								<expression tag="Symbolic.Symbol" Name="i"/>
								<expression tag="Math.Numeric">
									<expression tag="Math.Arithmetic.Division">
										<expression tag="Symbolic.Symbol" Name="winsKeep"/>
										<expression tag="Symbolic.Symbol" Name="i"/>
									</expression>
								</expression>
								<expression tag="Math.Numeric">
									<expression tag="Math.Arithmetic.Division">
										<expression tag="Symbolic.Symbol" Name="winsRandom"/>
										<expression tag="Symbolic.Symbol" Name="i"/>
									</expression>
								</expression>
								<expression tag="Math.Numeric">
									<expression tag="Math.Arithmetic.Division">
										<expression tag="Symbolic.Symbol" Name="winsSwitch"/>
										<expression tag="Symbolic.Symbol" Name="i"/>
									</expression>
								</expression>
							</expression>
						</expression>
					</expression>
					<expression tag="Symbolic.Symbol" Name="i"/>
					<expression tag="Math.Number" Value="1"/>
					<expression tag="Symbolic.Symbol" Name="n"/>
				</expression>
				<expression tag="Chart.Line">
					<expression tag="Symbolic.Symbol" Name="data"/>
					<expression tag="List.List">
						<expression tag="String.String" Value="Series names"/>
						<expression tag="List.List">
							<expression tag="String.String" Value="Keep"/>
							<expression tag="String.String" Value="Random"/>
							<expression tag="String.String" Value="Switch"/>
						</expression>
					</expression>
				</expression>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Symbolic.Function">
			<expression tag="Symbolic.Symbol" Name="Monty Hall G"/>
			<expression tag="List.List">
				<expression tag="Math.Number" Value="200"/>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="1">
		<expression tag="Graphics.RasterGraphics" Value=""/>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Typesetting.MultiParagraph">
			<expression tag="Typesetting.Paragraph">
				<expression tag="Typesetting.BoldChunk">
					<expression tag="String.Text" Value="See also:"/>
				</expression>
			</expression>
			<expression tag="Typesetting.BulletedList">
				<expression tag="Typesetting.Paragraph">
					<expression tag="String.Text" Value="Other"/>
					<expression tag="Internet.UniformResourceLocator" Value="/?script=articles/Counterintuitive" Description="counterintuitive"/>
					<expression tag="String.Text" Value="examples"/>
				</expression>
				<expression tag="Typesetting.Paragraph">
					<expression tag="String.Text" Value="Other"/>
					<expression tag="Internet.UniformResourceLocator" Value="/?script=articles/Rosetta_Code_examples" Description="Rosetta code"/>
					<expression tag="String.Text" Value="examples"/>
				</expression>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="Author: Laurence R. Ugalde"/>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="Last modified:"/>
				<expression tag="Time.Time" Value="1621711440000"/>
			</expression>
		</expression>
	</expression>
</expression>