<expression tag="Formulae.Script" Modules="org.formulae.typesetting,org.formulae.text.string,org.formulae.symbolic,org.formulae.list,org.formulae.programming,org.formulae.math.arithmetic,org.formulae.expression,org.formulae.relation,org.formulae.logic,org.formulae.graphics.raster,org.formulae.color,org.formulae.time">
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Typesetting.MultiParagraph">
			<expression tag="Typesetting.Paragraph">
				<expression tag="Typesetting.BoldChunk">
					<expression tag="String.Text" Value="Knight's tour"/>
				</expression>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="A"/>
				<expression tag="Internet.UniformResourceLocator" Value="https://en.wikipedia.org/wiki/Knight%27s_tour" Description="Knight's tour"/>
				<expression tag="String.Text" Value="is a sequence of moves of a"/>
				<expression tag="Internet.UniformResourceLocator" Value="https://en.wikipedia.org/wiki/Knight_(chess)" Description="knight"/>
				<expression tag="String.Text" Value="on a"/>
				<expression tag="Internet.UniformResourceLocator" Value="https://en.wikipedia.org/wiki/Chessboard" Description="chessboard"/>
				<expression tag="String.Text" Value="such that the knight visits every square exactly once. If the knight ends on a square that is one knight's move from the beginning square (so that it could tour the board again immediately, following the same path), the tour is closed; otherwise, it is open."/>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="In this script, several programs to solve the Knight's tour are presented."/>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="This is also a solution for the"/>
				<expression tag="Internet.UniformResourceLocator" Value="https://rosettacode.org/wiki/Knight%27s_tour" Description="Knight's tour"/>
				<expression tag="String.Text" Value="exercise, described in the website"/>
				<expression tag="Internet.UniformResourceLocator" Value="https://rosettacode.org/wiki/Rosetta_Code" Description="Rosetta code."/>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="Typesetting.BoldChunk">
					<expression tag="String.Text" Value="Solution"/>
				</expression>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="The following program calculates all the solution for a given n x n board size and an initial position. However, although it is correct, it would last large amount of time."/>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Symbolic.Assignment">
			<expression tag="Symbolic.Function">
				<expression tag="Symbolic.Symbol" Name="KnightAll"/>
				<expression tag="List.List">
					<expression tag="Symbolic.Symbol" Name="n"/>
					<expression tag="Symbolic.Symbol" Name="Col"/>
					<expression tag="Symbolic.Symbol" Name="Row"/>
				</expression>
			</expression>
			<expression tag="Programming.Block" Description="block" Expanded="True">
				<expression tag="Symbolic.Local">
					<expression tag="Symbolic.Assignment">
						<expression tag="Symbolic.Symbol" Name="Board"/>
						<expression tag="List.CreateList">
							<expression tag="List.CreateList">
								<expression tag="Math.Number" Value="0"/>
								<expression tag="Symbolic.Symbol" Name="n"/>
							</expression>
							<expression tag="Symbolic.Symbol" Name="n"/>
						</expression>
					</expression>
				</expression>
				<expression tag="Symbolic.Local">
					<expression tag="Symbolic.Assignment">
						<expression tag="Symbolic.Symbol" Name="Results"/>
						<expression tag="List.List"/>
					</expression>
				</expression>
				<expression tag="Symbolic.Local">
					<expression tag="Symbolic.Assignment">
						<expression tag="Symbolic.Function">
							<expression tag="Symbolic.Symbol" Name="TestStep"/>
							<expression tag="List.List">
								<expression tag="Symbolic.Symbol" Name="Col"/>
								<expression tag="Symbolic.Symbol" Name="Row"/>
								<expression tag="Symbolic.Symbol" Name="Step"/>
							</expression>
						</expression>
						<expression tag="Programming.Block" Description="block" Expanded="True">
							<expression tag="Symbolic.Assignment">
								<expression tag="Expression.Child">
									<expression tag="Symbolic.Symbol" Name="Board"/>
									<expression tag="List.List">
										<expression tag="Symbolic.Symbol" Name="Col"/>
										<expression tag="Symbolic.Symbol" Name="Row"/>
									</expression>
								</expression>
								<expression tag="Symbolic.Symbol" Name="Step"/>
							</expression>
							<expression tag="Programming.IfElse">
								<expression tag="Relation.Equals">
									<expression tag="Symbolic.Symbol" Name="Step"/>
									<expression tag="Math.Arithmetic.Exponentiation">
										<expression tag="Symbolic.Symbol" Name="n"/>
										<expression tag="Math.Number" Value="2"/>
									</expression>
								</expression>
								<expression tag="Expression.Append">
									<expression tag="Symbolic.Symbol" Name="Results"/>
									<expression tag="List.List">
										<expression tag="Symbolic.Symbol" Name="Board"/>
									</expression>
								</expression>
								<expression tag="Programming.Block" Description="block" Expanded="True">
									<expression tag="Symbolic.Local">
										<expression tag="List.List">
											<expression tag="Symbolic.Symbol" Name="c"/>
											<expression tag="Symbolic.Symbol" Name="r"/>
										</expression>
									</expression>
									<expression tag="Programming.ForIn">
										<expression tag="Programming.Block" Description="block" Expanded="True">
											<expression tag="Symbolic.Assignment">
												<expression tag="List.List">
													<expression tag="Symbolic.Symbol" Name="c"/>
													<expression tag="Symbolic.Symbol" Name="r"/>
												</expression>
												<expression tag="Math.Arithmetic.Addition">
													<expression tag="List.List">
														<expression tag="Symbolic.Symbol" Name="Col"/>
														<expression tag="Symbolic.Symbol" Name="Row"/>
													</expression>
													<expression tag="Symbolic.Symbol" Name="offset"/>
												</expression>
											</expression>
											<expression tag="Programming.If">
												<expression tag="Logic.Conjunction">
													<expression tag="Relation.GreaterOrEquals">
														<expression tag="Symbolic.Symbol" Name="c"/>
														<expression tag="Math.Number" Value="1"/>
													</expression>
													<expression tag="Relation.LessOrEquals">
														<expression tag="Symbolic.Symbol" Name="c"/>
														<expression tag="Symbolic.Symbol" Name="n"/>
													</expression>
													<expression tag="Relation.GreaterOrEquals">
														<expression tag="Symbolic.Symbol" Name="r"/>
														<expression tag="Math.Number" Value="1"/>
													</expression>
													<expression tag="Relation.LessOrEquals">
														<expression tag="Symbolic.Symbol" Name="r"/>
														<expression tag="Symbolic.Symbol" Name="n"/>
													</expression>
													<expression tag="Relation.Equals">
														<expression tag="Expression.Child">
															<expression tag="Symbolic.Symbol" Name="Board"/>
															<expression tag="List.List">
																<expression tag="Symbolic.Symbol" Name="c"/>
																<expression tag="Symbolic.Symbol" Name="r"/>
															</expression>
														</expression>
														<expression tag="Math.Number" Value="0"/>
													</expression>
												</expression>
												<expression tag="Symbolic.Function">
													<expression tag="Symbolic.Symbol" Name="TestStep"/>
													<expression tag="List.List">
														<expression tag="Symbolic.Symbol" Name="c"/>
														<expression tag="Symbolic.Symbol" Name="r"/>
														<expression tag="Math.Arithmetic.Addition">
															<expression tag="Symbolic.Symbol" Name="Step"/>
															<expression tag="Math.Number" Value="1"/>
														</expression>
													</expression>
												</expression>
											</expression>
										</expression>
										<expression tag="Symbolic.Symbol" Name="offset"/>
										<expression tag="List.List">
											<expression tag="List.List">
												<expression tag="Math.Number" Value="2"/>
												<expression tag="Math.Number" Value="1"/>
											</expression>
											<expression tag="List.List">
												<expression tag="Math.Number" Value="1"/>
												<expression tag="Math.Number" Value="2"/>
											</expression>
											<expression tag="List.List">
												<expression tag="Math.Arithmetic.Negative">
													<expression tag="Math.Number" Value="1"/>
												</expression>
												<expression tag="Math.Number" Value="2"/>
											</expression>
											<expression tag="List.List">
												<expression tag="Math.Arithmetic.Negative">
													<expression tag="Math.Number" Value="2"/>
												</expression>
												<expression tag="Math.Number" Value="1"/>
											</expression>
											<expression tag="List.List">
												<expression tag="Math.Arithmetic.Negative">
													<expression tag="Math.Number" Value="2"/>
												</expression>
												<expression tag="Math.Arithmetic.Negative">
													<expression tag="Math.Number" Value="1"/>
												</expression>
											</expression>
											<expression tag="List.List">
												<expression tag="Math.Arithmetic.Negative">
													<expression tag="Math.Number" Value="1"/>
												</expression>
												<expression tag="Math.Arithmetic.Negative">
													<expression tag="Math.Number" Value="2"/>
												</expression>
											</expression>
											<expression tag="List.List">
												<expression tag="Math.Number" Value="1"/>
												<expression tag="Math.Arithmetic.Negative">
													<expression tag="Math.Number" Value="2"/>
												</expression>
											</expression>
											<expression tag="List.List">
												<expression tag="Math.Number" Value="2"/>
												<expression tag="Math.Arithmetic.Negative">
													<expression tag="Math.Number" Value="1"/>
												</expression>
											</expression>
										</expression>
									</expression>
								</expression>
							</expression>
							<expression tag="Symbolic.Assignment">
								<expression tag="Expression.Child">
									<expression tag="Symbolic.Symbol" Name="Board"/>
									<expression tag="List.List">
										<expression tag="Symbolic.Symbol" Name="Col"/>
										<expression tag="Symbolic.Symbol" Name="Row"/>
									</expression>
								</expression>
								<expression tag="Math.Number" Value="0"/>
							</expression>
						</expression>
					</expression>
				</expression>
				<expression tag="Symbolic.Function">
					<expression tag="Symbolic.Symbol" Name="TestStep"/>
					<expression tag="List.List">
						<expression tag="Symbolic.Symbol" Name="Col"/>
						<expression tag="Symbolic.Symbol" Name="Row"/>
						<expression tag="Math.Number" Value="1"/>
					</expression>
				</expression>
				<expression tag="Symbolic.Symbol" Name="Results"/>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Typesetting.Paragraph">
			<expression tag="String.Text" Value="The following one, calculates just only one solution."/>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="2">
		<expression tag="Symbolic.Assignment">
			<expression tag="Symbolic.Function">
				<expression tag="Symbolic.Symbol" Name="Knight tour"/>
				<expression tag="List.List">
					<expression tag="Symbolic.Symbol" Name="n"/>
					<expression tag="Symbolic.Symbol" Name="col"/>
					<expression tag="Symbolic.Symbol" Name="row"/>
				</expression>
			</expression>
			<expression tag="Programming.Block" Description="block" Expanded="True">
				<expression tag="Symbolic.Local">
					<expression tag="Symbolic.Assignment">
						<expression tag="Symbolic.Symbol" Name="board"/>
						<expression tag="List.CreateList">
							<expression tag="List.CreateList">
								<expression tag="Math.Number" Value="0"/>
								<expression tag="Symbolic.Symbol" Name="n"/>
							</expression>
							<expression tag="Symbolic.Symbol" Name="n"/>
						</expression>
					</expression>
				</expression>
				<expression tag="Symbolic.Local">
					<expression tag="Symbolic.Symbol" Name="result"/>
				</expression>
				<expression tag="Symbolic.Local">
					<expression tag="Symbolic.Assignment">
						<expression tag="Symbolic.Function">
							<expression tag="Symbolic.Symbol" Name="Test step"/>
							<expression tag="List.List">
								<expression tag="Symbolic.Symbol" Name="col"/>
								<expression tag="Symbolic.Symbol" Name="row"/>
								<expression tag="Symbolic.Symbol" Name="step"/>
							</expression>
						</expression>
						<expression tag="Programming.Block" Description="block" Expanded="True">
							<expression tag="Symbolic.Assignment">
								<expression tag="Expression.Child">
									<expression tag="Symbolic.Symbol" Name="board"/>
									<expression tag="List.List">
										<expression tag="Symbolic.Symbol" Name="col"/>
										<expression tag="Symbolic.Symbol" Name="row"/>
									</expression>
								</expression>
								<expression tag="Symbolic.Symbol" Name="step"/>
							</expression>
							<expression tag="Programming.IfElse">
								<expression tag="Relation.Equals">
									<expression tag="Symbolic.Symbol" Name="step"/>
									<expression tag="Math.Arithmetic.Exponentiation">
										<expression tag="Symbolic.Symbol" Name="n"/>
										<expression tag="Math.Number" Value="2"/>
									</expression>
								</expression>
								<expression tag="Programming.Block" Description="block" Expanded="True">
									<expression tag="Symbolic.Assignment">
										<expression tag="Symbolic.Symbol" Name="result"/>
										<expression tag="Symbolic.Symbol" Name="board"/>
									</expression>
									<expression tag="Symbolic.Return">
										<expression tag="Logic.True"/>
									</expression>
								</expression>
								<expression tag="Programming.Block" Description="block" Expanded="True">
									<expression tag="Symbolic.Local">
										<expression tag="List.List">
											<expression tag="Symbolic.Symbol" Name="c"/>
											<expression tag="Symbolic.Symbol" Name="r"/>
										</expression>
									</expression>
									<expression tag="Programming.ForIn">
										<expression tag="Programming.Block" Description="block" Expanded="True">
											<expression tag="Symbolic.Assignment">
												<expression tag="List.List">
													<expression tag="Symbolic.Symbol" Name="c"/>
													<expression tag="Symbolic.Symbol" Name="r"/>
												</expression>
												<expression tag="Math.Arithmetic.Addition">
													<expression tag="List.List">
														<expression tag="Symbolic.Symbol" Name="col"/>
														<expression tag="Symbolic.Symbol" Name="row"/>
													</expression>
													<expression tag="Symbolic.Symbol" Name="offset"/>
												</expression>
											</expression>
											<expression tag="Programming.If">
												<expression tag="Logic.Conjunction">
													<expression tag="Relation.GreaterOrEquals">
														<expression tag="Symbolic.Symbol" Name="c"/>
														<expression tag="Math.Number" Value="1"/>
													</expression>
													<expression tag="Relation.LessOrEquals">
														<expression tag="Symbolic.Symbol" Name="c"/>
														<expression tag="Symbolic.Symbol" Name="n"/>
													</expression>
													<expression tag="Relation.GreaterOrEquals">
														<expression tag="Symbolic.Symbol" Name="r"/>
														<expression tag="Math.Number" Value="1"/>
													</expression>
													<expression tag="Relation.LessOrEquals">
														<expression tag="Symbolic.Symbol" Name="r"/>
														<expression tag="Symbolic.Symbol" Name="n"/>
													</expression>
													<expression tag="Relation.Equals">
														<expression tag="Expression.Child">
															<expression tag="Symbolic.Symbol" Name="board"/>
															<expression tag="List.List">
																<expression tag="Symbolic.Symbol" Name="c"/>
																<expression tag="Symbolic.Symbol" Name="r"/>
															</expression>
														</expression>
														<expression tag="Math.Number" Value="0"/>
													</expression>
												</expression>
												<expression tag="Programming.InvertedIf">
													<expression tag="Symbolic.Return">
														<expression tag="Logic.True"/>
													</expression>
													<expression tag="Symbolic.Function">
														<expression tag="Symbolic.Symbol" Name="Test step"/>
														<expression tag="List.List">
															<expression tag="Symbolic.Symbol" Name="c"/>
															<expression tag="Symbolic.Symbol" Name="r"/>
															<expression tag="Math.Arithmetic.Addition">
																<expression tag="Symbolic.Symbol" Name="step"/>
																<expression tag="Math.Number" Value="1"/>
															</expression>
														</expression>
													</expression>
												</expression>
											</expression>
										</expression>
										<expression tag="Symbolic.Symbol" Name="offset"/>
										<expression tag="List.List">
											<expression tag="List.List">
												<expression tag="Math.Number" Value="2"/>
												<expression tag="Math.Number" Value="1"/>
											</expression>
											<expression tag="List.List">
												<expression tag="Math.Number" Value="1"/>
												<expression tag="Math.Number" Value="2"/>
											</expression>
											<expression tag="List.List">
												<expression tag="Math.Arithmetic.Negative">
													<expression tag="Math.Number" Value="1"/>
												</expression>
												<expression tag="Math.Number" Value="2"/>
											</expression>
											<expression tag="List.List">
												<expression tag="Math.Arithmetic.Negative">
													<expression tag="Math.Number" Value="2"/>
												</expression>
												<expression tag="Math.Number" Value="1"/>
											</expression>
											<expression tag="List.List">
												<expression tag="Math.Arithmetic.Negative">
													<expression tag="Math.Number" Value="2"/>
												</expression>
												<expression tag="Math.Arithmetic.Negative">
													<expression tag="Math.Number" Value="1"/>
												</expression>
											</expression>
											<expression tag="List.List">
												<expression tag="Math.Arithmetic.Negative">
													<expression tag="Math.Number" Value="1"/>
												</expression>
												<expression tag="Math.Arithmetic.Negative">
													<expression tag="Math.Number" Value="2"/>
												</expression>
											</expression>
											<expression tag="List.List">
												<expression tag="Math.Number" Value="1"/>
												<expression tag="Math.Arithmetic.Negative">
													<expression tag="Math.Number" Value="2"/>
												</expression>
											</expression>
											<expression tag="List.List">
												<expression tag="Math.Number" Value="2"/>
												<expression tag="Math.Arithmetic.Negative">
													<expression tag="Math.Number" Value="1"/>
												</expression>
											</expression>
										</expression>
									</expression>
								</expression>
							</expression>
							<expression tag="Symbolic.Assignment">
								<expression tag="Expression.Child">
									<expression tag="Symbolic.Symbol" Name="board"/>
									<expression tag="List.List">
										<expression tag="Symbolic.Symbol" Name="col"/>
										<expression tag="Symbolic.Symbol" Name="row"/>
									</expression>
								</expression>
								<expression tag="Math.Number" Value="0"/>
							</expression>
							<expression tag="Logic.False"/>
						</expression>
					</expression>
				</expression>
				<expression tag="Symbolic.Function">
					<expression tag="Symbolic.Symbol" Name="Test step"/>
					<expression tag="List.List">
						<expression tag="Symbolic.Symbol" Name="col"/>
						<expression tag="Symbolic.Symbol" Name="row"/>
						<expression tag="Math.Number" Value="1"/>
					</expression>
				</expression>
				<expression tag="Symbolic.Symbol" Name="result"/>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Typesetting.MultiParagraph">
			<expression tag="Typesetting.Paragraph">
				<expression tag="Typesetting.BoldChunk">
					<expression tag="String.Text" Value="Case 1"/>
				</expression>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="A 5 x 5 chessboard, starting in the center square."/>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Symbolic.Function">
			<expression tag="Symbolic.Symbol" Name="Knight tour"/>
			<expression tag="List.List">
				<expression tag="Math.Number" Value="5"/>
				<expression tag="Math.Number" Value="3"/>
				<expression tag="Math.Number" Value="3"/>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="1">
		<expression tag="List.List">
			<expression tag="List.List">
				<expression tag="Math.Number" Value="23"/>
				<expression tag="Math.Number" Value="10"/>
				<expression tag="Math.Number" Value="15"/>
				<expression tag="Math.Number" Value="4"/>
				<expression tag="Math.Number" Value="25"/>
			</expression>
			<expression tag="List.List">
				<expression tag="Math.Number" Value="16"/>
				<expression tag="Math.Number" Value="5"/>
				<expression tag="Math.Number" Value="24"/>
				<expression tag="Math.Number" Value="9"/>
				<expression tag="Math.Number" Value="14"/>
			</expression>
			<expression tag="List.List">
				<expression tag="Math.Number" Value="11"/>
				<expression tag="Math.Number" Value="22"/>
				<expression tag="Math.Number" Value="1"/>
				<expression tag="Math.Number" Value="18"/>
				<expression tag="Math.Number" Value="3"/>
			</expression>
			<expression tag="List.List">
				<expression tag="Math.Number" Value="6"/>
				<expression tag="Math.Number" Value="17"/>
				<expression tag="Math.Number" Value="20"/>
				<expression tag="Math.Number" Value="13"/>
				<expression tag="Math.Number" Value="8"/>
			</expression>
			<expression tag="List.List">
				<expression tag="Math.Number" Value="21"/>
				<expression tag="Math.Number" Value="12"/>
				<expression tag="Math.Number" Value="7"/>
				<expression tag="Math.Number" Value="2"/>
				<expression tag="Math.Number" Value="19"/>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Typesetting.MultiParagraph">
			<expression tag="Typesetting.Paragraph">
				<expression tag="Typesetting.BoldChunk">
					<expression tag="String.Text" Value="Case 2"/>
				</expression>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="A 8 x 8 chessboard, starting in the top left square (it last several minutes)"/>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Symbolic.Function">
			<expression tag="Symbolic.Symbol" Name="Knight tour"/>
			<expression tag="List.List">
				<expression tag="Math.Number" Value="8"/>
				<expression tag="Math.Number" Value="1"/>
				<expression tag="Math.Number" Value="1"/>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="1">
		<expression tag="List.List">
			<expression tag="List.List">
				<expression tag="Math.Number" Value="1"/>
				<expression tag="Math.Number" Value="60"/>
				<expression tag="Math.Number" Value="39"/>
				<expression tag="Math.Number" Value="34"/>
				<expression tag="Math.Number" Value="31"/>
				<expression tag="Math.Number" Value="18"/>
				<expression tag="Math.Number" Value="9"/>
				<expression tag="Math.Number" Value="64"/>
			</expression>
			<expression tag="List.List">
				<expression tag="Math.Number" Value="38"/>
				<expression tag="Math.Number" Value="35"/>
				<expression tag="Math.Number" Value="32"/>
				<expression tag="Math.Number" Value="61"/>
				<expression tag="Math.Number" Value="10"/>
				<expression tag="Math.Number" Value="63"/>
				<expression tag="Math.Number" Value="30"/>
				<expression tag="Math.Number" Value="17"/>
			</expression>
			<expression tag="List.List">
				<expression tag="Math.Number" Value="59"/>
				<expression tag="Math.Number" Value="2"/>
				<expression tag="Math.Number" Value="37"/>
				<expression tag="Math.Number" Value="40"/>
				<expression tag="Math.Number" Value="33"/>
				<expression tag="Math.Number" Value="28"/>
				<expression tag="Math.Number" Value="19"/>
				<expression tag="Math.Number" Value="8"/>
			</expression>
			<expression tag="List.List">
				<expression tag="Math.Number" Value="36"/>
				<expression tag="Math.Number" Value="49"/>
				<expression tag="Math.Number" Value="42"/>
				<expression tag="Math.Number" Value="27"/>
				<expression tag="Math.Number" Value="62"/>
				<expression tag="Math.Number" Value="11"/>
				<expression tag="Math.Number" Value="16"/>
				<expression tag="Math.Number" Value="29"/>
			</expression>
			<expression tag="List.List">
				<expression tag="Math.Number" Value="43"/>
				<expression tag="Math.Number" Value="58"/>
				<expression tag="Math.Number" Value="3"/>
				<expression tag="Math.Number" Value="50"/>
				<expression tag="Math.Number" Value="41"/>
				<expression tag="Math.Number" Value="24"/>
				<expression tag="Math.Number" Value="7"/>
				<expression tag="Math.Number" Value="20"/>
			</expression>
			<expression tag="List.List">
				<expression tag="Math.Number" Value="48"/>
				<expression tag="Math.Number" Value="51"/>
				<expression tag="Math.Number" Value="46"/>
				<expression tag="Math.Number" Value="55"/>
				<expression tag="Math.Number" Value="26"/>
				<expression tag="Math.Number" Value="21"/>
				<expression tag="Math.Number" Value="12"/>
				<expression tag="Math.Number" Value="15"/>
			</expression>
			<expression tag="List.List">
				<expression tag="Math.Number" Value="57"/>
				<expression tag="Math.Number" Value="44"/>
				<expression tag="Math.Number" Value="53"/>
				<expression tag="Math.Number" Value="4"/>
				<expression tag="Math.Number" Value="23"/>
				<expression tag="Math.Number" Value="14"/>
				<expression tag="Math.Number" Value="25"/>
				<expression tag="Math.Number" Value="6"/>
			</expression>
			<expression tag="List.List">
				<expression tag="Math.Number" Value="52"/>
				<expression tag="Math.Number" Value="47"/>
				<expression tag="Math.Number" Value="56"/>
				<expression tag="Math.Number" Value="45"/>
				<expression tag="Math.Number" Value="54"/>
				<expression tag="Math.Number" Value="5"/>
				<expression tag="Math.Number" Value="22"/>
				<expression tag="Math.Number" Value="13"/>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Typesetting.MultiParagraph">
			<expression tag="Typesetting.Paragraph">
				<expression tag="Typesetting.BoldChunk">
					<expression tag="String.Text" Value="Drawing a given solution"/>
				</expression>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="The following function, draws the chessborad and the given solution as lines."/>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="2">
		<expression tag="Symbolic.Assignment">
			<expression tag="Symbolic.Function">
				<expression tag="Symbolic.Symbol" Name="Graph knight tour"/>
				<expression tag="List.List">
					<expression tag="Symbolic.Symbol" Name="m"/>
					<expression tag="Symbolic.Symbol" Name="size"/>
				</expression>
			</expression>
			<expression tag="Programming.Block" Description="block" Expanded="True">
				<expression tag="Symbolic.Local">
					<expression tag="Symbolic.Assignment">
						<expression tag="Symbolic.Symbol" Name="n"/>
						<expression tag="Expression.Cardinality">
							<expression tag="Symbolic.Symbol" Name="m"/>
						</expression>
					</expression>
				</expression>
				<expression tag="Symbolic.Local">
					<expression tag="Symbolic.Assignment">
						<expression tag="Symbolic.Symbol" Name="g"/>
						<expression tag="Graphics.CreateRasterGraphics">
							<expression tag="Math.Arithmetic.Multiplication">
								<expression tag="Symbolic.Symbol" Name="n"/>
								<expression tag="Symbolic.Symbol" Name="size"/>
							</expression>
							<expression tag="Math.Arithmetic.Multiplication">
								<expression tag="Symbolic.Symbol" Name="n"/>
								<expression tag="Symbolic.Symbol" Name="size"/>
							</expression>
						</expression>
					</expression>
				</expression>
				<expression tag="Symbolic.Local">
					<expression tag="List.List">
						<expression tag="Symbolic.Symbol" Name="r"/>
						<expression tag="Symbolic.Symbol" Name="c"/>
						<expression tag="Symbolic.Symbol" Name="x"/>
						<expression tag="Symbolic.Symbol" Name="y"/>
					</expression>
				</expression>
				<expression tag="Symbolic.Local">
					<expression tag="Symbolic.Assignment">
						<expression tag="Symbolic.Function">
							<expression tag="Symbolic.Symbol" Name="search"/>
							<expression tag="List.List">
								<expression tag="Symbolic.Symbol" Name="i"/>
							</expression>
						</expression>
						<expression tag="Programming.ForFromTo">
							<expression tag="Programming.ForFromTo">
								<expression tag="Programming.InvertedIf">
									<expression tag="Symbolic.Return">
										<expression tag="List.List">
											<expression tag="Symbolic.Symbol" Name="r"/>
											<expression tag="Symbolic.Symbol" Name="c"/>
										</expression>
									</expression>
									<expression tag="Relation.Equals">
										<expression tag="Expression.Child">
											<expression tag="Symbolic.Symbol" Name="m"/>
											<expression tag="List.List">
												<expression tag="Symbolic.Symbol" Name="r"/>
												<expression tag="Symbolic.Symbol" Name="c"/>
											</expression>
										</expression>
										<expression tag="Symbolic.Symbol" Name="i"/>
									</expression>
								</expression>
								<expression tag="Symbolic.Symbol" Name="c"/>
								<expression tag="Math.Number" Value="1"/>
								<expression tag="Symbolic.Symbol" Name="n"/>
							</expression>
							<expression tag="Symbolic.Symbol" Name="r"/>
							<expression tag="Math.Number" Value="1"/>
							<expression tag="Symbolic.Symbol" Name="n"/>
						</expression>
					</expression>
				</expression>
				<expression tag="Graphics.SetColor">
					<expression tag="Symbolic.Symbol" Name="g"/>
					<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="0.43"/>
				</expression>
				<expression tag="Graphics.DrawRectanglePosSize">
					<expression tag="Symbolic.Symbol" Name="g"/>
					<expression tag="Math.Number" Value="1"/>
					<expression tag="Math.Number" Value="1"/>
					<expression tag="Math.Arithmetic.Addition">
						<expression tag="Math.Arithmetic.Multiplication">
							<expression tag="Symbolic.Symbol" Name="n"/>
							<expression tag="Symbolic.Symbol" Name="size"/>
						</expression>
						<expression tag="Math.Arithmetic.Negative">
							<expression tag="Math.Number" Value="1"/>
						</expression>
					</expression>
					<expression tag="Math.Arithmetic.Addition">
						<expression tag="Math.Arithmetic.Multiplication">
							<expression tag="Symbolic.Symbol" Name="n"/>
							<expression tag="Symbolic.Symbol" Name="size"/>
						</expression>
						<expression tag="Math.Arithmetic.Negative">
							<expression tag="Math.Number" Value="1"/>
						</expression>
					</expression>
				</expression>
				<expression tag="Programming.ForFromTo">
					<expression tag="Programming.ForFromTo">
						<expression tag="Programming.InvertedIf">
							<expression tag="Graphics.FillRectanglePosSize">
								<expression tag="Symbolic.Symbol" Name="g"/>
								<expression tag="Math.Arithmetic.Multiplication">
									<expression tag="Math.Arithmetic.Addition">
										<expression tag="Symbolic.Symbol" Name="c"/>
										<expression tag="Math.Arithmetic.Negative">
											<expression tag="Math.Number" Value="1"/>
										</expression>
									</expression>
									<expression tag="Symbolic.Symbol" Name="size"/>
								</expression>
								<expression tag="Math.Arithmetic.Multiplication">
									<expression tag="Math.Arithmetic.Addition">
										<expression tag="Symbolic.Symbol" Name="r"/>
										<expression tag="Math.Arithmetic.Negative">
											<expression tag="Math.Number" Value="1"/>
										</expression>
									</expression>
									<expression tag="Symbolic.Symbol" Name="size"/>
								</expression>
								<expression tag="Symbolic.Symbol" Name="size"/>
								<expression tag="Symbolic.Symbol" Name="size"/>
							</expression>
							<expression tag="Math.Arithmetic.IsOdd">
								<expression tag="Math.Arithmetic.Addition">
									<expression tag="Symbolic.Symbol" Name="r"/>
									<expression tag="Symbolic.Symbol" Name="c"/>
								</expression>
							</expression>
						</expression>
						<expression tag="Symbolic.Symbol" Name="c"/>
						<expression tag="Math.Number" Value="1"/>
						<expression tag="Symbolic.Symbol" Name="n"/>
					</expression>
					<expression tag="Symbolic.Symbol" Name="r"/>
					<expression tag="Math.Number" Value="1"/>
					<expression tag="Symbolic.Symbol" Name="n"/>
				</expression>
				<expression tag="Graphics.SetColor">
					<expression tag="Symbolic.Symbol" Name="g"/>
					<expression tag="Color.Color" Red="0" Green="0" Blue="0" Alpha="1"/>
				</expression>
				<expression tag="Programming.ForFromTo">
					<expression tag="Programming.Block" Description="block" Expanded="True">
						<expression tag="Symbolic.Assignment">
							<expression tag="List.List">
								<expression tag="Symbolic.Symbol" Name="r"/>
								<expression tag="Symbolic.Symbol" Name="c"/>
							</expression>
							<expression tag="Symbolic.Function">
								<expression tag="Symbolic.Symbol" Name="search"/>
								<expression tag="List.List">
									<expression tag="Symbolic.Symbol" Name="i"/>
								</expression>
							</expression>
						</expression>
						<expression tag="Symbolic.Assignment">
							<expression tag="List.List">
								<expression tag="Symbolic.Symbol" Name="x"/>
								<expression tag="Symbolic.Symbol" Name="y"/>
							</expression>
							<expression tag="List.List">
								<expression tag="Math.Arithmetic.Addition">
									<expression tag="Math.Arithmetic.Multiplication">
										<expression tag="Symbolic.Symbol" Name="c"/>
										<expression tag="Symbolic.Symbol" Name="size"/>
									</expression>
									<expression tag="Math.Arithmetic.Negative">
										<expression tag="Math.Arithmetic.Division">
											<expression tag="Symbolic.Symbol" Name="size"/>
											<expression tag="Math.Number" Value="2"/>
										</expression>
									</expression>
								</expression>
								<expression tag="Math.Arithmetic.Addition">
									<expression tag="Math.Arithmetic.Multiplication">
										<expression tag="Symbolic.Symbol" Name="r"/>
										<expression tag="Symbolic.Symbol" Name="size"/>
									</expression>
									<expression tag="Math.Arithmetic.Negative">
										<expression tag="Math.Arithmetic.Division">
											<expression tag="Symbolic.Symbol" Name="size"/>
											<expression tag="Math.Number" Value="2"/>
										</expression>
									</expression>
								</expression>
							</expression>
						</expression>
						<expression tag="Programming.IfElse">
							<expression tag="Relation.Equals">
								<expression tag="Symbolic.Symbol" Name="i"/>
								<expression tag="Math.Number" Value="1"/>
							</expression>
							<expression tag="Graphics.SetPos">
								<expression tag="Symbolic.Symbol" Name="g"/>
								<expression tag="Symbolic.Symbol" Name="x"/>
								<expression tag="Symbolic.Symbol" Name="y"/>
							</expression>
							<expression tag="Graphics.DrawLineToPos">
								<expression tag="Symbolic.Symbol" Name="g"/>
								<expression tag="Symbolic.Symbol" Name="x"/>
								<expression tag="Symbolic.Symbol" Name="y"/>
							</expression>
						</expression>
						<expression tag="Graphics.FillEllipseCenterRadius">
							<expression tag="Symbolic.Symbol" Name="g"/>
							<expression tag="Symbolic.Symbol" Name="x"/>
							<expression tag="Symbolic.Symbol" Name="y"/>
							<expression tag="Math.Number" Value="3"/>
						</expression>
					</expression>
					<expression tag="Symbolic.Symbol" Name="i"/>
					<expression tag="Math.Number" Value="1"/>
					<expression tag="Math.Arithmetic.Exponentiation">
						<expression tag="Symbolic.Symbol" Name="n"/>
						<expression tag="Math.Number" Value="2"/>
					</expression>
				</expression>
				<expression tag="Symbolic.Symbol" Name="g"/>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Symbolic.Function">
			<expression tag="Symbolic.Symbol" Name="Graph knight tour"/>
			<expression tag="List.List">
				<expression tag="List.List">
					<expression tag="List.List">
						<expression tag="Math.Number" Value="23"/>
						<expression tag="Math.Number" Value="10"/>
						<expression tag="Math.Number" Value="15"/>
						<expression tag="Math.Number" Value="4"/>
						<expression tag="Math.Number" Value="25"/>
					</expression>
					<expression tag="List.List">
						<expression tag="Math.Number" Value="16"/>
						<expression tag="Math.Number" Value="5"/>
						<expression tag="Math.Number" Value="24"/>
						<expression tag="Math.Number" Value="9"/>
						<expression tag="Math.Number" Value="14"/>
					</expression>
					<expression tag="List.List">
						<expression tag="Math.Number" Value="11"/>
						<expression tag="Math.Number" Value="22"/>
						<expression tag="Math.Number" Value="1"/>
						<expression tag="Math.Number" Value="18"/>
						<expression tag="Math.Number" Value="3"/>
					</expression>
					<expression tag="List.List">
						<expression tag="Math.Number" Value="6"/>
						<expression tag="Math.Number" Value="17"/>
						<expression tag="Math.Number" Value="20"/>
						<expression tag="Math.Number" Value="13"/>
						<expression tag="Math.Number" Value="8"/>
					</expression>
					<expression tag="List.List">
						<expression tag="Math.Number" Value="21"/>
						<expression tag="Math.Number" Value="12"/>
						<expression tag="Math.Number" Value="7"/>
						<expression tag="Math.Number" Value="2"/>
						<expression tag="Math.Number" Value="19"/>
					</expression>
				</expression>
				<expression tag="Math.Number" Value="50"/>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="1">
		<expression tag="Graphics.RasterGraphics" Value=""/>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Symbolic.Function">
			<expression tag="Symbolic.Symbol" Name="Graph knight tour"/>
			<expression tag="List.List">
				<expression tag="List.List">
					<expression tag="List.List">
						<expression tag="Math.Number" Value="1"/>
						<expression tag="Math.Number" Value="60"/>
						<expression tag="Math.Number" Value="39"/>
						<expression tag="Math.Number" Value="34"/>
						<expression tag="Math.Number" Value="31"/>
						<expression tag="Math.Number" Value="18"/>
						<expression tag="Math.Number" Value="9"/>
						<expression tag="Math.Number" Value="64"/>
					</expression>
					<expression tag="List.List">
						<expression tag="Math.Number" Value="38"/>
						<expression tag="Math.Number" Value="35"/>
						<expression tag="Math.Number" Value="32"/>
						<expression tag="Math.Number" Value="61"/>
						<expression tag="Math.Number" Value="10"/>
						<expression tag="Math.Number" Value="63"/>
						<expression tag="Math.Number" Value="30"/>
						<expression tag="Math.Number" Value="17"/>
					</expression>
					<expression tag="List.List">
						<expression tag="Math.Number" Value="59"/>
						<expression tag="Math.Number" Value="2"/>
						<expression tag="Math.Number" Value="37"/>
						<expression tag="Math.Number" Value="40"/>
						<expression tag="Math.Number" Value="33"/>
						<expression tag="Math.Number" Value="28"/>
						<expression tag="Math.Number" Value="19"/>
						<expression tag="Math.Number" Value="8"/>
					</expression>
					<expression tag="List.List">
						<expression tag="Math.Number" Value="36"/>
						<expression tag="Math.Number" Value="49"/>
						<expression tag="Math.Number" Value="42"/>
						<expression tag="Math.Number" Value="27"/>
						<expression tag="Math.Number" Value="62"/>
						<expression tag="Math.Number" Value="11"/>
						<expression tag="Math.Number" Value="16"/>
						<expression tag="Math.Number" Value="29"/>
					</expression>
					<expression tag="List.List">
						<expression tag="Math.Number" Value="43"/>
						<expression tag="Math.Number" Value="58"/>
						<expression tag="Math.Number" Value="3"/>
						<expression tag="Math.Number" Value="50"/>
						<expression tag="Math.Number" Value="41"/>
						<expression tag="Math.Number" Value="24"/>
						<expression tag="Math.Number" Value="7"/>
						<expression tag="Math.Number" Value="20"/>
					</expression>
					<expression tag="List.List">
						<expression tag="Math.Number" Value="48"/>
						<expression tag="Math.Number" Value="51"/>
						<expression tag="Math.Number" Value="46"/>
						<expression tag="Math.Number" Value="55"/>
						<expression tag="Math.Number" Value="26"/>
						<expression tag="Math.Number" Value="21"/>
						<expression tag="Math.Number" Value="12"/>
						<expression tag="Math.Number" Value="15"/>
					</expression>
					<expression tag="List.List">
						<expression tag="Math.Number" Value="57"/>
						<expression tag="Math.Number" Value="44"/>
						<expression tag="Math.Number" Value="53"/>
						<expression tag="Math.Number" Value="4"/>
						<expression tag="Math.Number" Value="23"/>
						<expression tag="Math.Number" Value="14"/>
						<expression tag="Math.Number" Value="25"/>
						<expression tag="Math.Number" Value="6"/>
					</expression>
					<expression tag="List.List">
						<expression tag="Math.Number" Value="52"/>
						<expression tag="Math.Number" Value="47"/>
						<expression tag="Math.Number" Value="56"/>
						<expression tag="Math.Number" Value="45"/>
						<expression tag="Math.Number" Value="54"/>
						<expression tag="Math.Number" Value="5"/>
						<expression tag="Math.Number" Value="22"/>
						<expression tag="Math.Number" Value="13"/>
					</expression>
				</expression>
				<expression tag="Math.Number" Value="50"/>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="1">
		<expression tag="Graphics.RasterGraphics" Value=""/>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Typesetting.MultiParagraph">
			<expression tag="Typesetting.Paragraph">
				<expression tag="Typesetting.BoldChunk">
					<expression tag="String.Text" Value="See also:"/>
				</expression>
			</expression>
			<expression tag="Typesetting.BulletedList">
				<expression tag="Typesetting.Paragraph">
					<expression tag="String.Text" Value="Other"/>
					<expression tag="Internet.UniformResourceLocator" Value="/?script=articles/Rosetta_Code_examples" Description="Rosetta code"/>
					<expression tag="String.Text" Value="examples"/>
				</expression>
				<expression tag="Typesetting.Paragraph">
					<expression tag="String.Text" Value="Other"/>
					<expression tag="Internet.UniformResourceLocator" Value="/?script=articles/Graphics_examples" Description="graphics"/>
					<expression tag="String.Text" Value="examples"/>
				</expression>
				<expression tag="Typesetting.Paragraph">
					<expression tag="String.Text" Value="Other"/>
					<expression tag="Internet.UniformResourceLocator" Value="/?script=articles/Color_examples" Description="color"/>
					<expression tag="String.Text" Value="examples"/>
				</expression>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="Author: Laurence R. Ugalde"/>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="Last modified:"/>
				<expression tag="Time.Time" Value="1621189800000"/>
			</expression>
		</expression>
	</expression>
</expression>