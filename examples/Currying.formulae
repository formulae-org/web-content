<expression tag="Formulae.Script" Modules="org.formulae.typesetting,org.formulae.text.string,org.formulae.symbolic,org.formulae.list,org.formulae.math.arithmetic,org.formulae.time">
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Typesetting.MultiParagraph">
			<expression tag="Typesetting.Paragraph">
				<expression tag="Typesetting.BoldChunk">
					<expression tag="String.Text" Value="Currying"/>
				</expression>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="Internet.UniformResourceLocator" Value="https://en.wikipedia.org/wiki/Currying" Description="Currying"/>
				<expression tag="String.Text" Value="is the technique of converting a function that takes multiple arguments into a sequence of functions that each takes a single argument."/>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="In this script is shown how to curry in Fōrmulæ language."/>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="This is also a solution for the"/>
				<expression tag="Internet.UniformResourceLocator" Value="https://rosettacode.org/wiki/Currying" Description="Currying"/>
				<expression tag="String.Text" Value="exercise, described in the website"/>
				<expression tag="Internet.UniformResourceLocator" Value="https://rosettacode.org/wiki/Rosetta_Code" Description="Rosetta code."/>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="Typesetting.BoldChunk">
					<expression tag="String.Text" Value="Solution"/>
				</expression>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="In Fōrmulæ, a lambda application can specify less parameters of its definition. It such a case, a currying is applied, which returns a lambda expression defined with the remaining parameters."/>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="The following is a simple definition of a lambda expression:"/>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="2">
		<expression tag="Symbolic.Assignment">
			<expression tag="Symbolic.Symbol" Name="f"/>
			<expression tag="Symbolic.Lambda">
				<expression tag="List.List">
					<expression tag="Symbolic.Symbol" Name="x"/>
					<expression tag="Symbolic.Symbol" Name="y"/>
				</expression>
				<expression tag="Math.Arithmetic.Addition">
					<expression tag="Symbolic.Symbol" Name="x"/>
					<expression tag="Math.Arithmetic.Exponentiation">
						<expression tag="Symbolic.Symbol" Name="y"/>
						<expression tag="Math.Number" Value="2"/>
					</expression>
				</expression>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Typesetting.Paragraph">
			<expression tag="String.Text" Value="when a lambda application is called with the same number of arguments, the result is the habitual:"/>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Symbolic.LambdaApplication">
			<expression tag="Symbolic.Symbol" Name="f"/>
			<expression tag="List.List">
				<expression tag="Math.Number" Value="2"/>
				<expression tag="Math.Number" Value="3"/>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="1">
		<expression tag="Math.Number" Value="11"/>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Typesetting.Paragraph">
			<expression tag="String.Text" Value="However, if a less number of parameters is applied, currying is performed. Nothe that the result is another lambda expression."/>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Symbolic.LambdaApplication">
			<expression tag="Symbolic.Symbol" Name="f"/>
			<expression tag="List.List">
				<expression tag="Math.Number" Value="2"/>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="1">
		<expression tag="Symbolic.Lambda">
			<expression tag="List.List">
				<expression tag="Symbolic.Symbol" Name="y"/>
			</expression>
			<expression tag="Math.Arithmetic.Addition">
				<expression tag="Math.Number" Value="2"/>
				<expression tag="Math.Arithmetic.Exponentiation">
					<expression tag="Symbolic.Symbol" Name="y"/>
					<expression tag="Math.Number" Value="2"/>
				</expression>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Typesetting.MultiParagraph">
			<expression tag="Typesetting.Paragraph">
				<expression tag="Typesetting.BoldChunk">
					<expression tag="String.Text" Value="See also:"/>
				</expression>
			</expression>
			<expression tag="Typesetting.BulletedList">
				<expression tag="Typesetting.Paragraph">
					<expression tag="String.Text" Value="Other"/>
					<expression tag="Internet.UniformResourceLocator" Value="/?script=articles/Rosetta_Code_examples" Description="Rosetta code"/>
					<expression tag="String.Text" Value="examples"/>
				</expression>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="Author: Laurence R. Ugalde"/>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="Last modified:"/>
				<expression tag="Time.Time" Value="1621572060000"/>
			</expression>
		</expression>
	</expression>
</expression>