<expression tag="Formulae.Script" Modules="org.formulae.typesetting,org.formulae.text.string,org.formulae.symbolic,org.formulae.list,org.formulae.programming,org.formulae.math.arithmetic,org.formulae.expression,org.formulae.relation,org.formulae.logic,org.formulae.graphics.raster,org.formulae.time">
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Typesetting.MultiParagraph">
			<expression tag="Typesetting.Paragraph">
				<expression tag="Typesetting.BoldChunk">
					<expression tag="String.Text" Value="Ulam spiral"/>
				</expression>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="The"/>
				<expression tag="Internet.UniformResourceLocator" Value="https://en.wikipedia.org/wiki/Ulam_spiral" Description="Ulam spiral"/>
				<expression tag="String.Text" Value="or prime spiral is a graphical depiction of the set of prime numbers, devised by mathematician Stanisław Ulam in 1963 and popularized in Martin Gardner's Mathematical Games column in Scientific American a short time later. It is constructed by writing the positive integers in a square spiral and specially marking the prime numbers."/>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="In this script a program to draw a Ulam spiral is presented."/>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="This is also a solution for the"/>
				<expression tag="Internet.UniformResourceLocator" Value="https://rosettacode.org/wiki/Ulam_spiral_(for_primes)" Description="Ulam spiral (for primes)"/>
				<expression tag="String.Text" Value="exercise, described in the website"/>
				<expression tag="Internet.UniformResourceLocator" Value="https://rosettacode.org/wiki/Rosetta_Code" Description="Rosetta code."/>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="Typesetting.BoldChunk">
					<expression tag="String.Text" Value="Programs"/>
				</expression>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="Typesetting.BoldChunk">
					<expression tag="String.Text" Value="Version 1. As a matrix."/>
				</expression>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="2">
		<expression tag="Symbolic.Assignment">
			<expression tag="Symbolic.Function">
				<expression tag="Symbolic.Symbol" Name="UlamMatrix"/>
				<expression tag="List.List">
					<expression tag="Symbolic.Symbol" Name="size"/>
					<expression tag="Symbolic.Symbol" Name="λ"/>
				</expression>
			</expression>
			<expression tag="Programming.Block" Description="block" Expanded="True">
				<expression tag="Symbolic.Local">
					<expression tag="Symbolic.Assignment">
						<expression tag="Symbolic.Symbol" Name="m"/>
						<expression tag="List.CreateList">
							<expression tag="List.CreateList">
								<expression tag="Null"/>
								<expression tag="Symbolic.Symbol" Name="size"/>
							</expression>
							<expression tag="Symbolic.Symbol" Name="size"/>
						</expression>
					</expression>
				</expression>
				<expression tag="Symbolic.Local">
					<expression tag="Symbolic.Assignment">
						<expression tag="List.List">
							<expression tag="Symbolic.Symbol" Name="r"/>
							<expression tag="Symbolic.Symbol" Name="c"/>
						</expression>
						<expression tag="List.List">
							<expression tag="Math.Arithmetic.Addition">
								<expression tag="Math.Arithmetic.Div">
									<expression tag="Symbolic.Symbol" Name="size"/>
									<expression tag="Math.Number" Value="2"/>
								</expression>
								<expression tag="Math.Number" Value="1"/>
							</expression>
							<expression tag="Math.Arithmetic.Div">
								<expression tag="Math.Arithmetic.Addition">
									<expression tag="Symbolic.Symbol" Name="size"/>
									<expression tag="Math.Number" Value="1"/>
								</expression>
								<expression tag="Math.Number" Value="2"/>
							</expression>
						</expression>
					</expression>
				</expression>
				<expression tag="Symbolic.Local">
					<expression tag="Symbolic.Assignment">
						<expression tag="List.List">
							<expression tag="Symbolic.Symbol" Name="i"/>
							<expression tag="Symbolic.Symbol" Name="n"/>
							<expression tag="Symbolic.Symbol" Name="dir"/>
							<expression tag="Symbolic.Symbol" Name="t"/>
							<expression tag="Symbolic.Symbol" Name="s"/>
						</expression>
						<expression tag="List.List">
							<expression tag="Math.Number" Value="0"/>
							<expression tag="Math.Number" Value="1"/>
							<expression tag="String.String" Value="r"/>
							<expression tag="Math.Number" Value="1"/>
							<expression tag="Math.Number" Value="1"/>
						</expression>
					</expression>
				</expression>
				<expression tag="Programming.InvertedIf">
					<expression tag="Symbolic.Assignment">
						<expression tag="Expression.Child">
							<expression tag="Symbolic.Symbol" Name="m"/>
							<expression tag="List.List">
								<expression tag="Symbolic.Symbol" Name="r"/>
								<expression tag="Symbolic.Symbol" Name="c"/>
							</expression>
						</expression>
						<expression tag="Symbolic.Symbol" Name="s"/>
					</expression>
					<expression tag="Symbolic.LambdaApplication">
						<expression tag="Symbolic.Symbol" Name="λ"/>
						<expression tag="List.List">
							<expression tag="Symbolic.Symbol" Name="s"/>
						</expression>
					</expression>
				</expression>
				<expression tag="Programming.While">
					<expression tag="Relation.Less">
						<expression tag="Symbolic.Symbol" Name="t"/>
						<expression tag="Math.Arithmetic.Exponentiation">
							<expression tag="Symbolic.Symbol" Name="size"/>
							<expression tag="Math.Number" Value="2"/>
						</expression>
					</expression>
					<expression tag="Programming.Block" Description="block" Expanded="True">
						<expression tag="Programming.ComparativeSwitch">
							<expression tag="Symbolic.Symbol" Name="dir"/>
							<expression tag="String.String" Value="r"/>
							<expression tag="Programming.InvertedIf">
								<expression tag="Symbolic.Assignment">
									<expression tag="List.List">
										<expression tag="Symbolic.Symbol" Name="i"/>
										<expression tag="Symbolic.Symbol" Name="dir"/>
									</expression>
									<expression tag="List.List">
										<expression tag="Math.Number" Value="0"/>
										<expression tag="String.String" Value="u"/>
									</expression>
								</expression>
								<expression tag="Relation.GreaterOrEquals">
									<expression tag="Symbolic.Symbol" Name="i"/>
									<expression tag="Symbolic.Symbol" Name="n"/>
								</expression>
							</expression>
							<expression tag="String.String" Value="u"/>
							<expression tag="Programming.InvertedIf">
								<expression tag="Symbolic.Assignment">
									<expression tag="List.List">
										<expression tag="Symbolic.Symbol" Name="i"/>
										<expression tag="Symbolic.Symbol" Name="n"/>
										<expression tag="Symbolic.Symbol" Name="dir"/>
									</expression>
									<expression tag="List.List">
										<expression tag="Math.Number" Value="0"/>
										<expression tag="Math.Arithmetic.Addition">
											<expression tag="Symbolic.Symbol" Name="n"/>
											<expression tag="Math.Number" Value="1"/>
										</expression>
										<expression tag="String.String" Value="l"/>
									</expression>
								</expression>
								<expression tag="Relation.GreaterOrEquals">
									<expression tag="Symbolic.Symbol" Name="i"/>
									<expression tag="Symbolic.Symbol" Name="n"/>
								</expression>
							</expression>
							<expression tag="String.String" Value="l"/>
							<expression tag="Programming.InvertedIf">
								<expression tag="Symbolic.Assignment">
									<expression tag="List.List">
										<expression tag="Symbolic.Symbol" Name="i"/>
										<expression tag="Symbolic.Symbol" Name="dir"/>
									</expression>
									<expression tag="List.List">
										<expression tag="Math.Number" Value="0"/>
										<expression tag="String.String" Value="d"/>
									</expression>
								</expression>
								<expression tag="Relation.GreaterOrEquals">
									<expression tag="Symbolic.Symbol" Name="i"/>
									<expression tag="Symbolic.Symbol" Name="n"/>
								</expression>
							</expression>
							<expression tag="Programming.InvertedIf">
								<expression tag="Symbolic.Assignment">
									<expression tag="List.List">
										<expression tag="Symbolic.Symbol" Name="i"/>
										<expression tag="Symbolic.Symbol" Name="n"/>
										<expression tag="Symbolic.Symbol" Name="dir"/>
									</expression>
									<expression tag="List.List">
										<expression tag="Math.Number" Value="0"/>
										<expression tag="Math.Arithmetic.Addition">
											<expression tag="Symbolic.Symbol" Name="n"/>
											<expression tag="Math.Number" Value="1"/>
										</expression>
										<expression tag="String.String" Value="r"/>
									</expression>
								</expression>
								<expression tag="Relation.GreaterOrEquals">
									<expression tag="Symbolic.Symbol" Name="i"/>
									<expression tag="Symbolic.Symbol" Name="n"/>
								</expression>
							</expression>
						</expression>
						<expression tag="Programming.ComparativeSwitch">
							<expression tag="Symbolic.Symbol" Name="dir"/>
							<expression tag="String.String" Value="r"/>
							<expression tag="Symbolic.Assignment">
								<expression tag="Symbolic.Symbol" Name="c"/>
								<expression tag="Math.Arithmetic.Addition">
									<expression tag="Symbolic.Symbol" Name="c"/>
									<expression tag="Math.Number" Value="1"/>
								</expression>
							</expression>
							<expression tag="String.String" Value="u"/>
							<expression tag="Symbolic.Assignment">
								<expression tag="Symbolic.Symbol" Name="r"/>
								<expression tag="Math.Arithmetic.Addition">
									<expression tag="Symbolic.Symbol" Name="r"/>
									<expression tag="Math.Arithmetic.Negative">
										<expression tag="Math.Number" Value="1"/>
									</expression>
								</expression>
							</expression>
							<expression tag="String.String" Value="l"/>
							<expression tag="Symbolic.Assignment">
								<expression tag="Symbolic.Symbol" Name="c"/>
								<expression tag="Math.Arithmetic.Addition">
									<expression tag="Symbolic.Symbol" Name="c"/>
									<expression tag="Math.Arithmetic.Negative">
										<expression tag="Math.Number" Value="1"/>
									</expression>
								</expression>
							</expression>
							<expression tag="Symbolic.Assignment">
								<expression tag="Symbolic.Symbol" Name="r"/>
								<expression tag="Math.Arithmetic.Addition">
									<expression tag="Symbolic.Symbol" Name="r"/>
									<expression tag="Math.Number" Value="1"/>
								</expression>
							</expression>
						</expression>
						<expression tag="Symbolic.Assignment">
							<expression tag="List.List">
								<expression tag="Symbolic.Symbol" Name="s"/>
								<expression tag="Symbolic.Symbol" Name="i"/>
							</expression>
							<expression tag="List.List">
								<expression tag="Math.Arithmetic.Addition">
									<expression tag="Symbolic.Symbol" Name="s"/>
									<expression tag="Math.Number" Value="1"/>
								</expression>
								<expression tag="Math.Arithmetic.Addition">
									<expression tag="Symbolic.Symbol" Name="i"/>
									<expression tag="Math.Number" Value="1"/>
								</expression>
							</expression>
						</expression>
						<expression tag="Programming.If">
							<expression tag="Logic.Conjunction">
								<expression tag="Relation.GreaterOrEquals">
									<expression tag="Symbolic.Symbol" Name="r"/>
									<expression tag="Math.Number" Value="1"/>
								</expression>
								<expression tag="Relation.LessOrEquals">
									<expression tag="Symbolic.Symbol" Name="r"/>
									<expression tag="Symbolic.Symbol" Name="size"/>
								</expression>
								<expression tag="Relation.GreaterOrEquals">
									<expression tag="Symbolic.Symbol" Name="c"/>
									<expression tag="Math.Number" Value="1"/>
								</expression>
								<expression tag="Relation.LessOrEquals">
									<expression tag="Symbolic.Symbol" Name="c"/>
									<expression tag="Symbolic.Symbol" Name="size"/>
								</expression>
							</expression>
							<expression tag="Programming.Block" Description="block" Expanded="True">
								<expression tag="Programming.InvertedIf">
									<expression tag="Symbolic.Assignment">
										<expression tag="Expression.Child">
											<expression tag="Symbolic.Symbol" Name="m"/>
											<expression tag="List.List">
												<expression tag="Symbolic.Symbol" Name="r"/>
												<expression tag="Symbolic.Symbol" Name="c"/>
											</expression>
										</expression>
										<expression tag="Symbolic.Symbol" Name="s"/>
									</expression>
									<expression tag="Symbolic.LambdaApplication">
										<expression tag="Symbolic.Symbol" Name="λ"/>
										<expression tag="List.List">
											<expression tag="Symbolic.Symbol" Name="s"/>
										</expression>
									</expression>
								</expression>
								<expression tag="Symbolic.Assignment">
									<expression tag="Symbolic.Symbol" Name="t"/>
									<expression tag="Math.Arithmetic.Addition">
										<expression tag="Symbolic.Symbol" Name="t"/>
										<expression tag="Math.Number" Value="1"/>
									</expression>
								</expression>
							</expression>
						</expression>
					</expression>
				</expression>
				<expression tag="Symbolic.Symbol" Name="m"/>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Symbolic.Function">
			<expression tag="Symbolic.Symbol" Name="UlamMatrix"/>
			<expression tag="List.List">
				<expression tag="Math.Number" Value="15"/>
				<expression tag="Symbolic.Lambda">
					<expression tag="List.List">
						<expression tag="Symbolic.Symbol" Name="s"/>
					</expression>
					<expression tag="Math.Arithmetic.IsPrime">
						<expression tag="Symbolic.Symbol" Name="s"/>
					</expression>
				</expression>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="1">
		<expression tag="List.List">
			<expression tag="List.List">
				<expression tag="Math.Number" Value="197"/>
				<expression tag="Null"/>
				<expression tag="Null"/>
				<expression tag="Null"/>
				<expression tag="Math.Number" Value="193"/>
				<expression tag="Null"/>
				<expression tag="Math.Number" Value="191"/>
				<expression tag="Null"/>
				<expression tag="Null"/>
				<expression tag="Null"/>
				<expression tag="Null"/>
				<expression tag="Null"/>
				<expression tag="Null"/>
				<expression tag="Null"/>
				<expression tag="Null"/>
			</expression>
			<expression tag="List.List">
				<expression tag="Null"/>
				<expression tag="Null"/>
				<expression tag="Null"/>
				<expression tag="Null"/>
				<expression tag="Null"/>
				<expression tag="Null"/>
				<expression tag="Null"/>
				<expression tag="Math.Number" Value="139"/>
				<expression tag="Null"/>
				<expression tag="Math.Number" Value="137"/>
				<expression tag="Null"/>
				<expression tag="Null"/>
				<expression tag="Null"/>
				<expression tag="Null"/>
				<expression tag="Null"/>
			</expression>
			<expression tag="List.List">
				<expression tag="Math.Number" Value="199"/>
				<expression tag="Null"/>
				<expression tag="Math.Number" Value="101"/>
				<expression tag="Null"/>
				<expression tag="Null"/>
				<expression tag="Null"/>
				<expression tag="Math.Number" Value="97"/>
				<expression tag="Null"/>
				<expression tag="Null"/>
				<expression tag="Null"/>
				<expression tag="Null"/>
				<expression tag="Null"/>
				<expression tag="Null"/>
				<expression tag="Null"/>
				<expression tag="Math.Number" Value="181"/>
			</expression>
			<expression tag="List.List">
				<expression tag="Null"/>
				<expression tag="Null"/>
				<expression tag="Null"/>
				<expression tag="Null"/>
				<expression tag="Null"/>
				<expression tag="Null"/>
				<expression tag="Null"/>
				<expression tag="Math.Number" Value="61"/>
				<expression tag="Null"/>
				<expression tag="Math.Number" Value="59"/>
				<expression tag="Null"/>
				<expression tag="Null"/>
				<expression tag="Null"/>
				<expression tag="Math.Number" Value="131"/>
				<expression tag="Null"/>
			</expression>
			<expression tag="List.List">
				<expression tag="Null"/>
				<expression tag="Null"/>
				<expression tag="Math.Number" Value="103"/>
				<expression tag="Null"/>
				<expression tag="Math.Number" Value="37"/>
				<expression tag="Null"/>
				<expression tag="Null"/>
				<expression tag="Null"/>
				<expression tag="Null"/>
				<expression tag="Null"/>
				<expression tag="Math.Number" Value="31"/>
				<expression tag="Null"/>
				<expression tag="Math.Number" Value="89"/>
				<expression tag="Null"/>
				<expression tag="Math.Number" Value="179"/>
			</expression>
			<expression tag="List.List">
				<expression tag="Null"/>
				<expression tag="Math.Number" Value="149"/>
				<expression tag="Null"/>
				<expression tag="Math.Number" Value="67"/>
				<expression tag="Null"/>
				<expression tag="Math.Number" Value="17"/>
				<expression tag="Null"/>
				<expression tag="Null"/>
				<expression tag="Null"/>
				<expression tag="Math.Number" Value="13"/>
				<expression tag="Null"/>
				<expression tag="Null"/>
				<expression tag="Null"/>
				<expression tag="Null"/>
				<expression tag="Null"/>
			</expression>
			<expression tag="List.List">
				<expression tag="Null"/>
				<expression tag="Null"/>
				<expression tag="Null"/>
				<expression tag="Null"/>
				<expression tag="Null"/>
				<expression tag="Null"/>
				<expression tag="Math.Number" Value="5"/>
				<expression tag="Null"/>
				<expression tag="Math.Number" Value="3"/>
				<expression tag="Null"/>
				<expression tag="Math.Number" Value="29"/>
				<expression tag="Null"/>
				<expression tag="Null"/>
				<expression tag="Null"/>
				<expression tag="Null"/>
			</expression>
			<expression tag="List.List">
				<expression tag="Null"/>
				<expression tag="Math.Number" Value="151"/>
				<expression tag="Null"/>
				<expression tag="Null"/>
				<expression tag="Null"/>
				<expression tag="Math.Number" Value="19"/>
				<expression tag="Null"/>
				<expression tag="Null"/>
				<expression tag="Math.Number" Value="2"/>
				<expression tag="Math.Number" Value="11"/>
				<expression tag="Null"/>
				<expression tag="Math.Number" Value="53"/>
				<expression tag="Null"/>
				<expression tag="Math.Number" Value="127"/>
				<expression tag="Null"/>
			</expression>
			<expression tag="List.List">
				<expression tag="Null"/>
				<expression tag="Null"/>
				<expression tag="Math.Number" Value="107"/>
				<expression tag="Null"/>
				<expression tag="Math.Number" Value="41"/>
				<expression tag="Null"/>
				<expression tag="Math.Number" Value="7"/>
				<expression tag="Null"/>
				<expression tag="Null"/>
				<expression tag="Null"/>
				<expression tag="Null"/>
				<expression tag="Null"/>
				<expression tag="Null"/>
				<expression tag="Null"/>
				<expression tag="Null"/>
			</expression>
			<expression tag="List.List">
				<expression tag="Null"/>
				<expression tag="Null"/>
				<expression tag="Null"/>
				<expression tag="Math.Number" Value="71"/>
				<expression tag="Null"/>
				<expression tag="Null"/>
				<expression tag="Null"/>
				<expression tag="Math.Number" Value="23"/>
				<expression tag="Null"/>
				<expression tag="Null"/>
				<expression tag="Null"/>
				<expression tag="Null"/>
				<expression tag="Null"/>
				<expression tag="Null"/>
				<expression tag="Null"/>
			</expression>
			<expression tag="List.List">
				<expression tag="Null"/>
				<expression tag="Null"/>
				<expression tag="Math.Number" Value="109"/>
				<expression tag="Null"/>
				<expression tag="Math.Number" Value="43"/>
				<expression tag="Null"/>
				<expression tag="Null"/>
				<expression tag="Null"/>
				<expression tag="Math.Number" Value="47"/>
				<expression tag="Null"/>
				<expression tag="Null"/>
				<expression tag="Null"/>
				<expression tag="Math.Number" Value="83"/>
				<expression tag="Null"/>
				<expression tag="Math.Number" Value="173"/>
			</expression>
			<expression tag="List.List">
				<expression tag="Null"/>
				<expression tag="Null"/>
				<expression tag="Null"/>
				<expression tag="Math.Number" Value="73"/>
				<expression tag="Null"/>
				<expression tag="Null"/>
				<expression tag="Null"/>
				<expression tag="Null"/>
				<expression tag="Null"/>
				<expression tag="Math.Number" Value="79"/>
				<expression tag="Null"/>
				<expression tag="Null"/>
				<expression tag="Null"/>
				<expression tag="Null"/>
				<expression tag="Null"/>
			</expression>
			<expression tag="List.List">
				<expression tag="Null"/>
				<expression tag="Null"/>
				<expression tag="Null"/>
				<expression tag="Null"/>
				<expression tag="Math.Number" Value="113"/>
				<expression tag="Null"/>
				<expression tag="Null"/>
				<expression tag="Null"/>
				<expression tag="Null"/>
				<expression tag="Null"/>
				<expression tag="Null"/>
				<expression tag="Null"/>
				<expression tag="Null"/>
				<expression tag="Null"/>
				<expression tag="Null"/>
			</expression>
			<expression tag="List.List">
				<expression tag="Null"/>
				<expression tag="Math.Number" Value="157"/>
				<expression tag="Null"/>
				<expression tag="Null"/>
				<expression tag="Null"/>
				<expression tag="Null"/>
				<expression tag="Null"/>
				<expression tag="Math.Number" Value="163"/>
				<expression tag="Null"/>
				<expression tag="Null"/>
				<expression tag="Null"/>
				<expression tag="Math.Number" Value="167"/>
				<expression tag="Null"/>
				<expression tag="Null"/>
				<expression tag="Null"/>
			</expression>
			<expression tag="List.List">
				<expression tag="Math.Number" Value="211"/>
				<expression tag="Null"/>
				<expression tag="Null"/>
				<expression tag="Null"/>
				<expression tag="Null"/>
				<expression tag="Null"/>
				<expression tag="Null"/>
				<expression tag="Null"/>
				<expression tag="Null"/>
				<expression tag="Null"/>
				<expression tag="Null"/>
				<expression tag="Null"/>
				<expression tag="Math.Number" Value="223"/>
				<expression tag="Null"/>
				<expression tag="Null"/>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Typesetting.Paragraph">
			<expression tag="Typesetting.BoldChunk">
				<expression tag="String.Text" Value="Version 2. As a graphics"/>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="2">
		<expression tag="Symbolic.Assignment">
			<expression tag="Symbolic.Function">
				<expression tag="Symbolic.Symbol" Name="UlamSpiral"/>
				<expression tag="List.List">
					<expression tag="Symbolic.Symbol" Name="size"/>
					<expression tag="Symbolic.Symbol" Name="block"/>
					<expression tag="Symbolic.Symbol" Name="λ"/>
				</expression>
			</expression>
			<expression tag="Programming.Block" Description="block" Expanded="True">
				<expression tag="Symbolic.Local">
					<expression tag="Symbolic.Assignment">
						<expression tag="Symbolic.Symbol" Name="g"/>
						<expression tag="Graphics.CreateRasterGraphics">
							<expression tag="Math.Arithmetic.Multiplication">
								<expression tag="Symbolic.Symbol" Name="size"/>
								<expression tag="Symbolic.Symbol" Name="block"/>
							</expression>
							<expression tag="Math.Arithmetic.Multiplication">
								<expression tag="Symbolic.Symbol" Name="size"/>
								<expression tag="Symbolic.Symbol" Name="block"/>
							</expression>
						</expression>
					</expression>
				</expression>
				<expression tag="Symbolic.Local">
					<expression tag="Symbolic.Assignment">
						<expression tag="List.List">
							<expression tag="Symbolic.Symbol" Name="x"/>
							<expression tag="Symbolic.Symbol" Name="y"/>
						</expression>
						<expression tag="List.List">
							<expression tag="Math.Arithmetic.Addition">
								<expression tag="Math.Arithmetic.Div">
									<expression tag="Symbolic.Symbol" Name="size"/>
									<expression tag="Math.Number" Value="2"/>
								</expression>
								<expression tag="Math.Arithmetic.Negative">
									<expression tag="Math.Number" Value="1"/>
								</expression>
							</expression>
							<expression tag="Math.Arithmetic.Div">
								<expression tag="Math.Arithmetic.Addition">
									<expression tag="Symbolic.Symbol" Name="size"/>
									<expression tag="Math.Number" Value="1"/>
								</expression>
								<expression tag="Math.Number" Value="2"/>
							</expression>
						</expression>
					</expression>
				</expression>
				<expression tag="Symbolic.Local">
					<expression tag="Symbolic.Assignment">
						<expression tag="List.List">
							<expression tag="Symbolic.Symbol" Name="i"/>
							<expression tag="Symbolic.Symbol" Name="n"/>
							<expression tag="Symbolic.Symbol" Name="dir"/>
							<expression tag="Symbolic.Symbol" Name="step"/>
						</expression>
						<expression tag="List.List">
							<expression tag="Math.Number" Value="0"/>
							<expression tag="Math.Number" Value="1"/>
							<expression tag="String.Text" Value="►"/>
							<expression tag="Math.Number" Value="1"/>
						</expression>
					</expression>
				</expression>
				<expression tag="Symbolic.Local">
					<expression tag="Symbolic.Assignment">
						<expression tag="Symbolic.Symbol" Name="s2"/>
						<expression tag="Math.Arithmetic.Exponentiation">
							<expression tag="Symbolic.Symbol" Name="size"/>
							<expression tag="Math.Number" Value="2"/>
						</expression>
					</expression>
				</expression>
				<expression tag="Programming.While">
					<expression tag="Relation.Less">
						<expression tag="Symbolic.Symbol" Name="step"/>
						<expression tag="Symbolic.Symbol" Name="s2"/>
					</expression>
					<expression tag="Programming.Block" Description="block" Expanded="True">
						<expression tag="Programming.If">
							<expression tag="Relation.GreaterOrEquals">
								<expression tag="Symbolic.Symbol" Name="i"/>
								<expression tag="Symbolic.Symbol" Name="n"/>
							</expression>
							<expression tag="Programming.Block" Description="Description" Expanded="True">
								<expression tag="Programming.ComparativeSwitch">
									<expression tag="Symbolic.Symbol" Name="dir"/>
									<expression tag="String.Text" Value="►"/>
									<expression tag="Symbolic.Assignment">
										<expression tag="Symbolic.Symbol" Name="dir"/>
										<expression tag="String.Text" Value="▲"/>
									</expression>
									<expression tag="String.Text" Value="▲"/>
									<expression tag="Symbolic.Assignment">
										<expression tag="List.List">
											<expression tag="Symbolic.Symbol" Name="n"/>
											<expression tag="Symbolic.Symbol" Name="dir"/>
										</expression>
										<expression tag="List.List">
											<expression tag="Math.Arithmetic.Addition">
												<expression tag="Symbolic.Symbol" Name="n"/>
												<expression tag="Math.Number" Value="1"/>
											</expression>
											<expression tag="String.Text" Value="◄"/>
										</expression>
									</expression>
									<expression tag="String.Text" Value="◄"/>
									<expression tag="Symbolic.Assignment">
										<expression tag="Symbolic.Symbol" Name="dir"/>
										<expression tag="String.Text" Value="▼"/>
									</expression>
									<expression tag="Symbolic.Assignment">
										<expression tag="List.List">
											<expression tag="Symbolic.Symbol" Name="n"/>
											<expression tag="Symbolic.Symbol" Name="dir"/>
										</expression>
										<expression tag="List.List">
											<expression tag="Math.Arithmetic.Addition">
												<expression tag="Symbolic.Symbol" Name="n"/>
												<expression tag="Math.Number" Value="1"/>
											</expression>
											<expression tag="String.Text" Value="►"/>
										</expression>
									</expression>
								</expression>
								<expression tag="Symbolic.Assignment">
									<expression tag="Symbolic.Symbol" Name="i"/>
									<expression tag="Math.Number" Value="0"/>
								</expression>
							</expression>
						</expression>
						<expression tag="Programming.ComparativeSwitch">
							<expression tag="Symbolic.Symbol" Name="dir"/>
							<expression tag="String.Text" Value="►"/>
							<expression tag="Symbolic.Assignment">
								<expression tag="Symbolic.Symbol" Name="x"/>
								<expression tag="Math.Arithmetic.Addition">
									<expression tag="Symbolic.Symbol" Name="x"/>
									<expression tag="Math.Number" Value="1"/>
								</expression>
							</expression>
							<expression tag="String.Text" Value="▲"/>
							<expression tag="Symbolic.Assignment">
								<expression tag="Symbolic.Symbol" Name="y"/>
								<expression tag="Math.Arithmetic.Addition">
									<expression tag="Symbolic.Symbol" Name="y"/>
									<expression tag="Math.Arithmetic.Negative">
										<expression tag="Math.Number" Value="1"/>
									</expression>
								</expression>
							</expression>
							<expression tag="String.Text" Value="◄"/>
							<expression tag="Symbolic.Assignment">
								<expression tag="Symbolic.Symbol" Name="x"/>
								<expression tag="Math.Arithmetic.Addition">
									<expression tag="Symbolic.Symbol" Name="x"/>
									<expression tag="Math.Arithmetic.Negative">
										<expression tag="Math.Number" Value="1"/>
									</expression>
								</expression>
							</expression>
							<expression tag="Symbolic.Assignment">
								<expression tag="Symbolic.Symbol" Name="y"/>
								<expression tag="Math.Arithmetic.Addition">
									<expression tag="Symbolic.Symbol" Name="y"/>
									<expression tag="Math.Number" Value="1"/>
								</expression>
							</expression>
						</expression>
						<expression tag="Symbolic.Assignment">
							<expression tag="List.List">
								<expression tag="Symbolic.Symbol" Name="step"/>
								<expression tag="Symbolic.Symbol" Name="i"/>
							</expression>
							<expression tag="List.List">
								<expression tag="Math.Arithmetic.Addition">
									<expression tag="Symbolic.Symbol" Name="step"/>
									<expression tag="Math.Number" Value="1"/>
								</expression>
								<expression tag="Math.Arithmetic.Addition">
									<expression tag="Symbolic.Symbol" Name="i"/>
									<expression tag="Math.Number" Value="1"/>
								</expression>
							</expression>
						</expression>
						<expression tag="Programming.InvertedIf">
							<expression tag="Graphics.FillRectanglePosSize">
								<expression tag="Symbolic.Symbol" Name="g"/>
								<expression tag="Math.Arithmetic.Multiplication">
									<expression tag="Symbolic.Symbol" Name="x"/>
									<expression tag="Symbolic.Symbol" Name="block"/>
								</expression>
								<expression tag="Math.Arithmetic.Multiplication">
									<expression tag="Symbolic.Symbol" Name="y"/>
									<expression tag="Symbolic.Symbol" Name="block"/>
								</expression>
								<expression tag="Symbolic.Symbol" Name="block"/>
								<expression tag="Symbolic.Symbol" Name="block"/>
							</expression>
							<expression tag="Symbolic.LambdaApplication">
								<expression tag="Symbolic.Symbol" Name="λ"/>
								<expression tag="List.List">
									<expression tag="Symbolic.Symbol" Name="step"/>
								</expression>
							</expression>
						</expression>
					</expression>
				</expression>
				<expression tag="Symbolic.Symbol" Name="g"/>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Symbolic.Function">
			<expression tag="Symbolic.Symbol" Name="UlamSpiral"/>
			<expression tag="List.List">
				<expression tag="Math.Number" Value="200"/>
				<expression tag="Math.Number" Value="3"/>
				<expression tag="Symbolic.Lambda">
					<expression tag="List.List">
						<expression tag="Symbolic.Symbol" Name="s"/>
					</expression>
					<expression tag="Math.Arithmetic.IsPrime">
						<expression tag="Symbolic.Symbol" Name="s"/>
					</expression>
				</expression>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="1">
		<expression tag="Graphics.RasterGraphics" Value=""/>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Typesetting.MultiParagraph">
			<expression tag="Typesetting.Paragraph">
				<expression tag="Typesetting.BoldChunk">
					<expression tag="String.Text" Value="See also:"/>
				</expression>
			</expression>
			<expression tag="Typesetting.BulletedList">
				<expression tag="Typesetting.Paragraph">
					<expression tag="String.Text" Value="The"/>
					<expression tag="Internet.UniformResourceLocator" Value="/?script=examples/Sacks_spiral" Description="Sacks spiral"/>
					<expression tag="String.Text" Value="example"/>
				</expression>
				<expression tag="Typesetting.Paragraph">
					<expression tag="String.Text" Value="Other"/>
					<expression tag="Internet.UniformResourceLocator" Value="/?script=articles/Rosetta_Code_examples" Description="Rosetta code"/>
					<expression tag="String.Text" Value="examples"/>
				</expression>
				<expression tag="Typesetting.Paragraph">
					<expression tag="String.Text" Value="Other"/>
					<expression tag="Internet.UniformResourceLocator" Value="/?script=articles/Graphics_examples" Description="graphics"/>
					<expression tag="String.Text" Value="examples"/>
				</expression>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="Author: Laurence R. Ugalde"/>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="Last modified:"/>
				<expression tag="Time.Time" Value="1694146860000"/>
			</expression>
		</expression>
	</expression>
</expression>