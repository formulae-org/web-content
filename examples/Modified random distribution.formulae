<expression tag="Formulae.Script" Modules="org.formulae.typesetting,org.formulae.text.string,org.formulae.visualization,org.formulae.symbolic,org.formulae.list,org.formulae.programming,org.formulae.logic,org.formulae.math.arithmetic,org.formulae.relation,org.formulae.expression,org.formulae.chart,org.formulae.graphics.raster,org.formulae.time">
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Typesetting.MultiParagraph">
			<expression tag="Typesetting.Paragraph">
				<expression tag="Typesetting.BoldChunk">
					<expression tag="String.Text" Value="Modified random distribution"/>
				</expression>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="This exercise shows a solution for the"/>
				<expression tag="Internet.UniformResourceLocator" Value="https://rosettacode.org/wiki/Modified_random_distribution" Description="Modified random distribution"/>
				<expression tag="String.Text" Value="problem, described in the website"/>
				<expression tag="Internet.UniformResourceLocator" Value="https://rosettacode.org/wiki/Rosetta_Code" Description="Rosetta code."/>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="Typesetting.BoldChunk">
					<expression tag="String.Text" Value="Summary of the description from Rosetta Code"/>
				</expression>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="Given a random number generator, generating numbers in the range 0.0 .. 1.0, and a function modifier(x) taking an number in the same range and generating the probability that the input should be generated, in the same range 0..1; then implement the following algorithm for generating random numbers to the probability given by function modifier:"/>
			</expression>
			<expression tag="Visualization.FontName" Name="courier">
				<expression tag="String.Text" Value="WHILE true"/>
			</expression>
			<expression tag="Visualization.FontName" Name="courier">
				<expression tag="String.Text" Value="   random1 &lt;- random()"/>
			</expression>
			<expression tag="Visualization.FontName" Name="courier">
				<expression tag="String.Text" Value="   random2 &lt;- random()"/>
			</expression>
			<expression tag="Visualization.FontName" Name="courier">
				<expression tag="String.Text" Value="   IF random2 &lt; modifier(random1) THEN"/>
			</expression>
			<expression tag="Visualization.FontName" Name="courier">
				<expression tag="String.Text" Value="      RETURN random1"/>
			</expression>
			<expression tag="Visualization.FontName" Name="courier">
				<expression tag="String.Text" Value="   END IF"/>
			</expression>
			<expression tag="Visualization.FontName" Name="courier">
				<expression tag="String.Text" Value="END WHILE"/>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="Typesetting.BoldChunk">
					<expression tag="String.Text" Value="Task"/>
				</expression>
			</expression>
			<expression tag="Typesetting.BulletedList">
				<expression tag="Typesetting.MultiParagraph">
					<expression tag="Typesetting.Paragraph">
						<expression tag="String.Text" Value="Create a modifier function that generates a 'V' shaped probability of number generation using something like, for example:"/>
					</expression>
					<expression tag="Visualization.FontName" Name="courier">
						<expression tag="String.Text" Value="modifier(x) = 2*(0.5 - x) if x &lt; 0.5 else 2*(x - 0.5)"/>
					</expression>
				</expression>
				<expression tag="Typesetting.Paragraph">
					<expression tag="String.Text" Value="Create a generator of random numbers with probabilities modified by the above function."/>
				</expression>
				<expression tag="Typesetting.Paragraph">
					<expression tag="String.Text" Value="Generate &gt;= 10,000 random numbers subject to the probability modification."/>
				</expression>
				<expression tag="Typesetting.Paragraph">
					<expression tag="String.Text" Value="Output an histogram with from 11 to 21 bins showing the distribution of the random numbers generated."/>
				</expression>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="Typesetting.BoldChunk">
					<expression tag="String.Text" Value="Solution"/>
				</expression>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="The following is the modifier random distribution function. It does not contain the modifier function, it is passed as a lambda expression.:"/>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="2">
		<expression tag="Symbolic.Assignment">
			<expression tag="Symbolic.Function">
				<expression tag="Symbolic.Symbol" Name="Modified random distribution"/>
				<expression tag="List.List">
					<expression tag="Symbolic.Symbol" Name="λ"/>
				</expression>
			</expression>
			<expression tag="Programming.Block" Description="Description" Expanded="True">
				<expression tag="Symbolic.Local">
					<expression tag="Symbolic.Symbol" Name="r"/>
				</expression>
				<expression tag="Programming.While">
					<expression tag="Logic.True"/>
					<expression tag="Programming.Block" Description="Description" Expanded="True">
						<expression tag="Symbolic.Assignment">
							<expression tag="Symbolic.Symbol" Name="r"/>
							<expression tag="Math.Arithmetic.Random"/>
						</expression>
						<expression tag="Programming.InvertedIf">
							<expression tag="Symbolic.Return">
								<expression tag="Symbolic.Symbol" Name="r"/>
							</expression>
							<expression tag="Relation.Less">
								<expression tag="Math.Arithmetic.Random"/>
								<expression tag="Symbolic.LambdaApplication">
									<expression tag="Symbolic.Symbol" Name="λ"/>
									<expression tag="List.List">
										<expression tag="Symbolic.Symbol" Name="r"/>
									</expression>
								</expression>
							</expression>
						</expression>
					</expression>
				</expression>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Typesetting.Paragraph">
			<expression tag="String.Text" Value="The example modifier is the following:"/>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="2">
		<expression tag="Symbolic.Assignment">
			<expression tag="Symbolic.Function">
				<expression tag="Symbolic.Symbol" Name="Modifier"/>
				<expression tag="List.List">
					<expression tag="Symbolic.Symbol" Name="x"/>
				</expression>
			</expression>
			<expression tag="Programming.Conditional">
				<expression tag="Relation.Less">
					<expression tag="Symbolic.Symbol" Name="x"/>
					<expression tag="Math.Arithmetic.Division">
						<expression tag="Math.Number" Value="1"/>
						<expression tag="Math.Number" Value="2"/>
					</expression>
				</expression>
				<expression tag="Math.Arithmetic.Addition">
					<expression tag="Math.Number" Value="1"/>
					<expression tag="Math.Arithmetic.Negative">
						<expression tag="Math.Arithmetic.Multiplication">
							<expression tag="Math.Number" Value="2"/>
							<expression tag="Symbolic.Symbol" Name="x"/>
						</expression>
					</expression>
				</expression>
				<expression tag="Math.Arithmetic.Addition">
					<expression tag="Math.Arithmetic.Multiplication">
						<expression tag="Math.Number" Value="2"/>
						<expression tag="Symbolic.Symbol" Name="x"/>
					</expression>
					<expression tag="Math.Arithmetic.Negative">
						<expression tag="Math.Number" Value="1"/>
					</expression>
				</expression>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Typesetting.Paragraph">
			<expression tag="String.Text" Value="Using the example modifier function:"/>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Symbolic.Function">
			<expression tag="Symbolic.Symbol" Name="Modified random distribution"/>
			<expression tag="List.List">
				<expression tag="Symbolic.Symbol" Name="Modifier"/>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="1">
		<expression tag="Math.Number" Value="0.8723700594504717"/>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Typesetting.Paragraph">
			<expression tag="String.Text" Value="To generate a list of numbers with such that modified random generator:"/>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="List.CreateList">
			<expression tag="Symbolic.Function">
				<expression tag="Symbolic.Symbol" Name="Modified random distribution"/>
				<expression tag="List.List">
					<expression tag="Symbolic.Symbol" Name="Modifier"/>
				</expression>
			</expression>
			<expression tag="Math.Number" Value="5"/>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="1">
		<expression tag="List.List">
			<expression tag="Math.Number" Value="0.23427810664634785"/>
			<expression tag="Math.Number" Value="0.021939701924929778"/>
			<expression tag="Math.Number" Value="0.7536299469012124"/>
			<expression tag="Math.Number" Value="0.11665821470280002"/>
			<expression tag="Math.Number" Value="0.21552084796553284"/>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="String.Text" Value="The following functions groups a list of numbers in the given number of bins, producing the data necessary for a histogram."/>
	</expression>
	<expression tag="Formulae.Script.Row" type="2">
		<expression tag="Symbolic.Assignment">
			<expression tag="Symbolic.Function">
				<expression tag="Symbolic.Symbol" Name="Histogram data"/>
				<expression tag="List.List">
					<expression tag="Symbolic.Symbol" Name="list"/>
					<expression tag="Symbolic.Symbol" Name="bins"/>
				</expression>
			</expression>
			<expression tag="Expression.Group">
				<expression tag="List.CreateList">
					<expression tag="Math.Arithmetic.Div">
						<expression tag="Symbolic.Symbol" Name="x"/>
						<expression tag="Math.Numeric">
							<expression tag="Math.Arithmetic.Division">
								<expression tag="Math.Number" Value="1"/>
								<expression tag="Symbolic.Symbol" Name="bins"/>
							</expression>
						</expression>
					</expression>
					<expression tag="Symbolic.Symbol" Name="x"/>
					<expression tag="Symbolic.Symbol" Name="list"/>
				</expression>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Typesetting.Paragraph">
			<expression tag="String.Text" Value="Example: creating the data for a histogram of 50,000 numbers in 10 bins:"/>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Symbolic.Function">
			<expression tag="Symbolic.Symbol" Name="Histogram data"/>
			<expression tag="List.List">
				<expression tag="List.CreateList">
					<expression tag="Symbolic.Function">
						<expression tag="Symbolic.Symbol" Name="Modified random distribution"/>
						<expression tag="List.List">
							<expression tag="Symbolic.Symbol" Name="Modifier"/>
						</expression>
					</expression>
					<expression tag="Math.Number" Value="1000"/>
				</expression>
				<expression tag="Math.Number" Value="10"/>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="1">
		<expression tag="List.List">
			<expression tag="List.List">
				<expression tag="Math.Number" Value="9"/>
				<expression tag="Math.Number" Value="180"/>
			</expression>
			<expression tag="List.List">
				<expression tag="Math.Number" Value="3"/>
				<expression tag="Math.Number" Value="66"/>
			</expression>
			<expression tag="List.List">
				<expression tag="Math.Number" Value="6"/>
				<expression tag="Math.Number" Value="59"/>
			</expression>
			<expression tag="List.List">
				<expression tag="Math.Number" Value="0"/>
				<expression tag="Math.Number" Value="182"/>
			</expression>
			<expression tag="List.List">
				<expression tag="Math.Number" Value="8"/>
				<expression tag="Math.Number" Value="150"/>
			</expression>
			<expression tag="List.List">
				<expression tag="Math.Number" Value="7"/>
				<expression tag="Math.Number" Value="99"/>
			</expression>
			<expression tag="List.List">
				<expression tag="Math.Number" Value="2"/>
				<expression tag="Math.Number" Value="102"/>
			</expression>
			<expression tag="List.List">
				<expression tag="Math.Number" Value="1"/>
				<expression tag="Math.Number" Value="119"/>
			</expression>
			<expression tag="List.List">
				<expression tag="Math.Number" Value="4"/>
				<expression tag="Math.Number" Value="23"/>
			</expression>
			<expression tag="List.List">
				<expression tag="Math.Number" Value="5"/>
				<expression tag="Math.Number" Value="20"/>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="2">
		<expression tag="Symbolic.Assignment">
			<expression tag="Symbolic.Function">
				<expression tag="Symbolic.Symbol" Name="Histogram data 2"/>
				<expression tag="List.List">
					<expression tag="Symbolic.Symbol" Name="n"/>
					<expression tag="Symbolic.Symbol" Name="bins"/>
				</expression>
			</expression>
			<expression tag="Programming.Block" Description="Description" Expanded="True">
				<expression tag="Symbolic.Local">
					<expression tag="Symbolic.Assignment">
						<expression tag="Symbolic.Symbol" Name="list"/>
						<expression tag="List.CreateList">
							<expression tag="Math.Number" Value="0"/>
							<expression tag="Symbolic.Symbol" Name="bins"/>
						</expression>
					</expression>
				</expression>
				<expression tag="Symbolic.Local">
					<expression tag="Symbolic.Symbol" Name="b"/>
				</expression>
				<expression tag="Programming.ForTimes">
					<expression tag="Programming.Block" Description="Description" Expanded="True">
						<expression tag="Symbolic.Assignment">
							<expression tag="Symbolic.Symbol" Name="b"/>
							<expression tag="Math.Arithmetic.Addition">
								<expression tag="Math.Arithmetic.Div">
									<expression tag="Symbolic.Function">
										<expression tag="Symbolic.Symbol" Name="Modified random distribution"/>
										<expression tag="List.List">
											<expression tag="Symbolic.Symbol" Name="Modifier"/>
										</expression>
									</expression>
									<expression tag="Math.Numeric">
										<expression tag="Math.Arithmetic.Division">
											<expression tag="Math.Number" Value="1"/>
											<expression tag="Symbolic.Symbol" Name="bins"/>
										</expression>
									</expression>
								</expression>
								<expression tag="Math.Number" Value="1"/>
							</expression>
						</expression>
						<expression tag="Symbolic.Assignment">
							<expression tag="Expression.Child">
								<expression tag="Symbolic.Symbol" Name="list"/>
								<expression tag="Symbolic.Symbol" Name="b"/>
							</expression>
							<expression tag="Math.Arithmetic.Addition">
								<expression tag="Expression.Child">
									<expression tag="Symbolic.Symbol" Name="list"/>
									<expression tag="Symbolic.Symbol" Name="b"/>
								</expression>
								<expression tag="Math.Number" Value="1"/>
							</expression>
						</expression>
					</expression>
					<expression tag="Symbolic.Symbol" Name="n"/>
				</expression>
				<expression tag="Symbolic.Symbol" Name="list"/>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Symbolic.Function">
			<expression tag="Symbolic.Symbol" Name="Histogram data 2"/>
			<expression tag="List.List">
				<expression tag="Math.Number" Value="1000"/>
				<expression tag="Math.Number" Value="10"/>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="1">
		<expression tag="List.List">
			<expression tag="Math.Number" Value="189"/>
			<expression tag="Math.Number" Value="139"/>
			<expression tag="Math.Number" Value="106"/>
			<expression tag="Math.Number" Value="51"/>
			<expression tag="Math.Number" Value="22"/>
			<expression tag="Math.Number" Value="24"/>
			<expression tag="Math.Number" Value="51"/>
			<expression tag="Math.Number" Value="103"/>
			<expression tag="Math.Number" Value="127"/>
			<expression tag="Math.Number" Value="188"/>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Typesetting.Paragraph">
			<expression tag="String.Text" Value="Showing the histogram of 50,000 numbers in 5 bins:"/>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Programming.Block" Description="Description" Expanded="True">
			<expression tag="Symbolic.Local">
				<expression tag="Symbolic.Assignment">
					<expression tag="Symbolic.Symbol" Name="list"/>
					<expression tag="Symbolic.Function">
						<expression tag="Symbolic.Symbol" Name="Histogram data 2"/>
						<expression tag="List.List">
							<expression tag="Math.Number" Value="50000"/>
							<expression tag="Math.Number" Value="5"/>
						</expression>
					</expression>
				</expression>
			</expression>
			<expression tag="Chart.Bar">
				<expression tag="List.CreateList">
					<expression tag="List.List">
						<expression tag="Symbolic.Symbol" Name="i"/>
						<expression tag="Expression.Child">
							<expression tag="Symbolic.Symbol" Name="list"/>
							<expression tag="Symbolic.Symbol" Name="i"/>
						</expression>
					</expression>
					<expression tag="Symbolic.Symbol" Name="i"/>
					<expression tag="Math.Number" Value="1"/>
					<expression tag="Math.Number" Value="5"/>
				</expression>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="1">
		<expression tag="Graphics.RasterGraphics" Value=""/>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Typesetting.Paragraph">
			<expression tag="String.Text" Value="Showing the histogram of 50,000 numbers in 20 bins:"/>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Programming.Block" Description="Description" Expanded="True">
			<expression tag="Symbolic.Local">
				<expression tag="Symbolic.Assignment">
					<expression tag="Symbolic.Symbol" Name="list"/>
					<expression tag="Symbolic.Function">
						<expression tag="Symbolic.Symbol" Name="Histogram data 2"/>
						<expression tag="List.List">
							<expression tag="Math.Number" Value="50000"/>
							<expression tag="Math.Number" Value="20"/>
						</expression>
					</expression>
				</expression>
			</expression>
			<expression tag="Chart.Bar">
				<expression tag="List.CreateList">
					<expression tag="List.List">
						<expression tag="Symbolic.Symbol" Name="i"/>
						<expression tag="Expression.Child">
							<expression tag="Symbolic.Symbol" Name="list"/>
							<expression tag="Symbolic.Symbol" Name="i"/>
						</expression>
					</expression>
					<expression tag="Symbolic.Symbol" Name="i"/>
					<expression tag="Math.Number" Value="1"/>
					<expression tag="Math.Number" Value="20"/>
				</expression>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="1">
		<expression tag="Graphics.RasterGraphics" Value=""/>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Typesetting.Paragraph">
			<expression tag="String.Text" Value="Showing the histogram of 50,000 numbers in 100 bins:"/>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Programming.Block" Description="Description" Expanded="True">
			<expression tag="Symbolic.Local">
				<expression tag="Symbolic.Assignment">
					<expression tag="Symbolic.Symbol" Name="list"/>
					<expression tag="Symbolic.Function">
						<expression tag="Symbolic.Symbol" Name="Histogram data 2"/>
						<expression tag="List.List">
							<expression tag="Math.Number" Value="50000"/>
							<expression tag="Math.Number" Value="100"/>
						</expression>
					</expression>
				</expression>
			</expression>
			<expression tag="Chart.Bar">
				<expression tag="List.CreateList">
					<expression tag="List.List">
						<expression tag="Symbolic.Symbol" Name="i"/>
						<expression tag="Expression.Child">
							<expression tag="Symbolic.Symbol" Name="list"/>
							<expression tag="Symbolic.Symbol" Name="i"/>
						</expression>
					</expression>
					<expression tag="Symbolic.Symbol" Name="i"/>
					<expression tag="Math.Number" Value="1"/>
					<expression tag="Math.Number" Value="100"/>
				</expression>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="1">
		<expression tag="Graphics.RasterGraphics" Value=""/>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Typesetting.MultiParagraph">
			<expression tag="Typesetting.Paragraph">
				<expression tag="Typesetting.BoldChunk">
					<expression tag="String.Text" Value="See also:"/>
				</expression>
			</expression>
			<expression tag="Typesetting.BulletedList">
				<expression tag="Typesetting.Paragraph">
					<expression tag="String.Text" Value="Other"/>
					<expression tag="Internet.UniformResourceLocator" Value="/?script=articles/Rosetta_Code_examples" Description="Rosetta code"/>
					<expression tag="String.Text" Value="examples"/>
				</expression>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="Author: Laurence R. Ugalde"/>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="Last modified:"/>
				<expression tag="Time.Time" Value="1621961880000"/>
			</expression>
		</expression>
	</expression>
</expression>