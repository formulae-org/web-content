<expression tag="Formulae.Script" Modules="org.formulae.typesetting,org.formulae.text.string,org.formulae.visualization,org.formulae.symbolic,org.formulae.list,org.formulae.programming,org.formulae.logic,org.formulae.math.arithmetic,org.formulae.relation,org.formulae.expression,org.formulae.chart,org.formulae.graphics.raster,org.formulae.time">
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Typesetting.MultiParagraph">
			<expression tag="Typesetting.Paragraph">
				<expression tag="Typesetting.BoldChunk">
					<expression tag="String.Text" Value="Modified random distribution"/>
				</expression>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="This exercise shows a solution for the"/>
				<expression tag="Internet.UniformResourceLocator" Value="https://rosettacode.org/wiki/Modified_random_distribution" Description="Modified random distribution"/>
				<expression tag="String.Text" Value="problem, described in the website"/>
				<expression tag="Internet.UniformResourceLocator" Value="https://rosettacode.org/wiki/Rosetta_Code" Description="Rosetta code."/>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="Typesetting.BoldChunk">
					<expression tag="String.Text" Value="Summary of the description from Rosetta Code"/>
				</expression>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="Given a random number generator, generating numbers in the range 0.0 .. 1.0, and a function modifier(x) taking an number in the same range and generating the probability that the input should be generated, in the same range 0..1; then implement the following algorithm for generating random numbers to the probability given by function modifier:"/>
			</expression>
			<expression tag="Visualization.FontName" Name="courier">
				<expression tag="String.Text" Value="WHILE true"/>
			</expression>
			<expression tag="Visualization.FontName" Name="courier">
				<expression tag="String.Text" Value="   random1 &lt;- random()"/>
			</expression>
			<expression tag="Visualization.FontName" Name="courier">
				<expression tag="String.Text" Value="   random2 &lt;- random()"/>
			</expression>
			<expression tag="Visualization.FontName" Name="courier">
				<expression tag="String.Text" Value="   IF random2 &lt; modifier(random1) THEN"/>
			</expression>
			<expression tag="Visualization.FontName" Name="courier">
				<expression tag="String.Text" Value="      RETURN random1"/>
			</expression>
			<expression tag="Visualization.FontName" Name="courier">
				<expression tag="String.Text" Value="   END IF"/>
			</expression>
			<expression tag="Visualization.FontName" Name="courier">
				<expression tag="String.Text" Value="END WHILE"/>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="Typesetting.BoldChunk">
					<expression tag="String.Text" Value="Task"/>
				</expression>
			</expression>
			<expression tag="Typesetting.BulletedList">
				<expression tag="Typesetting.MultiParagraph">
					<expression tag="Typesetting.Paragraph">
						<expression tag="String.Text" Value="Create a modifier function that generates a 'V' shaped probability of number generation using something like, for example:"/>
					</expression>
					<expression tag="Visualization.FontName" Name="courier">
						<expression tag="String.Text" Value="modifier(x) = 2*(0.5 - x) if x &lt; 0.5 else 2*(x - 0.5)"/>
					</expression>
				</expression>
				<expression tag="Typesetting.Paragraph">
					<expression tag="String.Text" Value="Create a generator of random numbers with probabilities modified by the above function."/>
				</expression>
				<expression tag="Typesetting.Paragraph">
					<expression tag="String.Text" Value="Generate &gt;= 10,000 random numbers subject to the probability modification."/>
				</expression>
				<expression tag="Typesetting.Paragraph">
					<expression tag="String.Text" Value="Output an histogram with from 11 to 21 bins showing the distribution of the random numbers generated."/>
				</expression>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="Typesetting.BoldChunk">
					<expression tag="String.Text" Value="Solution"/>
				</expression>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="The following is the modifier random distribution function. It does not contain the modifier function, it is passed as a lambda expression.:"/>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="2">
		<expression tag="Symbolic.Assignment">
			<expression tag="Symbolic.Function">
				<expression tag="Symbolic.Symbol" Name="Modified random distribution"/>
				<expression tag="List.List">
					<expression tag="Symbolic.Symbol" Name="λ"/>
				</expression>
			</expression>
			<expression tag="Programming.Block" Description="Description" Expanded="True">
				<expression tag="Symbolic.Local">
					<expression tag="Symbolic.Symbol" Name="r"/>
				</expression>
				<expression tag="Programming.While">
					<expression tag="Logic.True"/>
					<expression tag="Programming.Block" Description="Description" Expanded="True">
						<expression tag="Symbolic.Assignment">
							<expression tag="Symbolic.Symbol" Name="r"/>
							<expression tag="Math.Arithmetic.Random"/>
						</expression>
						<expression tag="Programming.InvertedIf">
							<expression tag="Symbolic.Return">
								<expression tag="Symbolic.Symbol" Name="r"/>
							</expression>
							<expression tag="Relation.Less">
								<expression tag="Math.Arithmetic.Random"/>
								<expression tag="Symbolic.LambdaApplication">
									<expression tag="Symbolic.Symbol" Name="λ"/>
									<expression tag="List.List">
										<expression tag="Symbolic.Symbol" Name="r"/>
									</expression>
								</expression>
							</expression>
						</expression>
					</expression>
				</expression>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Typesetting.Paragraph">
			<expression tag="String.Text" Value="The example modifier is the following:"/>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="2">
		<expression tag="Symbolic.Assignment">
			<expression tag="Symbolic.Function">
				<expression tag="Symbolic.Symbol" Name="Modifier"/>
				<expression tag="List.List">
					<expression tag="Symbolic.Symbol" Name="x"/>
				</expression>
			</expression>
			<expression tag="Programming.Conditional">
				<expression tag="Relation.Less">
					<expression tag="Symbolic.Symbol" Name="x"/>
					<expression tag="Math.Arithmetic.Division">
						<expression tag="Math.Number" Value="1"/>
						<expression tag="Math.Number" Value="2"/>
					</expression>
				</expression>
				<expression tag="Math.Arithmetic.Addition">
					<expression tag="Math.Number" Value="1"/>
					<expression tag="Math.Arithmetic.Negative">
						<expression tag="Math.Arithmetic.Multiplication">
							<expression tag="Math.Number" Value="2"/>
							<expression tag="Symbolic.Symbol" Name="x"/>
						</expression>
					</expression>
				</expression>
				<expression tag="Math.Arithmetic.Addition">
					<expression tag="Math.Arithmetic.Multiplication">
						<expression tag="Math.Number" Value="2"/>
						<expression tag="Symbolic.Symbol" Name="x"/>
					</expression>
					<expression tag="Math.Arithmetic.Negative">
						<expression tag="Math.Number" Value="1"/>
					</expression>
				</expression>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Typesetting.Paragraph">
			<expression tag="String.Text" Value="Using the example modifier function:"/>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Symbolic.Function">
			<expression tag="Symbolic.Symbol" Name="Modified random distribution"/>
			<expression tag="List.List">
				<expression tag="Symbolic.Symbol" Name="Modifier"/>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="1">
		<expression tag="Math.Number" Value="0.8723700594504717"/>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Typesetting.Paragraph">
			<expression tag="String.Text" Value="To generate a list of numbers with such that modified random generator:"/>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="List.CreateList">
			<expression tag="Symbolic.Function">
				<expression tag="Symbolic.Symbol" Name="Modified random distribution"/>
				<expression tag="List.List">
					<expression tag="Symbolic.Symbol" Name="Modifier"/>
				</expression>
			</expression>
			<expression tag="Math.Number" Value="5"/>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="1">
		<expression tag="List.List">
			<expression tag="Math.Number" Value="0.23427810664634785"/>
			<expression tag="Math.Number" Value="0.021939701924929778"/>
			<expression tag="Math.Number" Value="0.7536299469012124"/>
			<expression tag="Math.Number" Value="0.11665821470280002"/>
			<expression tag="Math.Number" Value="0.21552084796553284"/>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="String.Text" Value="The following functions groups a list of numbers in the given number of bins, producing the data necessary for a histogram."/>
	</expression>
	<expression tag="Formulae.Script.Row" type="2">
		<expression tag="Symbolic.Assignment">
			<expression tag="Symbolic.Function">
				<expression tag="Symbolic.Symbol" Name="Histogram data"/>
				<expression tag="List.List">
					<expression tag="Symbolic.Symbol" Name="list"/>
					<expression tag="Symbolic.Symbol" Name="bins"/>
				</expression>
			</expression>
			<expression tag="Expression.Group">
				<expression tag="List.CreateList">
					<expression tag="Math.Arithmetic.Div">
						<expression tag="Symbolic.Symbol" Name="x"/>
						<expression tag="Math.Numeric">
							<expression tag="Math.Arithmetic.Division">
								<expression tag="Math.Number" Value="1"/>
								<expression tag="Symbolic.Symbol" Name="bins"/>
							</expression>
						</expression>
					</expression>
					<expression tag="Symbolic.Symbol" Name="x"/>
					<expression tag="Symbolic.Symbol" Name="list"/>
				</expression>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Typesetting.Paragraph">
			<expression tag="String.Text" Value="Example: creating the data for a histogram of 50,000 numbers in 10 bins:"/>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Symbolic.Function">
			<expression tag="Symbolic.Symbol" Name="Histogram data"/>
			<expression tag="List.List">
				<expression tag="List.CreateList">
					<expression tag="Symbolic.Function">
						<expression tag="Symbolic.Symbol" Name="Modified random distribution"/>
						<expression tag="List.List">
							<expression tag="Symbolic.Symbol" Name="Modifier"/>
						</expression>
					</expression>
					<expression tag="Math.Number" Value="1000"/>
				</expression>
				<expression tag="Math.Number" Value="10"/>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="1">
		<expression tag="List.List">
			<expression tag="List.List">
				<expression tag="Math.Number" Value="9"/>
				<expression tag="Math.Number" Value="180"/>
			</expression>
			<expression tag="List.List">
				<expression tag="Math.Number" Value="3"/>
				<expression tag="Math.Number" Value="66"/>
			</expression>
			<expression tag="List.List">
				<expression tag="Math.Number" Value="6"/>
				<expression tag="Math.Number" Value="59"/>
			</expression>
			<expression tag="List.List">
				<expression tag="Math.Number" Value="0"/>
				<expression tag="Math.Number" Value="182"/>
			</expression>
			<expression tag="List.List">
				<expression tag="Math.Number" Value="8"/>
				<expression tag="Math.Number" Value="150"/>
			</expression>
			<expression tag="List.List">
				<expression tag="Math.Number" Value="7"/>
				<expression tag="Math.Number" Value="99"/>
			</expression>
			<expression tag="List.List">
				<expression tag="Math.Number" Value="2"/>
				<expression tag="Math.Number" Value="102"/>
			</expression>
			<expression tag="List.List">
				<expression tag="Math.Number" Value="1"/>
				<expression tag="Math.Number" Value="119"/>
			</expression>
			<expression tag="List.List">
				<expression tag="Math.Number" Value="4"/>
				<expression tag="Math.Number" Value="23"/>
			</expression>
			<expression tag="List.List">
				<expression tag="Math.Number" Value="5"/>
				<expression tag="Math.Number" Value="20"/>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="2">
		<expression tag="Symbolic.Assignment">
			<expression tag="Symbolic.Function">
				<expression tag="Symbolic.Symbol" Name="Histogram data"/>
				<expression tag="List.List">
					<expression tag="Symbolic.Symbol" Name="n"/>
					<expression tag="Symbolic.Symbol" Name="bins"/>
				</expression>
			</expression>
			<expression tag="Programming.Block" Description="Description" Expanded="True">
				<expression tag="Symbolic.Local">
					<expression tag="Symbolic.Assignment">
						<expression tag="Symbolic.Symbol" Name="list"/>
						<expression tag="List.CreateList">
							<expression tag="Math.Number" Value="0"/>
							<expression tag="Symbolic.Symbol" Name="bins"/>
						</expression>
					</expression>
				</expression>
				<expression tag="Symbolic.Local">
					<expression tag="Symbolic.Symbol" Name="b"/>
				</expression>
				<expression tag="Programming.ForTimes">
					<expression tag="Programming.Block" Description="Description" Expanded="True">
						<expression tag="Symbolic.Assignment">
							<expression tag="Symbolic.Symbol" Name="b"/>
							<expression tag="Math.Arithmetic.Addition">
								<expression tag="Math.Arithmetic.Div">
									<expression tag="Symbolic.Function">
										<expression tag="Symbolic.Symbol" Name="Modified random distribution"/>
										<expression tag="List.List">
											<expression tag="Symbolic.Symbol" Name="Modifier"/>
										</expression>
									</expression>
									<expression tag="Math.Numeric">
										<expression tag="Math.Arithmetic.Division">
											<expression tag="Math.Number" Value="1"/>
											<expression tag="Symbolic.Symbol" Name="bins"/>
										</expression>
									</expression>
								</expression>
								<expression tag="Math.Number" Value="1"/>
							</expression>
						</expression>
						<expression tag="Symbolic.Assignment">
							<expression tag="Expression.Child">
								<expression tag="Symbolic.Symbol" Name="list"/>
								<expression tag="Symbolic.Symbol" Name="b"/>
							</expression>
							<expression tag="Math.Arithmetic.Addition">
								<expression tag="Expression.Child">
									<expression tag="Symbolic.Symbol" Name="list"/>
									<expression tag="Symbolic.Symbol" Name="b"/>
								</expression>
								<expression tag="Math.Number" Value="1"/>
							</expression>
						</expression>
					</expression>
					<expression tag="Symbolic.Symbol" Name="n"/>
				</expression>
				<expression tag="Symbolic.Symbol" Name="list"/>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Symbolic.Function">
			<expression tag="Symbolic.Symbol" Name="Histogram data"/>
			<expression tag="List.List">
				<expression tag="Math.Number" Value="1000"/>
				<expression tag="Math.Number" Value="10"/>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="1">
		<expression tag="List.List">
			<expression tag="Math.Number" Value="189"/>
			<expression tag="Math.Number" Value="139"/>
			<expression tag="Math.Number" Value="106"/>
			<expression tag="Math.Number" Value="51"/>
			<expression tag="Math.Number" Value="22"/>
			<expression tag="Math.Number" Value="24"/>
			<expression tag="Math.Number" Value="51"/>
			<expression tag="Math.Number" Value="103"/>
			<expression tag="Math.Number" Value="127"/>
			<expression tag="Math.Number" Value="188"/>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Typesetting.Paragraph">
			<expression tag="String.Text" Value="Showing the histogram of 50,000 numbers in 5 bins:"/>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Chart.Bar">
			<expression tag="Symbolic.Function">
				<expression tag="Symbolic.Symbol" Name="Histogram data"/>
				<expression tag="List.List">
					<expression tag="Math.Number" Value="50000"/>
					<expression tag="Math.Number" Value="5"/>
				</expression>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="1">
		<expression tag="Graphics.RasterGraphics" Value=""/>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Typesetting.Paragraph">
			<expression tag="String.Text" Value="Showing the histogram of 50,000 numbers in 20 bins:"/>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Chart.Bar">
			<expression tag="Symbolic.Function">
				<expression tag="Symbolic.Symbol" Name="Histogram data"/>
				<expression tag="List.List">
					<expression tag="Math.Number" Value="50000"/>
					<expression tag="Math.Number" Value="20"/>
				</expression>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="1">
		<expression tag="Graphics.RasterGraphics" Value=""/>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Typesetting.Paragraph">
			<expression tag="String.Text" Value="Showing the histogram of 50,000 numbers in 100 bins:"/>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Chart.Bar">
			<expression tag="Symbolic.Function">
				<expression tag="Symbolic.Symbol" Name="Histogram data"/>
				<expression tag="List.List">
					<expression tag="Math.Number" Value="50000"/>
					<expression tag="Math.Number" Value="100"/>
				</expression>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="1">
		<expression tag="Graphics.RasterGraphics" Value="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"/>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Typesetting.MultiParagraph">
			<expression tag="Typesetting.Paragraph">
				<expression tag="Typesetting.BoldChunk">
					<expression tag="String.Text" Value="See also:"/>
				</expression>
			</expression>
			<expression tag="Typesetting.BulletedList">
				<expression tag="Typesetting.Paragraph">
					<expression tag="String.Text" Value="Other"/>
					<expression tag="Internet.UniformResourceLocator" Value="/?script=articles/Rosetta_Code_examples" Description="Rosetta code"/>
					<expression tag="String.Text" Value="examples"/>
				</expression>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="Author: Laurence R. Ugalde"/>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="Last modified:"/>
				<expression tag="Time.Time" Value="1621961880000"/>
			</expression>
		</expression>
	</expression>
</expression>