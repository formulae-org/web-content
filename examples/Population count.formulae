<expression tag="Formulae.Script" Modules="org.formulae.typesetting,org.formulae.text.string,org.formulae.symbolic,org.formulae.list,org.formulae.programming,org.formulae.math.arithmetic,org.formulae.relation,org.formulae.expression,org.formulae.chart,org.formulae.bitwise,org.formulae.graphics.raster,org.formulae.time">
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Typesetting.MultiParagraph">
			<expression tag="Typesetting.Paragraph">
				<expression tag="Typesetting.BoldChunk">
					<expression tag="String.Text" Value="Population count"/>
				</expression>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="The"/>
				<expression tag="Internet.UniformResourceLocator" Value="https://en.wikipedia.org/wiki/Hamming_weight" Description="population count"/>
				<expression tag="String.Text" Value="is the number of   1s   (ones)   in the binary representation of a non-negative integer."/>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="Internet.UniformResourceLocator" Value="https://en.wikipedia.org/wiki/Evil_number" Description="Evil numbers"/>
				<expression tag="String.Text" Value="are non-negative integers that have an even population count."/>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="Internet.UniformResourceLocator" Value="https://en.wikipedia.org/wiki/Odious_number" Description="Odious numbers"/>
				<expression tag="String.Text" Value="are  positive integers that have an odd population count."/>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="In this script a form to calculate the population count of a number is presented."/>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="This is also a solution for the"/>
				<expression tag="Internet.UniformResourceLocator" Value="https://rosettacode.org/wiki/Population_count" Description="Population count"/>
				<expression tag="String.Text" Value="exercise, described in the website"/>
				<expression tag="Internet.UniformResourceLocator" Value="https://rosettacode.org/wiki/Rosetta_Code" Description="Rosetta code."/>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="Typesetting.BoldChunk">
					<expression tag="String.Text" Value="Case 1 (from Rosetta code)"/>
				</expression>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="Write a function (or routine) to return the population count of a non-negative integer."/>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="Fōrmulæ has an integrated expression"/>
				<expression tag="Internet.UniformResourceLocator" Value="/?script=reference/Bitwise.BitCount" Description="BitCount"/>
				<expression tag="String.Text" Value="that counts the number of 1's of the binary representation of the number."/>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="However, a function can also be written, as follows:"/>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="2">
		<expression tag="Symbolic.Assignment">
			<expression tag="Symbolic.Function">
				<expression tag="Symbolic.Symbol" Name="PopulationCount"/>
				<expression tag="List.List">
					<expression tag="Symbolic.Symbol" Name="n"/>
				</expression>
			</expression>
			<expression tag="Programming.Block" Description="block" Expanded="True">
				<expression tag="Programming.InvertedIf">
					<expression tag="Symbolic.Return">
						<expression tag="Math.Number" Value="0"/>
					</expression>
					<expression tag="Relation.Equals">
						<expression tag="Symbolic.Symbol" Name="n"/>
						<expression tag="Math.Number" Value="0"/>
					</expression>
				</expression>
				<expression tag="Symbolic.Local">
					<expression tag="Symbolic.Assignment">
						<expression tag="Symbolic.Symbol" Name="g"/>
						<expression tag="Expression.Group">
							<expression tag="Math.Arithmetic.Digits">
								<expression tag="Symbolic.Symbol" Name="n"/>
								<expression tag="Math.Number" Value="2"/>
							</expression>
						</expression>
					</expression>
				</expression>
				<expression tag="Programming.Conditional">
					<expression tag="Relation.Equals">
						<expression tag="Expression.Child">
							<expression tag="Symbolic.Symbol" Name="g"/>
							<expression tag="List.List">
								<expression tag="Math.Number" Value="1"/>
								<expression tag="Math.Number" Value="1"/>
							</expression>
						</expression>
						<expression tag="Math.Number" Value="1"/>
					</expression>
					<expression tag="Expression.Child">
						<expression tag="Symbolic.Symbol" Name="g"/>
						<expression tag="List.List">
							<expression tag="Math.Number" Value="1"/>
							<expression tag="Math.Number" Value="2"/>
						</expression>
					</expression>
					<expression tag="Expression.Child">
						<expression tag="Symbolic.Symbol" Name="g"/>
						<expression tag="List.List">
							<expression tag="Math.Number" Value="2"/>
							<expression tag="Math.Number" Value="2"/>
						</expression>
					</expression>
				</expression>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Typesetting.MultiParagraph">
			<expression tag="Typesetting.Paragraph">
				<expression tag="Typesetting.BoldChunk">
					<expression tag="String.Text" Value="Plotting of population count"/>
				</expression>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="To plot of the population count of the numbers 0 ... 256:"/>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Chart.Line">
			<expression tag="List.CreateList">
				<expression tag="List.List">
					<expression tag="Symbolic.Symbol" Name="n"/>
					<expression tag="Bitwise.BitCount">
						<expression tag="Symbolic.Symbol" Name="n"/>
					</expression>
				</expression>
				<expression tag="Symbolic.Symbol" Name="n"/>
				<expression tag="Math.Number" Value="0"/>
				<expression tag="Math.Number" Value="256"/>
			</expression>
			<expression tag="List.List">
				<expression tag="String.String" Value="Title"/>
				<expression tag="String.String" Value="Population count"/>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="1">
		<expression tag="Graphics.RasterGraphics" Value=""/>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Typesetting.MultiParagraph">
			<expression tag="Typesetting.Paragraph">
				<expression tag="Typesetting.BoldChunk">
					<expression tag="String.Text" Value="Case 2 (from Rosetta code)"/>
				</expression>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="Display the pop count of the 1st thirty powers of 3"/>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="List.CreateList">
			<expression tag="Bitwise.BitCount">
				<expression tag="Math.Arithmetic.Exponentiation">
					<expression tag="Math.Number" Value="3"/>
					<expression tag="Symbolic.Symbol" Name="n"/>
				</expression>
			</expression>
			<expression tag="Symbolic.Symbol" Name="n"/>
			<expression tag="Math.Number" Value="0"/>
			<expression tag="Math.Number" Value="29"/>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="1">
		<expression tag="List.List">
			<expression tag="Math.Number" Value="1"/>
			<expression tag="Math.Number" Value="2"/>
			<expression tag="Math.Number" Value="2"/>
			<expression tag="Math.Number" Value="4"/>
			<expression tag="Math.Number" Value="3"/>
			<expression tag="Math.Number" Value="6"/>
			<expression tag="Math.Number" Value="6"/>
			<expression tag="Math.Number" Value="5"/>
			<expression tag="Math.Number" Value="6"/>
			<expression tag="Math.Number" Value="8"/>
			<expression tag="Math.Number" Value="9"/>
			<expression tag="Math.Number" Value="13"/>
			<expression tag="Math.Number" Value="10"/>
			<expression tag="Math.Number" Value="11"/>
			<expression tag="Math.Number" Value="14"/>
			<expression tag="Math.Number" Value="15"/>
			<expression tag="Math.Number" Value="11"/>
			<expression tag="Math.Number" Value="14"/>
			<expression tag="Math.Number" Value="14"/>
			<expression tag="Math.Number" Value="17"/>
			<expression tag="Math.Number" Value="17"/>
			<expression tag="Math.Number" Value="20"/>
			<expression tag="Math.Number" Value="19"/>
			<expression tag="Math.Number" Value="22"/>
			<expression tag="Math.Number" Value="16"/>
			<expression tag="Math.Number" Value="18"/>
			<expression tag="Math.Number" Value="24"/>
			<expression tag="Math.Number" Value="30"/>
			<expression tag="Math.Number" Value="25"/>
			<expression tag="Math.Number" Value="25"/>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Typesetting.MultiParagraph">
			<expression tag="Typesetting.Paragraph">
				<expression tag="Typesetting.BoldChunk">
					<expression tag="String.Text" Value="Case 3 (from Rosetta code)"/>
				</expression>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="Display the 1st thirty evil numbers."/>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="We need first a function to calculate the first numbers whose population count satisfies a given condition, passed as a lambda expression:"/>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="2">
		<expression tag="Symbolic.Assignment">
			<expression tag="Symbolic.Function">
				<expression tag="Symbolic.Symbol" Name="First"/>
				<expression tag="List.List">
					<expression tag="Symbolic.Symbol" Name="n"/>
					<expression tag="Symbolic.Symbol" Name="λ"/>
				</expression>
			</expression>
			<expression tag="Programming.Block" Description="block" Expanded="True">
				<expression tag="Symbolic.Local">
					<expression tag="Symbolic.Assignment">
						<expression tag="List.List">
							<expression tag="Symbolic.Symbol" Name="list"/>
							<expression tag="Symbolic.Symbol" Name="i"/>
						</expression>
						<expression tag="List.List">
							<expression tag="List.List"/>
							<expression tag="Math.Number" Value="0"/>
						</expression>
					</expression>
				</expression>
				<expression tag="Programming.Until">
					<expression tag="Programming.Block" Description="block" Expanded="True">
						<expression tag="Programming.InvertedIf">
							<expression tag="Expression.Append">
								<expression tag="Symbolic.Symbol" Name="list"/>
								<expression tag="Symbolic.Symbol" Name="i"/>
							</expression>
							<expression tag="Symbolic.LambdaApplication">
								<expression tag="Symbolic.Symbol" Name="λ"/>
								<expression tag="List.List">
									<expression tag="Bitwise.BitCount">
										<expression tag="Symbolic.Symbol" Name="i"/>
									</expression>
								</expression>
							</expression>
						</expression>
						<expression tag="Symbolic.Assignment">
							<expression tag="Symbolic.Symbol" Name="i"/>
							<expression tag="Math.Arithmetic.Addition">
								<expression tag="Symbolic.Symbol" Name="i"/>
								<expression tag="Math.Number" Value="1"/>
							</expression>
						</expression>
					</expression>
					<expression tag="Relation.Equals">
						<expression tag="Expression.Cardinality">
							<expression tag="Symbolic.Symbol" Name="list"/>
						</expression>
						<expression tag="Symbolic.Symbol" Name="n"/>
					</expression>
				</expression>
				<expression tag="Symbolic.Symbol" Name="list"/>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Typesetting.Paragraph">
			<expression tag="String.Text" Value="Calling the previous function with the criteria of being even numbers:"/>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Symbolic.Function">
			<expression tag="Symbolic.Symbol" Name="First"/>
			<expression tag="List.List">
				<expression tag="Math.Number" Value="30"/>
				<expression tag="Symbolic.Lambda">
					<expression tag="List.List">
						<expression tag="Symbolic.Symbol" Name="x"/>
					</expression>
					<expression tag="Math.Arithmetic.IsEven">
						<expression tag="Symbolic.Symbol" Name="x"/>
					</expression>
				</expression>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="1">
		<expression tag="List.List">
			<expression tag="Math.Number" Value="0"/>
			<expression tag="Math.Number" Value="3"/>
			<expression tag="Math.Number" Value="5"/>
			<expression tag="Math.Number" Value="6"/>
			<expression tag="Math.Number" Value="9"/>
			<expression tag="Math.Number" Value="10"/>
			<expression tag="Math.Number" Value="12"/>
			<expression tag="Math.Number" Value="15"/>
			<expression tag="Math.Number" Value="17"/>
			<expression tag="Math.Number" Value="18"/>
			<expression tag="Math.Number" Value="20"/>
			<expression tag="Math.Number" Value="23"/>
			<expression tag="Math.Number" Value="24"/>
			<expression tag="Math.Number" Value="27"/>
			<expression tag="Math.Number" Value="29"/>
			<expression tag="Math.Number" Value="30"/>
			<expression tag="Math.Number" Value="33"/>
			<expression tag="Math.Number" Value="34"/>
			<expression tag="Math.Number" Value="36"/>
			<expression tag="Math.Number" Value="39"/>
			<expression tag="Math.Number" Value="40"/>
			<expression tag="Math.Number" Value="43"/>
			<expression tag="Math.Number" Value="45"/>
			<expression tag="Math.Number" Value="46"/>
			<expression tag="Math.Number" Value="48"/>
			<expression tag="Math.Number" Value="51"/>
			<expression tag="Math.Number" Value="53"/>
			<expression tag="Math.Number" Value="54"/>
			<expression tag="Math.Number" Value="57"/>
			<expression tag="Math.Number" Value="58"/>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Typesetting.MultiParagraph">
			<expression tag="Typesetting.Paragraph">
				<expression tag="Typesetting.BoldChunk">
					<expression tag="String.Text" Value="Case 4 (from Rosetta code)"/>
				</expression>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="Display the 1st thirty odious numbers."/>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Symbolic.Function">
			<expression tag="Symbolic.Symbol" Name="First"/>
			<expression tag="List.List">
				<expression tag="Math.Number" Value="30"/>
				<expression tag="Symbolic.Lambda">
					<expression tag="List.List">
						<expression tag="Symbolic.Symbol" Name="x"/>
					</expression>
					<expression tag="Math.Arithmetic.IsOdd">
						<expression tag="Symbolic.Symbol" Name="x"/>
					</expression>
				</expression>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="1">
		<expression tag="List.List">
			<expression tag="Math.Number" Value="1"/>
			<expression tag="Math.Number" Value="2"/>
			<expression tag="Math.Number" Value="4"/>
			<expression tag="Math.Number" Value="7"/>
			<expression tag="Math.Number" Value="8"/>
			<expression tag="Math.Number" Value="11"/>
			<expression tag="Math.Number" Value="13"/>
			<expression tag="Math.Number" Value="14"/>
			<expression tag="Math.Number" Value="16"/>
			<expression tag="Math.Number" Value="19"/>
			<expression tag="Math.Number" Value="21"/>
			<expression tag="Math.Number" Value="22"/>
			<expression tag="Math.Number" Value="25"/>
			<expression tag="Math.Number" Value="26"/>
			<expression tag="Math.Number" Value="28"/>
			<expression tag="Math.Number" Value="31"/>
			<expression tag="Math.Number" Value="32"/>
			<expression tag="Math.Number" Value="35"/>
			<expression tag="Math.Number" Value="37"/>
			<expression tag="Math.Number" Value="38"/>
			<expression tag="Math.Number" Value="41"/>
			<expression tag="Math.Number" Value="42"/>
			<expression tag="Math.Number" Value="44"/>
			<expression tag="Math.Number" Value="47"/>
			<expression tag="Math.Number" Value="49"/>
			<expression tag="Math.Number" Value="50"/>
			<expression tag="Math.Number" Value="52"/>
			<expression tag="Math.Number" Value="55"/>
			<expression tag="Math.Number" Value="56"/>
			<expression tag="Math.Number" Value="59"/>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Typesetting.MultiParagraph">
			<expression tag="Typesetting.Paragraph">
				<expression tag="Typesetting.BoldChunk">
					<expression tag="String.Text" Value="See also:"/>
				</expression>
			</expression>
			<expression tag="Typesetting.BulletedList">
				<expression tag="Typesetting.Paragraph">
					<expression tag="String.Text" Value="Other"/>
					<expression tag="Internet.UniformResourceLocator" Value="/?script=articles/Rosetta_Code_examples" Description="Rosetta code"/>
					<expression tag="String.Text" Value="examples"/>
				</expression>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="Author: Laurence R. Ugalde"/>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="Last modified:"/>
				<expression tag="Time.Time" Value="1621356120000"/>
			</expression>
		</expression>
	</expression>
</expression>