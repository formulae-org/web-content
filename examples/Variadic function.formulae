<expression tag="Formulae.Script"><expression tag="Formulae.Script.Row" type="0"><expression tag="Typesetting.MultiParagraph"><expression tag="Typesetting.Paragraph"><expression tag="Typesetting.BoldChunk"><expression tag="String.Text" Value="Variadic function"/></expression></expression><expression tag="Typesetting.Paragraph"><expression tag="String.Text" Value="A"/><expression tag="Internet.UniformResourceLocator" Value="https://en.wikipedia.org/wiki/Variadic_function" Description="variadic function"/><expression tag="String.Text" Value="is a"/><expression tag="Internet.UniformResourceLocator" Value="https://en.wikipedia.org/wiki/Function_(programming)" Description="function"/><expression tag="String.Text" Value="of indefinite"/><expression tag="Internet.UniformResourceLocator" Value="https://en.wikipedia.org/wiki/Arity" Description="arity,"/><expression tag="String.Text" Value="i.e., one which accepts a variable number of"/><expression tag="Internet.UniformResourceLocator" Value="https://en.wikipedia.org/wiki/Argument_(computer_science)" Description="arguments."/><expression tag="String.Text" Value="Support for variadic functions differs widely among programming languages."/></expression><expression tag="Typesetting.Paragraph"><expression tag="String.Text" Value="In this script is shown how to create and use variadic functions."/></expression><expression tag="Typesetting.Paragraph"><expression tag="String.Text" Value="This is also a solution for the"/><expression tag="Internet.UniformResourceLocator" Value="https://rosettacode.org/wiki/Variadic_function" Description="Variadic function"/><expression tag="String.Text" Value="exercise, described in the website"/><expression tag="Internet.UniformResourceLocator" Value="https://rosettacode.org/wiki/Rosetta_Code" Description="Rosetta code."/></expression><expression tag="Typesetting.Paragraph"><expression tag="Typesetting.BoldChunk"><expression tag="String.Text" Value="Solution"/></expression></expression><expression tag="Typesetting.Paragraph"><expression tag="String.Text" Value="Fōrmulæ does not have variadic functions. But you can mimic the behavior by defining a function with an unconstrained array as its parameter, i.e., an array whose length is determined at run time."/></expression><expression tag="Typesetting.Paragraph"><expression tag="Typesetting.BoldChunk"><expression tag="String.Text" Value="Examples"/></expression></expression></expression></expression><expression tag="Formulae.Script.Row" type="0"><expression tag="Typesetting.Paragraph"><expression tag="String.Text" Value="THe following function accepts a list as its unique parameter. It retrieves the list in vertical form (as a matrix of 1 column)"/></expression></expression><expression tag="Formulae.Script.Row" type="2"><expression tag="Symbolic.Assignment"><expression tag="Symbolic.Function"><expression tag="Symbolic.Symbol" Name="f"/><expression tag="List.List"><expression tag="Symbolic.Symbol" Name="x"/></expression></expression><expression tag="List.CreateList"><expression tag="List.List"><expression tag="Symbolic.Symbol" Name="i"/></expression><expression tag="Symbolic.Symbol" Name="i"/><expression tag="Symbolic.Symbol" Name="x"/></expression></expression></expression><expression tag="Formulae.Script.Row" type="0"><expression tag="Symbolic.Function"><expression tag="Symbolic.Symbol" Name="f"/><expression tag="List.List"><expression tag="List.List"><expression tag="String.String" Value="Hello"/><expression tag="String.String" Value="World"/></expression></expression></expression></expression><expression tag="Formulae.Script.Row" type="1"><expression tag="List.List"><expression tag="List.List"><expression tag="String.String" Value="Hello"/></expression><expression tag="List.List"><expression tag="String.String" Value="World"/></expression></expression></expression><expression tag="Formulae.Script.Row" type="0"><expression tag="Symbolic.Function"><expression tag="Symbolic.Symbol" Name="f"/><expression tag="List.List"><expression tag="List.List"><expression tag="String.String" Value="Mary"/><expression tag="String.String" Value="had"/><expression tag="String.String" Value="a"/><expression tag="String.String" Value="little"/><expression tag="String.String" Value="lamb"/></expression></expression></expression></expression><expression tag="Formulae.Script.Row" type="1"><expression tag="List.List"><expression tag="List.List"><expression tag="String.String" Value="Mary"/></expression><expression tag="List.List"><expression tag="String.String" Value="had"/></expression><expression tag="List.List"><expression tag="String.String" Value="a"/></expression><expression tag="List.List"><expression tag="String.String" Value="little"/></expression><expression tag="List.List"><expression tag="String.String" Value="lamb"/></expression></expression></expression><expression tag="Formulae.Script.Row" type="0"><expression tag="Typesetting.Paragraph"><expression tag="String.Text" Value="With this approach we can use several parameters being lists with variable number of elements, for example:"/></expression></expression><expression tag="Formulae.Script.Row" type="2"><expression tag="Symbolic.Assignment"><expression tag="Symbolic.Function"><expression tag="Symbolic.Symbol" Name="SumOverMultiplication"/><expression tag="List.List"><expression tag="Symbolic.Symbol" Name="list1"/><expression tag="Symbolic.Symbol" Name="list2"/></expression></expression><expression tag="Math.Arithmetic.Division"><expression tag="Math.Arithmetic.Summation"><expression tag="Symbolic.Symbol" Name="i"/><expression tag="Symbolic.Symbol" Name="i"/><expression tag="Symbolic.Symbol" Name="list1"/></expression><expression tag="Math.Arithmetic.Product"><expression tag="Symbolic.Symbol" Name="i"/><expression tag="Symbolic.Symbol" Name="i"/><expression tag="Symbolic.Symbol" Name="list2"/></expression></expression></expression></expression><expression tag="Formulae.Script.Row" type="0"><expression tag="Symbolic.Function"><expression tag="Symbolic.Symbol" Name="SumOverMultiplication"/><expression tag="List.List"><expression tag="List.List"><expression tag="Math.Number" Value="5"/><expression tag="Math.Number" Value="3"/><expression tag="Symbolic.Symbol" Name="w"/></expression><expression tag="List.List"><expression tag="Math.Number" Value="2"/><expression tag="Symbolic.Symbol" Name="z"/></expression></expression></expression></expression><expression tag="Formulae.Script.Row" type="1"><expression tag="Math.Arithmetic.Multiplication"><expression tag="Math.Arithmetic.Division"><expression tag="Math.Number" Value="1"/><expression tag="Math.Number" Value="2"/></expression><expression tag="Math.Arithmetic.Division"><expression tag="Math.Arithmetic.Addition"><expression tag="Math.Number" Value="8"/><expression tag="Symbolic.Symbol" Name="w"/></expression><expression tag="Symbolic.Symbol" Name="z"/></expression></expression></expression><expression tag="Formulae.Script.Row" type="0"><expression tag="Typesetting.MultiParagraph"><expression tag="Typesetting.Paragraph"><expression tag="Typesetting.BoldChunk"><expression tag="String.Text" Value="See also:"/></expression></expression><expression tag="Typesetting.BulletedList"><expression tag="Typesetting.Paragraph"><expression tag="String.Text" Value="Other"/><expression tag="Internet.UniformResourceLocator" Value="/?article=Rosetta_Code_examples" Description="Rosetta code"/><expression tag="String.Text" Value="examples"/></expression></expression><expression tag="Typesetting.Paragraph"><expression tag="String.Text" Value="Author: Laurence R. Ugalde"/></expression><expression tag="Typesetting.Paragraph"><expression tag="String.Text" Value="Last modified:"/><expression tag="Time.Time" Value="1621527132920"/></expression></expression></expression></expression>