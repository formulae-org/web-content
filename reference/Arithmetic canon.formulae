<expression tag="Formulae.Script" Modules="org.formulae.typesetting,org.formulae.text.string,org.formulae.math.arithmetic,org.formulae.list,org.formulae.visualization,org.formulae.diagramming,org.formulae.math.complex,org.formulae.programming,org.formulae.symbolic,org.formulae.time">
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Typesetting.MultiParagraph">
			<expression tag="Typesetting.Paragraph">
				<expression tag="Typesetting.BoldChunk">
					<expression tag="String.Text" Value="Arithmetic canon"/>
				</expression>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="This article explains the standard procedures to follow when performing visualization, edition and reduction of arithmetic expressions."/>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Typesetting.MultiParagraph">
			<expression tag="Typesetting.Paragraph">
				<expression tag="Typesetting.BoldChunk">
					<expression tag="String.Text" Value="Numbers"/>
				</expression>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="In Fōrmulæ, numbers are represented with the"/>
				<expression tag="Internet.UniformResourceLocator" Value="/?script=reference/Math.Number" Description="Number"/>
				<expression tag="String.Text" Value="Expression. They have the following properties:"/>
			</expression>
			<expression tag="Typesetting.BulletedList">
				<expression tag="Typesetting.Paragraph">
					<expression tag="String.Text" Value="They represent only either"/>
					<expression tag="Typesetting.BoldChunk">
						<expression tag="String.Text" Value="positive"/>
					</expression>
					<expression tag="String.Text" Value="real numbers"/>
					<expression tag="String.Text" Value="or"/>
					<expression tag="Typesetting.BoldChunk">
						<expression tag="String.Text" Value="zero."/>
					</expression>
				</expression>
				<expression tag="String.Text" Value="There are two types: Integer and decimal numbers. Integer numbers can represent only integer values, while decimal numbers can represent both integer and fractional values."/>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="There must exist a way to visually differentiate between integer and decimal numbers:"/>
			</expression>
			<expression tag="Typesetting.BulletedList">
				<expression tag="Typesetting.Paragraph">
					<expression tag="String.Text" Value="Integer numbers are usually shown as is, e.g."/>
					<expression tag="Math.Number" Value="567"/>
				</expression>
				<expression tag="Typesetting.Paragraph">
					<expression tag="String.Text" Value="Decimal numbers always show a decimal point, even when thay are integers., in such that case thay are shown as 23. or 23.0 (it is usually configurable)."/>
				</expression>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="Examples:"/>
			</expression>
			<expression tag="Typesetting.Centering">
				<expression tag="List.Table">
					<expression tag="List.List">
						<expression tag="List.List">
							<expression tag="Visualization.Bold" Value="True" Set="True">
								<expression tag="String.Text" Value="Example"/>
							</expression>
							<expression tag="Visualization.Bold" Value="True" Set="True">
								<expression tag="String.Text" Value="Description"/>
							</expression>
						</expression>
						<expression tag="List.List">
							<expression tag="Math.Number" Value="5"/>
							<expression tag="String.Text" Value="Integer number"/>
						</expression>
						<expression tag="List.List">
							<expression tag="Math.Number" Value="12.34"/>
							<expression tag="String.Text" Value="Decimal number"/>
						</expression>
						<expression tag="List.List">
							<expression tag="Math.Number" Value="5."/>
							<expression tag="String.Text" Value="Decimal number"/>
						</expression>
						<expression tag="List.List">
							<expression tag="Math.Number" Value="0"/>
							<expression tag="String.Text" Value="Integer zero"/>
						</expression>
						<expression tag="List.List">
							<expression tag="Math.Number" Value="0."/>
							<expression tag="String.Text" Value="Decimal zero"/>
						</expression>
					</expression>
				</expression>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="Other kind of numbers can be represented using well known expressions:"/>
			</expression>
			<expression tag="Typesetting.BulletedList">
				<expression tag="Typesetting.Paragraph">
					<expression tag="Typesetting.BoldChunk">
						<expression tag="String.Text" Value="Negative numbers."/>
					</expression>
					<expression tag="String.Text" Value="A negative number can be created using a"/>
					<expression tag="Internet.UniformResourceLocator" Value="/?script=reference/Math.Arithmetic.Negative" Description="Negative"/>
					<expression tag="String.Text" Value="expression, containing a"/>
					<expression tag="Internet.UniformResourceLocator" Value="/?script=reference/Math.Number" Description="Number"/>
					<expression tag="String.Text" Value="expression."/>
				</expression>
				<expression tag="Typesetting.Paragraph">
					<expression tag="Typesetting.BoldChunk">
						<expression tag="String.Text" Value="Rational numbers."/>
					</expression>
					<expression tag="String.Text" Value="A rational number can be created using a"/>
					<expression tag="Internet.UniformResourceLocator" Value="/?script=reference/Math.Arithmetic.Division" Description="Division"/>
					<expression tag="String.Text" Value="expression, containing two"/>
					<expression tag="Internet.UniformResourceLocator" Value="/?script=reference/Math.Number" Description="Number"/>
					<expression tag="String.Text" Value="expressions representing integer numbers, as its subexpressions, the numerator and the denominator."/>
				</expression>
				<expression tag="Typesetting.Paragraph">
					<expression tag="Typesetting.BoldChunk">
						<expression tag="String.Text" Value="Negative rational numbers."/>
					</expression>
					<expression tag="String.Text" Value="A negative rational number can be cretaed using a"/>
					<expression tag="Internet.UniformResourceLocator" Value="/?script=reference/Math.Arithmetic.Negative" Description="Negative"/>
					<expression tag="String.Text" Value="expression containing a rational number as defined in the previous line."/>
				</expression>
				<expression tag="Typesetting.Paragraph">
					<expression tag="Typesetting.BoldChunk">
						<expression tag="String.Text" Value="Complex numbers."/>
					</expression>
					<expression tag="Null"/>
				</expression>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="Examples:"/>
			</expression>
			<expression tag="Typesetting.Centering">
				<expression tag="List.Table">
					<expression tag="List.List">
						<expression tag="List.List">
							<expression tag="Visualization.Bold" Value="True" Set="True">
								<expression tag="String.Text" Value="Type of numeric expression"/>
							</expression>
							<expression tag="Visualization.Bold" Value="True" Set="True">
								<expression tag="String.Text" Value="Example"/>
							</expression>
							<expression tag="Visualization.Bold" Value="True" Set="True">
								<expression tag="String.Text" Value="Example as a expression tree"/>
							</expression>
						</expression>
						<expression tag="List.List">
							<expression tag="String.Text" Value="Zero or positive number"/>
							<expression tag="Math.Number" Value="5"/>
							<expression tag="Diagramming.Tree" Expanded="True">
								<expression tag="Math.Number" Value="5"/>
							</expression>
						</expression>
						<expression tag="List.List">
							<expression tag="String.Text" Value="Negative number"/>
							<expression tag="Math.Arithmetic.Negative">
								<expression tag="Math.Number" Value="12.5"/>
							</expression>
							<expression tag="Diagramming.Tree" Expanded="True">
								<expression tag="Internet.UniformResourceLocator" Value="/?script=reference/Math.Arithmetic.Negative" Description="Negative"/>
								<expression tag="Diagramming.Tree" Expanded="True">
									<expression tag="Math.Number" Value="12.5"/>
								</expression>
							</expression>
						</expression>
						<expression tag="List.List">
							<expression tag="String.Text" Value="Positive rational"/>
							<expression tag="Math.Arithmetic.Division">
								<expression tag="Math.Number" Value="2"/>
								<expression tag="Math.Number" Value="3"/>
							</expression>
							<expression tag="Diagramming.Tree" Expanded="True">
								<expression tag="Internet.UniformResourceLocator" Value="/?script=reference/Math.Arithmetic.Division" Description="Division"/>
								<expression tag="Diagramming.Tree" Expanded="True">
									<expression tag="Math.Number" Value="2"/>
								</expression>
								<expression tag="Diagramming.Tree" Expanded="True">
									<expression tag="Math.Number" Value="3"/>
								</expression>
							</expression>
						</expression>
						<expression tag="List.List">
							<expression tag="String.Text" Value="Negative rational"/>
							<expression tag="Math.Arithmetic.Negative">
								<expression tag="Math.Arithmetic.Division">
									<expression tag="Math.Number" Value="4"/>
									<expression tag="Math.Number" Value="5"/>
								</expression>
							</expression>
							<expression tag="Diagramming.Tree" Expanded="True">
								<expression tag="Internet.UniformResourceLocator" Value="/?script=reference/Math.Arithmetic.Negative" Description="Negative"/>
								<expression tag="Diagramming.Tree" Expanded="True">
									<expression tag="Internet.UniformResourceLocator" Value="/?script=reference/Math.Arithmetic.Division" Description="Division"/>
									<expression tag="Diagramming.Tree" Expanded="True">
										<expression tag="Math.Number" Value="4"/>
									</expression>
									<expression tag="Diagramming.Tree" Expanded="True">
										<expression tag="Math.Number" Value="5"/>
									</expression>
								</expression>
							</expression>
						</expression>
						<expression tag="List.List">
							<expression tag="String.Text" Value="Complex number"/>
							<expression tag="Math.Arithmetic.Addition">
								<expression tag="Math.Number" Value="0.5"/>
								<expression tag="Math.Arithmetic.Negative">
									<expression tag="Math.Arithmetic.Multiplication">
										<expression tag="Math.Arithmetic.Division">
											<expression tag="Math.Number" Value="2"/>
											<expression tag="Math.Number" Value="3"/>
										</expression>
										<expression tag="Math.Complex.ImaginaryUnit"/>
									</expression>
								</expression>
							</expression>
							<expression tag="Diagramming.Tree" Expanded="True">
								<expression tag="Internet.UniformResourceLocator" Value="/?script=reference/Math.Arithmetic.Addition" Description="Addition"/>
								<expression tag="Diagramming.Tree" Expanded="True">
									<expression tag="Math.Number" Value="0.5"/>
								</expression>
								<expression tag="Diagramming.Tree" Expanded="True">
									<expression tag="Internet.UniformResourceLocator" Value="/?script=reference/Math.Arithmetic.Negative" Description="Negative"/>
									<expression tag="Diagramming.Tree" Expanded="True">
										<expression tag="Internet.UniformResourceLocator" Value="/?script=reference/Math.Arithmetic.Multiplication" Description="Multiplication"/>
										<expression tag="Diagramming.Tree" Expanded="True">
											<expression tag="Internet.UniformResourceLocator" Value="/?script=reference/Math.Arithmetic.Division" Description="Division"/>
											<expression tag="Diagramming.Tree" Expanded="True">
												<expression tag="Math.Number" Value="2"/>
											</expression>
											<expression tag="Diagramming.Tree" Expanded="True">
												<expression tag="Math.Number" Value="3"/>
											</expression>
										</expression>
										<expression tag="Diagramming.Tree" Expanded="True">
											<expression tag="Math.Complex.ImaginaryUnit"/>
										</expression>
									</expression>
								</expression>
							</expression>
						</expression>
					</expression>
				</expression>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="Fōrmulæ supports arbitrary precision numbers."/>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Typesetting.Rule"/>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Typesetting.MultiParagraph">
			<expression tag="Typesetting.Paragraph">
				<expression tag="Typesetting.BoldChunk">
					<expression tag="String.Text" Value="Number of significant digits"/>
				</expression>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="In Fōrmulæ, there is  a measure of the number of slots required for storing a given number. In this context, a slot is a hypotetical storage unit intended to hold a single digit, it is neither a requirement nor recommendatios of how numberas might be stored."/>
			</expression>
			<expression tag="String.Text" Value="For example:"/>
			<expression tag="Typesetting.BulletedList">
				<expression tag="Typesetting.Paragraph">
					<expression tag="String.Text" Value="To store the integer number 234, we require 3 slots, because the tree digits of 234 are significant."/>
				</expression>
				<expression tag="Typesetting.Paragraph">
					<expression tag="String.Text" Value="To store the decimal number 405.23 we require 5 slots. It is assumed that and indicator of the position of the decimal point is available. This is usually known as the"/>
					<expression tag="Typesetting.ItalicChunk">
						<expression tag="String.Text" Value="scale."/>
					</expression>
				</expression>
				<expression tag="Typesetting.Paragraph">
					<expression tag="String.Text" Value="To store the decimal number -12.34000067 we require 10 slots. It is assumed that an indicator of the sign is available."/>
				</expression>
				<expression tag="Typesetting.Paragraph">
					<expression tag="String.Text" Value="To store the integer number 76,300 only 3 slots are required (for the digits 7, 6 and 3) because we can use the"/>
					<expression tag="Typesetting.ItalicChunk">
						<expression tag="String.Text" Value="scale"/>
					</expression>
					<expression tag="String.Text" Value="to indicate that the decimal point is 4 places at the right of the digit 7"/>
				</expression>
				<expression tag="Typesetting.Paragraph">
					<expression tag="String.Text" Value="To store the decimal number 0.0000052 only 2 slots are required (for the digits 5 and 2), because we can use the"/>
					<expression tag="Typesetting.ItalicChunk">
						<expression tag="String.Text" Value="scale"/>
					</expression>
					<expression tag="String.Text" Value="to indicate that the decimal point is 5 places at the left of the digit 5"/>
				</expression>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="A formal definition of the number of significant digits of a number would be: the number of digits of the"/>
				<expression tag="Internet.UniformResourceLocator" Value="https://en.wikipedia.org/wiki/Significand" Description="mantissa"/>
				<expression tag="String.Text" Value="when the number is expressed in"/>
				<expression tag="Internet.UniformResourceLocator" Value="https://en.wikipedia.org/wiki/Normalized_number" Description="normalized scientific notation."/>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="There are a"/>
				<expression tag="Typesetting.BoldChunk">
					<expression tag="String.Text" Value="Number of significant digits"/>
				</expression>
				<expression tag="String.Text" Value="expression already included in the"/>
				<expression tag="Internet.UniformResourceLocator" Value="/?script=reference/org.formulae.arithmetic" Description="Arithmetic package"/>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Programming.Block" Description="Description" Expanded="True">
			<expression tag="Symbolic.Local">
				<expression tag="Symbolic.Assignment">
					<expression tag="Symbolic.Symbol" Name="list"/>
					<expression tag="List.List">
						<expression tag="Math.Number" Value="8"/>
						<expression tag="Math.Number" Value="1500000"/>
						<expression tag="Math.Number" Value="12.776"/>
						<expression tag="Math.Number" Value="1.0000000000001"/>
						<expression tag="Math.Number" Value="14.5"/>
						<expression tag="Math.Number" Value="145"/>
						<expression tag="Math.Number" Value="1450000"/>
						<expression tag="Math.Number" Value="0.0000145"/>
					</expression>
				</expression>
			</expression>
			<expression tag="List.CreateTable">
				<expression tag="List.List">
					<expression tag="Symbolic.Symbol" Name="n"/>
					<expression tag="Math.Arithmetic.SignificantDigits">
						<expression tag="Symbolic.Symbol" Name="n"/>
					</expression>
				</expression>
				<expression tag="Symbolic.Symbol" Name="n"/>
				<expression tag="Symbolic.Symbol" Name="list"/>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="1">
		<expression tag="List.Table">
			<expression tag="List.List">
				<expression tag="List.List">
					<expression tag="Symbolic.Symbol" Name="n"/>
					<expression tag="Math.Arithmetic.SignificantDigits">
						<expression tag="Symbolic.Symbol" Name="n"/>
					</expression>
				</expression>
				<expression tag="List.List">
					<expression tag="Math.Number" Value="8"/>
					<expression tag="Math.Number" Value="1"/>
				</expression>
				<expression tag="List.List">
					<expression tag="Math.Number" Value="1500000"/>
					<expression tag="Math.Number" Value="2"/>
				</expression>
				<expression tag="List.List">
					<expression tag="Math.Number" Value="12.776"/>
					<expression tag="Math.Number" Value="5"/>
				</expression>
				<expression tag="List.List">
					<expression tag="Math.Number" Value="1.0000000000001"/>
					<expression tag="Math.Number" Value="14"/>
				</expression>
				<expression tag="List.List">
					<expression tag="Math.Number" Value="14.5"/>
					<expression tag="Math.Number" Value="3"/>
				</expression>
				<expression tag="List.List">
					<expression tag="Math.Number" Value="145"/>
					<expression tag="Math.Number" Value="3"/>
				</expression>
				<expression tag="List.List">
					<expression tag="Math.Number" Value="1450000"/>
					<expression tag="Math.Number" Value="3"/>
				</expression>
				<expression tag="List.List">
					<expression tag="Math.Number" Value="0.0000145"/>
					<expression tag="Math.Number" Value="3"/>
				</expression>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Typesetting.Rule"/>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Typesetting.MultiParagraph">
			<expression tag="Typesetting.Paragraph">
				<expression tag="Typesetting.BoldChunk">
					<expression tag="String.Text" Value="Precision"/>
				</expression>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="The precision is a definition of the maximum number of significant digits an operation can have. Using a precision of"/>
				<expression tag="Symbolic.Symbol" Name="n"/>
				<expression tag="String.Text" Value="(digits) means that the result of the operations can be, at most, of"/>
				<expression tag="Symbolic.Symbol" Name="n"/>
				<expression tag="String.Text" Value="significant digits."/>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="The precision has a default value:"/>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Math.Arithmetic.GetPrecision"/>
	</expression>
	<expression tag="Formulae.Script.Row" type="1">
		<expression tag="Math.Number" Value="20"/>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Typesetting.MultiParagraph">
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="In Fōrmulæ, precision only applies to operations that produce"/>
				<expression tag="Typesetting.BoldChunk">
					<expression tag="String.Text" Value="decimal numbers"/>
				</expression>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="Operations with integer numbers are not affected by the precision, the results can have as many number of significant digits as neccesary:"/>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Math.Arithmetic.Multiplication">
			<expression tag="Math.Number" Value="348763487628562545"/>
			<expression tag="Math.Number" Value="74354763254763542"/>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="1">
		<expression tag="Math.Number" Value="25932226554527421492677609332734390"/>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Typesetting.Paragraph">
			<expression tag="String.Text" Value="Since rational numbers are formed using two integer numbers, their numerators and denominators can hold an arbitrary number of digits each:"/>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Math.Arithmetic.Exponentiation">
			<expression tag="Math.Arithmetic.Division">
				<expression tag="Math.Number" Value="6324345735423"/>
				<expression tag="Math.Number" Value="4734736547623547632574"/>
			</expression>
			<expression tag="Math.Number" Value="2"/>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="1">
		<expression tag="Math.Arithmetic.Division">
			<expression tag="Math.Number" Value="39997348981163086716988929"/>
			<expression tag="Math.Number" Value="22417730175402150738875702614044640105865476"/>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Typesetting.Paragraph">
			<expression tag="String.Text" Value="Any operation that involves a decimal number will produce the result using the precision, that is, the result will have"/>
			<expression tag="Typesetting.BoldChunk">
				<expression tag="String.Text" Value="at most"/>
			</expression>
			<expression tag="String.Text" Value="the number of significant digits defined by the precision."/>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Math.Trigonometric.Sine">
			<expression tag="Math.Number" Value="0.5"/>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="1">
		<expression tag="Math.Number" Value="0.47942553860420300027"/>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Typesetting.Paragraph">
			<expression tag="String.Text" Value="But it can be changed:"/>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Programming.Block" Description="Description" Expanded="True">
			<expression tag="Math.Arithmetic.SetPrecision">
				<expression tag="Math.Number" Value="50"/>
			</expression>
			<expression tag="Math.Trigonometric.Sine">
				<expression tag="Math.Number" Value="0.5"/>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="1">
		<expression tag="Math.Number" Value="0.4794255386042030002732879352155713880818033679406"/>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Typesetting.Paragraph">
			<expression tag="String.Text" Value="Please notice that the results can have a less number of significant digits, the definition states that these result can have the number of significant digits defined by the precision"/>
			<expression tag="Typesetting.BoldChunk">
				<expression tag="String.Text" Value="at most."/>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Math.Arithmetic.Addition">
			<expression tag="Math.Number" Value="0.2"/>
			<expression tag="Math.Number" Value="0.3"/>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="1">
		<expression tag="Math.Number" Value="0.5"/>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Typesetting.Paragraph">
			<expression tag="String.Text" Value="In fact, there can be cases where the result has less number of significant digits than the operands:"/>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Math.Arithmetic.Addition">
			<expression tag="Math.Number" Value="0.536557343"/>
			<expression tag="Math.Number" Value="0.463442657"/>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="1">
		<expression tag="Math.Number" Value="1."/>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Typesetting.Rule"/>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Typesetting.MultiParagraph">
			<expression tag="Typesetting.Paragraph">
				<expression tag="Typesetting.BoldChunk">
					<expression tag="String.Text" Value="Rounding"/>
				</expression>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="One of the previous calculations was:"/>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Math.Trigonometric.Sine">
			<expression tag="Math.Number" Value="0.5"/>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="1">
		<expression tag="Math.Number" Value="0.47942553860420300027"/>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Typesetting.MultiParagraph">
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="This result is not exact, the actual value of sin(0.5) is a"/>
				<expression tag="Internet.UniformResourceLocator" Value="https://en.wikipedia.org/wiki/Transcendental_number" Description="transcendental number"/>
				<expression tag="String.Text" Value="and therefore, if we wanted to get this result as a decimal number, it would require an infinite number of decimal digits."/>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="The result is rounded to have as many significant digits as the precision allows."/>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="You have surely heard of terms as"/>
				<expression tag="Typesetting.ItalicChunk">
					<expression tag="String.Text" Value="truncation"/>
				</expression>
				<expression tag="String.Text" Value="or"/>
				<expression tag="Typesetting.ItalicChunk">
					<expression tag="String.Text" Value="rounding."/>
				</expression>
				<expression tag="String.Text" Value="The action of taking away several significant digits of a result (which has more or a infinite number of them) in general is calling"/>
				<expression tag="Typesetting.BoldChunk">
					<expression tag="String.Text" Value="rounding."/>
				</expression>
				<expression tag="String.Text" Value="There are several"/>
				<expression tag="Typesetting.BoldChunk">
					<expression tag="String.Text" Value="rounding modes,"/>
				</expression>
				<expression tag="String.Text" Value="that is, several forms of rounding a given value."/>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Typesetting.Rule"/>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Typesetting.MultiParagraph">
			<expression tag="Typesetting.Paragraph">
				<expression tag="Typesetting.BoldChunk">
					<expression tag="String.Text" Value="Rounding modes"/>
				</expression>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="Let us take the case of the number"/>
				<expression tag="Math.Arithmetic.Division">
					<expression tag="Math.Number" Value="1"/>
					<expression tag="Math.Number" Value="3"/>
				</expression>
				<expression tag="String.Text" Value=". Its exact decimal representation requires an infinite number of significant digits: 0.333333333... so if we need a decimal number, the number needs to be rounded. For simplicity, suppose a precision of 3 digits, so we have two possible options: 0.333 and 0.334"/>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="There are five modes of rounding:"/>
			</expression>
			<expression tag="Typesetting.Centering">
				<expression tag="List.Table">
					<expression tag="List.List">
						<expression tag="List.List">
							<expression tag="Visualization.Bold" Value="True" Set="True">
								<expression tag="String.Text" Value="Rounding mode"/>
							</expression>
							<expression tag="Visualization.Bold" Value="True" Set="True">
								<expression tag="String.Text" Value="Explnation"/>
							</expression>
							<expression tag="Visualization.Bold" Value="True" Set="True">
								<expression tag="String.Text" Value="Result"/>
							</expression>
						</expression>
						<expression tag="List.List">
							<expression tag="Math.Arithmetic.RoundingMode.TowardsZero"/>
							<expression tag="String.Text" Value="Choose the option that is nearer to 0"/>
							<expression tag="Math.Number" Value="0.333"/>
						</expression>
						<expression tag="List.List">
							<expression tag="Math.Arithmetic.RoundingMode.AwayFromZero"/>
							<expression tag="String.Text" Value="Choose the option that is farther to 0"/>
							<expression tag="Math.Number" Value="0.334"/>
						</expression>
						<expression tag="List.List">
							<expression tag="Math.Arithmetic.RoundingMode.TowardsMinusInfinity"/>
							<expression tag="String.Text" Value="Choose the option that is numerically lesser"/>
							<expression tag="Math.Number" Value="0.333"/>
						</expression>
						<expression tag="List.List">
							<expression tag="Math.Arithmetic.RoundingMode.TowardsInfinity"/>
							<expression tag="String.Text" Value="Choose the option that is numerically greater"/>
							<expression tag="Math.Number" Value="0.334"/>
						</expression>
						<expression tag="List.List">
							<expression tag="String.Text" Value="Toward nearest"/>
							<expression tag="Visualization.HorizontalArray">
								<expression tag="String.Text" Value="From the real value of"/>
								<expression tag="Math.Arithmetic.Division">
									<expression tag="Math.Number" Value="1"/>
									<expression tag="Math.Number" Value="3"/>
								</expression>
								<expression tag="String.Text" Value=", choose the nearest option"/>
							</expression>
							<expression tag="Math.Number" Value="0.333"/>
						</expression>
					</expression>
				</expression>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="It seems that the first and second pairs are the same. They are for positive numbers. Let us see the case of the number"/>
				<expression tag="Math.Arithmetic.Negative">
					<expression tag="Math.Arithmetic.Division">
						<expression tag="Math.Number" Value="1"/>
						<expression tag="Math.Number" Value="3"/>
					</expression>
				</expression>
				<expression tag="String.Text" Value=", then the two options are now -0.333 and -0.334 The results of the rounding is:"/>
			</expression>
			<expression tag="Typesetting.Centering">
				<expression tag="List.Table">
					<expression tag="List.List">
						<expression tag="List.List">
							<expression tag="Visualization.Bold" Value="True" Set="True">
								<expression tag="String.Text" Value="Rounding mode"/>
							</expression>
							<expression tag="Visualization.Bold" Value="True" Set="True">
								<expression tag="String.Text" Value="Result"/>
							</expression>
						</expression>
						<expression tag="List.List">
							<expression tag="Math.Arithmetic.RoundingMode.TowardsZero"/>
							<expression tag="Math.Arithmetic.Negative">
								<expression tag="Math.Number" Value="0.333"/>
							</expression>
						</expression>
						<expression tag="List.List">
							<expression tag="Math.Arithmetic.RoundingMode.AwayFromZero"/>
							<expression tag="Math.Arithmetic.Negative">
								<expression tag="Math.Number" Value="0.334"/>
							</expression>
						</expression>
						<expression tag="List.List">
							<expression tag="Math.Arithmetic.RoundingMode.TowardsMinusInfinity"/>
							<expression tag="Math.Arithmetic.Negative">
								<expression tag="Math.Number" Value="0.334"/>
							</expression>
						</expression>
						<expression tag="List.List">
							<expression tag="Math.Arithmetic.RoundingMode.TowardsInfinity"/>
							<expression tag="Math.Arithmetic.Negative">
								<expression tag="Math.Number" Value="0.333"/>
							</expression>
						</expression>
						<expression tag="List.List">
							<expression tag="String.Text" Value="Toward nearest"/>
							<expression tag="Math.Arithmetic.Negative">
								<expression tag="Math.Number" Value="0.333"/>
							</expression>
						</expression>
					</expression>
				</expression>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="Typesetting.BoldChunk">
					<expression tag="String.Text" Value="Rounding toward nearest with equidistance."/>
				</expression>
				<expression tag="String.Text" Value="Now, let us suppose that we need the decimal value of the expression"/>
				<expression tag="Math.Arithmetic.Division">
					<expression tag="Math.Number" Value="667"/>
					<expression tag="Math.Number" Value="2000"/>
				</expression>
				<expression tag="String.Text" Value="and we are using a precision of 3 significant digits.  The exact value of the given expression is 0.3335 which has 4 significat digits, so a rounding is needed. Calculating the rounding value with the first four rounding modes seems OK, but rounding with the &quot;Toward nearest&quot; has a problem: the two options are 0.333 and 0.334, but the real value 0.03335 is equidistant to them."/>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="There are 5 ways to decide which option to take, so the &quot;rounding toward nearest&quot; are actually 5 different modes:"/>
			</expression>
			<expression tag="Typesetting.Centering">
				<expression tag="List.Table">
					<expression tag="List.List">
						<expression tag="List.List">
							<expression tag="Visualization.Bold" Value="True" Set="True">
								<expression tag="String.Text" Value="Toward nearest mode"/>
							</expression>
							<expression tag="Visualization.Bold" Value="True" Set="True">
								<expression tag="String.Text" Value="Explnation"/>
							</expression>
							<expression tag="Visualization.Bold" Value="True" Set="True">
								<expression tag="String.Text" Value="Result"/>
							</expression>
						</expression>
						<expression tag="List.List">
							<expression tag="Math.Arithmetic.RoundingMode.Nearest.HalfTowardsZero"/>
							<expression tag="String.Text" Value="Choose the nearest option. If a tie, choose the option that is nearer to 0"/>
							<expression tag="Math.Number" Value="0.333"/>
						</expression>
						<expression tag="List.List">
							<expression tag="Math.Arithmetic.RoundingMode.Nearest.HalfAwayFromZero"/>
							<expression tag="String.Text" Value="Choose the nearest option. If a tie, choose the option that is farther to 0"/>
							<expression tag="Math.Number" Value="0.334"/>
						</expression>
						<expression tag="List.List">
							<expression tag="Math.Arithmetic.RoundingMode.Nearest.HalfTowardsMinusInfinity"/>
							<expression tag="String.Text" Value="Choose the nearest option. If a tie, choose the option that is numerically lesser"/>
							<expression tag="Math.Number" Value="0.333"/>
						</expression>
						<expression tag="List.List">
							<expression tag="Math.Arithmetic.RoundingMode.Nearest.HalfTowardsInfinity"/>
							<expression tag="String.Text" Value="Choose the nearest option. If a tie, choose the option that is numerically greater"/>
							<expression tag="Math.Number" Value="0.334"/>
						</expression>
						<expression tag="List.List">
							<expression tag="Math.Arithmetic.RoundingMode.Nearest.HalfEven"/>
							<expression tag="String.Text" Value="Choose the nearest option. If a tie, choose the option where it last digit is even"/>
							<expression tag="Math.Number" Value="0.334"/>
						</expression>
					</expression>
				</expression>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="Summarizing, there are the following 9 rounding modes:"/>
			</expression>
			<expression tag="Typesetting.Centering">
				<expression tag="List.Table">
					<expression tag="List.List">
						<expression tag="List.List">
							<expression tag="Visualization.Bold" Value="True" Set="True">
								<expression tag="String.Text" Value="Ronding mode"/>
							</expression>
							<expression tag="Visualization.Bold" Value="True" Set="True">
								<expression tag="String.Text" Value="Explanation"/>
							</expression>
							<expression tag="Visualization.Bold" Value="True" Set="True">
								<expression tag="String.Text" Value="Also known as"/>
							</expression>
						</expression>
						<expression tag="List.List">
							<expression tag="Math.Arithmetic.RoundingMode.TowardsZero"/>
							<expression tag="String.Text" Value="Choose the option that is nearer to 0"/>
							<expression tag="String.Text" Value="Truncation"/>
						</expression>
						<expression tag="List.List">
							<expression tag="Math.Arithmetic.RoundingMode.AwayFromZero"/>
							<expression tag="String.Text" Value="Choose the option that is farther to 0"/>
							<expression tag="String.Text" Value="-"/>
						</expression>
						<expression tag="List.List">
							<expression tag="Math.Arithmetic.RoundingMode.TowardsMinusInfinity"/>
							<expression tag="String.Text" Value="Choose the option that is numerically less"/>
							<expression tag="String.Text" Value="Floor"/>
						</expression>
						<expression tag="List.List">
							<expression tag="Math.Arithmetic.RoundingMode.TowardsInfinity"/>
							<expression tag="String.Text" Value="Choose the option that is numerically greater"/>
							<expression tag="String.Text" Value="Ceiling"/>
						</expression>
						<expression tag="List.List">
							<expression tag="Math.Arithmetic.RoundingMode.Nearest.HalfTowardsZero"/>
							<expression tag="String.Text" Value="Choose the nearest option. If a tie, choose the option that is nearer to 0"/>
							<expression tag="String.Text" Value="Rounding"/>
						</expression>
						<expression tag="List.List">
							<expression tag="Math.Arithmetic.RoundingMode.Nearest.HalfAwayFromZero"/>
							<expression tag="String.Text" Value="Choose the nearest option. If a tie, choose the option that is farther to 0"/>
							<expression tag="String.Text" Value="Rounding"/>
						</expression>
						<expression tag="List.List">
							<expression tag="Math.Arithmetic.RoundingMode.Nearest.HalfTowardsMinusInfinity"/>
							<expression tag="String.Text" Value="Choose the nearest option. If a tie, choose the option that is numerically less"/>
							<expression tag="String.Text" Value="Rounding"/>
						</expression>
						<expression tag="List.List">
							<expression tag="Math.Arithmetic.RoundingMode.Nearest.HalfTowardsInfinity"/>
							<expression tag="String.Text" Value="Choose the nearest option. If a tie, choose the option that is numerically greater"/>
							<expression tag="String.Text" Value="Rounding"/>
						</expression>
						<expression tag="List.List">
							<expression tag="Math.Arithmetic.RoundingMode.Nearest.HalfEven"/>
							<expression tag="String.Text" Value="Choose the nearest option. If a tie, choose the option where it last digit is even"/>
							<expression tag="String.Text" Value="Rounding"/>
						</expression>
					</expression>
				</expression>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Typesetting.Rule"/>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Typesetting.MultiParagraph">
			<expression tag="Typesetting.Paragraph">
				<expression tag="Typesetting.BoldChunk">
					<expression tag="String.Text" Value="Favoring accuracy"/>
				</expression>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="You have already seen that certains operations are evaluated or not, depending on whether their operands are provided as integer or rational numbers, or decimal numbers:"/>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="List.List">
			<expression tag="Math.Trigonometric.Sine">
				<expression tag="Math.Number" Value="5"/>
			</expression>
			<expression tag="Math.Trigonometric.Sine">
				<expression tag="Math.Number" Value="5."/>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="1">
		<expression tag="List.List">
			<expression tag="Math.Trigonometric.Sine">
				<expression tag="Math.Number" Value="5"/>
			</expression>
			<expression tag="Math.Arithmetic.Negative">
				<expression tag="Math.Number" Value="0.95892427466313846889"/>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="List.List">
			<expression tag="Math.Trigonometric.Secant">
				<expression tag="Math.Arithmetic.Division">
					<expression tag="Math.Number" Value="1"/>
					<expression tag="Math.Number" Value="2"/>
				</expression>
			</expression>
			<expression tag="Math.Trigonometric.Secant">
				<expression tag="Math.Number" Value="0.5"/>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="1">
		<expression tag="List.List">
			<expression tag="Math.Trigonometric.Secant">
				<expression tag="Math.Arithmetic.Division">
					<expression tag="Math.Number" Value="1"/>
					<expression tag="Math.Number" Value="2"/>
				</expression>
			</expression>
			<expression tag="Math.Number" Value="1.1394939273245491223"/>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Typesetting.MultiParagraph">
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="This is because Fōrmulæ tries to deliver exact results as much as possible. If an operation cannot be performed exactly, it will not be finihsed, it will remain as is, UNLESS at least one of their operands as provided as a decimal. Providing a decimal number indicates that the operation is required to terminate, even when the result will be inexact. In such that case, the result will be a decimal, rounded with the current precision and rounding mode."/>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="Typesetting.BoldChunk">
					<expression tag="String.Text" Value="Addition and multiplication"/>
				</expression>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="The expressions"/>
				<expression tag="Internet.UniformResourceLocator" Value="/?script=reference/Math.Arithmetic.Addition" Description="Addition"/>
				<expression tag="String.Text" Value="and"/>
				<expression tag="Internet.UniformResourceLocator" Value="/?script=reference/Math.Arithmetic.Multiplication" Description="Multiplication"/>
				<expression tag="String.Text" Value="always evaluate if their operands are numbers (integer, decimal or rational)."/>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="These expressions are also"/>
				<expression tag="Typesetting.ItalicChunk">
					<expression tag="String.Text" Value="integer-closed expressions,"/>
				</expression>
				<expression tag="String.Text" Value="they have the propery that if operands are integers, their results is also integers. These results will be exact and they will have as many digits as needed."/>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="Examples:"/>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="Addition of integer numbers is always an integer:"/>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Math.Arithmetic.Addition">
			<expression tag="Math.Number" Value="23"/>
			<expression tag="Math.Number" Value="1024"/>
			<expression tag="Math.Arithmetic.Negative">
				<expression tag="Math.Number" Value="67"/>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="1">
		<expression tag="Math.Number" Value="980"/>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Typesetting.Paragraph">
			<expression tag="String.Text" Value="If at least one operand is decimal, the result will be decimal"/>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Math.Arithmetic.Addition">
			<expression tag="Math.Number" Value="2.5"/>
			<expression tag="Math.Number" Value="5"/>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="1">
		<expression tag="Math.Number" Value="7.5"/>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Typesetting.Paragraph">
			<expression tag="String.Text" Value="Even if the one operand is decimal with an integer value, the result will be decimal:"/>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Math.Arithmetic.Multiplication">
			<expression tag="Math.Number" Value="2"/>
			<expression tag="Math.Number" Value="3."/>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="1">
		<expression tag="Math.Number" Value="6."/>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Typesetting.Paragraph">
			<expression tag="String.Text" Value="This example shows an operation with big integer numbers. Notice that the result is exact and it requires a lot of digits:"/>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Math.Arithmetic.Multiplication">
			<expression tag="Math.Number" Value="3463765463245378482"/>
			<expression tag="Math.Number" Value="36265464835248716327486"/>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="1">
		<expression tag="Math.Number" Value="125615064604874253340527914520905129556252"/>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Typesetting.Paragraph">
			<expression tag="String.Text" Value="The following examples is the same that the previous one, except that the first factor is provided as a decimal number:"/>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Math.Arithmetic.Multiplication">
			<expression tag="Math.Number" Value="3463765463245378482."/>
			<expression tag="Math.Number" Value="36265464835248716327486"/>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="1">
		<expression tag="Math.Number" Value="125615064604874253340000000000000000000000."/>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Programming.Block" Description="Description" Expanded="True">
			<expression tag="Math.Arithmetic.SetPrecision">
				<expression tag="Math.Number" Value="100"/>
			</expression>
			<expression tag="Math.Arithmetic.Multiplication">
				<expression tag="Math.Number" Value="3463765463245378482."/>
				<expression tag="Math.Number" Value="36265464835248716327486"/>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="1">
		<expression tag="Math.Number" Value="125615064604874253340527914520905129556252."/>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Typesetting.Paragraph">
			<expression tag="String.Text" Value="Of course, The expressions of"/>
			<expression tag="Internet.UniformResourceLocator" Value="/?script=reference/Math.Arithmetic.Addition" Description="Addition"/>
			<expression tag="String.Text" Value="and"/>
			<expression tag="Internet.UniformResourceLocator" Value="/?script=reference/Math.Arithmetic.Multiplication" Description="Multiplication"/>
			<expression tag="String.Text" Value="can mix integer and rational numbers, producing both integer or rational numbers. Rational numbers, being exact, can take as many digits as needed."/>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Math.Arithmetic.Addition">
			<expression tag="Math.Number" Value="5"/>
			<expression tag="Math.Arithmetic.Division">
				<expression tag="Math.Number" Value="2"/>
				<expression tag="Math.Number" Value="3"/>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="1">
		<expression tag="Math.Arithmetic.Division">
			<expression tag="Math.Number" Value="17"/>
			<expression tag="Math.Number" Value="3"/>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Math.Arithmetic.Addition">
			<expression tag="Math.Number" Value="7453274527537454373"/>
			<expression tag="Math.Arithmetic.Division">
				<expression tag="Math.Number" Value="46324648324732648325432"/>
				<expression tag="Math.Number" Value="460034932943874273643"/>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="1">
		<expression tag="Math.Arithmetic.Division">
			<expression tag="Math.Number" Value="3428766647487979077202094708525277316271"/>
			<expression tag="Math.Number" Value="460034932943874273643"/>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Typesetting.Paragraph">
			<expression tag="String.Text" Value="You can use complex combinations of integer and rational numbers and the result will be exact"/>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Math.Arithmetic.Addition">
			<expression tag="Math.Arithmetic.Division">
				<expression tag="Math.Number" Value="1"/>
				<expression tag="Math.Arithmetic.Addition">
					<expression tag="Math.Number" Value="7"/>
					<expression tag="Math.Arithmetic.Division">
						<expression tag="Math.Number" Value="45"/>
						<expression tag="Math.Number" Value="2"/>
					</expression>
				</expression>
			</expression>
			<expression tag="Math.Arithmetic.Division">
				<expression tag="Math.Arithmetic.Addition">
					<expression tag="Math.Arithmetic.Multiplication">
						<expression tag="Math.Arithmetic.Division">
							<expression tag="Math.Number" Value="13"/>
							<expression tag="Math.Number" Value="4"/>
						</expression>
						<expression tag="Math.Arithmetic.Division">
							<expression tag="Math.Number" Value="12"/>
							<expression tag="Math.Number" Value="23"/>
						</expression>
					</expression>
					<expression tag="Math.Number" Value="2"/>
				</expression>
				<expression tag="Math.Arithmetic.Division">
					<expression tag="Math.Number" Value="1"/>
					<expression tag="Math.Arithmetic.Addition">
						<expression tag="Math.Number" Value="12"/>
						<expression tag="Math.Number" Value="35"/>
					</expression>
				</expression>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="1">
		<expression tag="Math.Arithmetic.Division">
			<expression tag="Math.Number" Value="235751"/>
			<expression tag="Math.Number" Value="1357"/>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Typesetting.Paragraph">
			<expression tag="String.Text" Value="The following produces an exact result:"/>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Math.Arithmetic.Addition">
			<expression tag="Math.Arithmetic.Division">
				<expression tag="Math.Number" Value="1"/>
				<expression tag="Math.Number" Value="3"/>
			</expression>
			<expression tag="Math.Arithmetic.Division">
				<expression tag="Math.Number" Value="1"/>
				<expression tag="Math.Number" Value="3"/>
			</expression>
			<expression tag="Math.Arithmetic.Division">
				<expression tag="Math.Number" Value="1"/>
				<expression tag="Math.Number" Value="3"/>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="1">
		<expression tag="Math.Number" Value="1"/>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Typesetting.Paragraph">
			<expression tag="String.Text" Value="Using a decimal number is a requirement for an evaluation, even if ihis leads to an inexact result, so a decimal numbers is used and rounded with the current precision and round mode."/>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Math.Arithmetic.Addition">
			<expression tag="Math.Arithmetic.Division">
				<expression tag="Math.Number" Value="1."/>
				<expression tag="Math.Number" Value="3"/>
			</expression>
			<expression tag="Math.Arithmetic.Division">
				<expression tag="Math.Number" Value="1"/>
				<expression tag="Math.Number" Value="3"/>
			</expression>
			<expression tag="Math.Arithmetic.Division">
				<expression tag="Math.Number" Value="1"/>
				<expression tag="Math.Number" Value="3"/>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="1">
		<expression tag="Math.Number" Value="0.99999999999999999999"/>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Typesetting.MultiParagraph">
			<expression tag="Typesetting.Paragraph">
				<expression tag="Typesetting.BoldChunk">
					<expression tag="String.Text" Value="The"/>
					<expression tag="Internet.UniformResourceLocator" Value="/?script=reference/Math.Arithmetic.Division" Description="Division"/>
					<expression tag="String.Text" Value="expression"/>
				</expression>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="Division of integer numbers is in fact a fraction. It can result in an integer number or a simplified fraction:"/>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="List.List">
			<expression tag="Math.Arithmetic.Division">
				<expression tag="Math.Number" Value="12"/>
				<expression tag="Math.Number" Value="3"/>
			</expression>
			<expression tag="Math.Arithmetic.Negative">
				<expression tag="Math.Arithmetic.Division">
					<expression tag="Math.Number" Value="6"/>
					<expression tag="Math.Number" Value="27"/>
				</expression>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="1">
		<expression tag="List.List">
			<expression tag="Math.Number" Value="4"/>
			<expression tag="Math.Arithmetic.Negative">
				<expression tag="Math.Arithmetic.Division">
					<expression tag="Math.Number" Value="2"/>
					<expression tag="Math.Number" Value="9"/>
				</expression>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Typesetting.MultiParagraph">
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="If you want a decimal result, you can introduce one or both operands as decimal number."/>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="Sometimes it is enough:"/>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Math.Arithmetic.Division">
			<expression tag="Math.Number" Value="1."/>
			<expression tag="Math.Number" Value="2"/>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="1">
		<expression tag="Math.Number" Value="0.5"/>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Typesetting.Paragraph">
			<expression tag="String.Text" Value="Other times, the result is a number that would require a infinite number of digits to be exact, so it is rounded with thr current precision and rounding mode:"/>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="List.List">
			<expression tag="Math.Arithmetic.Division">
				<expression tag="Math.Number" Value="2."/>
				<expression tag="Math.Number" Value="3"/>
			</expression>
			<expression tag="Math.Arithmetic.Division">
				<expression tag="Math.Number" Value="5"/>
				<expression tag="Math.Arithmetic.Negative">
					<expression tag="Math.Number" Value="7."/>
				</expression>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="1">
		<expression tag="List.List">
			<expression tag="Math.Number" Value="0.66666666666666666666"/>
			<expression tag="Math.Arithmetic.Negative">
				<expression tag="Math.Number" Value="0.71428571428571428571"/>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="List.List">
			<expression tag="Math.Arithmetic.Division">
				<expression tag="Math.Arithmetic.Negative">
					<expression tag="Math.Number" Value="2"/>
				</expression>
				<expression tag="Math.Number" Value="3"/>
			</expression>
			<expression tag="Math.Arithmetic.Division">
				<expression tag="Math.Number" Value="2"/>
				<expression tag="Math.Arithmetic.Negative">
					<expression tag="Math.Number" Value="3"/>
				</expression>
			</expression>
			<expression tag="Math.Arithmetic.Division">
				<expression tag="Math.Arithmetic.Negative">
					<expression tag="Math.Number" Value="2"/>
				</expression>
				<expression tag="Math.Arithmetic.Negative">
					<expression tag="Math.Number" Value="3"/>
				</expression>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="1">
		<expression tag="List.List">
			<expression tag="Math.Arithmetic.Negative">
				<expression tag="Math.Arithmetic.Division">
					<expression tag="Math.Number" Value="2"/>
					<expression tag="Math.Number" Value="3"/>
				</expression>
			</expression>
			<expression tag="Math.Arithmetic.Negative">
				<expression tag="Math.Arithmetic.Division">
					<expression tag="Math.Number" Value="2"/>
					<expression tag="Math.Number" Value="3"/>
				</expression>
			</expression>
			<expression tag="Math.Arithmetic.Division">
				<expression tag="Math.Number" Value="2"/>
				<expression tag="Math.Number" Value="3"/>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Typesetting.MultiParagraph">
			<expression tag="Typesetting.Paragraph">
				<expression tag="Typesetting.BoldChunk">
					<expression tag="String.Text" Value="Operations with complex numbers"/>
				</expression>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="Operations with complex numbers can be performed separating the real and imaginay parts and operating them according with the rules for complex numbers, e.g. the addition of the complex number"/>
				<expression tag="Math.Arithmetic.Addition">
					<expression tag="Symbolic.Symbol" Name="a"/>
					<expression tag="Math.Arithmetic.Multiplication">
						<expression tag="Symbolic.Symbol" Name="b"/>
						<expression tag="Math.Complex.ImaginaryUnit"/>
					</expression>
				</expression>
				<expression tag="String.Text" Value="and"/>
				<expression tag="Math.Arithmetic.Addition">
					<expression tag="Symbolic.Symbol" Name="c"/>
					<expression tag="Math.Arithmetic.Multiplication">
						<expression tag="Symbolic.Symbol" Name="d"/>
						<expression tag="Math.Complex.ImaginaryUnit"/>
					</expression>
				</expression>
				<expression tag="String.Text" Value="can be solved as"/>
				<expression tag="Math.Arithmetic.Addition">
					<expression tag="Math.Arithmetic.Addition">
						<expression tag="Symbolic.Symbol" Name="a"/>
						<expression tag="Symbolic.Symbol" Name="c"/>
					</expression>
					<expression tag="Math.Arithmetic.Multiplication">
						<expression tag="Math.Arithmetic.Addition">
							<expression tag="Symbolic.Symbol" Name="b"/>
							<expression tag="Symbolic.Symbol" Name="d"/>
						</expression>
						<expression tag="Math.Complex.ImaginaryUnit"/>
					</expression>
				</expression>
				<expression tag="String.Text" Value=". The rules to operate the numbers are then the described in the previous two bullets."/>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Typesetting.Paragraph">
			<expression tag="String.Text" Value="Example:"/>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Math.Arithmetic.Multiplication">
			<expression tag="Math.Number" Value="5"/>
			<expression tag="Math.Arithmetic.Addition">
				<expression tag="Math.Number" Value="3.5"/>
				<expression tag="Math.Arithmetic.Multiplication">
					<expression tag="Math.Arithmetic.Division">
						<expression tag="Math.Number" Value="2"/>
						<expression tag="Math.Number" Value="3"/>
					</expression>
					<expression tag="Math.Complex.ImaginaryUnit"/>
				</expression>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="1">
		<expression tag="Math.Arithmetic.Addition">
			<expression tag="Math.Number" Value="17.5"/>
			<expression tag="Math.Arithmetic.Multiplication">
				<expression tag="Math.Arithmetic.Division">
					<expression tag="Math.Number" Value="10"/>
					<expression tag="Math.Number" Value="3"/>
				</expression>
				<expression tag="Math.Complex.ImaginaryUnit"/>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Math.Arithmetic.Multiplication">
			<expression tag="Math.Arithmetic.Addition">
				<expression tag="Math.Number" Value="5.5"/>
				<expression tag="Math.Arithmetic.Negative">
					<expression tag="Math.Arithmetic.Multiplication">
						<expression tag="Math.Number" Value="3"/>
						<expression tag="Math.Complex.ImaginaryUnit"/>
					</expression>
				</expression>
			</expression>
			<expression tag="Math.Arithmetic.Addition">
				<expression tag="Math.Arithmetic.Division">
					<expression tag="Math.Number" Value="4"/>
					<expression tag="Math.Number" Value="5"/>
				</expression>
				<expression tag="Math.Arithmetic.Multiplication">
					<expression tag="Math.Number" Value="8"/>
					<expression tag="Math.Complex.ImaginaryUnit"/>
				</expression>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="1">
		<expression tag="Math.Arithmetic.Addition">
			<expression tag="Math.Number" Value="28.4"/>
			<expression tag="Math.Arithmetic.Multiplication">
				<expression tag="Math.Number" Value="41.6"/>
				<expression tag="Math.Complex.ImaginaryUnit"/>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Typesetting.MultiParagraph">
			<expression tag="Typesetting.Paragraph">
				<expression tag="Typesetting.BoldChunk">
					<expression tag="String.Text" Value="The"/>
					<expression tag="Internet.UniformResourceLocator" Value="/?script=reference/Math.Arithmetic.Exponentiation" Description="Exponentiation"/>
					<expression tag="String.Text" Value="expression"/>
				</expression>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="Exponentiation is not an integer-closed operation, sometimes exponentiation of integer numbers is not an integer:"/>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Math.Arithmetic.Exponentiation">
			<expression tag="Math.Number" Value="2"/>
			<expression tag="Math.Arithmetic.Negative">
				<expression tag="Math.Number" Value="5"/>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="1">
		<expression tag="Math.Arithmetic.Division">
			<expression tag="Math.Number" Value="1"/>
			<expression tag="Math.Number" Value="32"/>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Typesetting.Paragraph">
			<expression tag="String.Text" Value="However, if the result has an integer value, it will be answered as an integer, and it will be exact."/>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Math.Arithmetic.Exponentiation">
			<expression tag="Math.Number" Value="64"/>
			<expression tag="Math.Number" Value="32"/>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="1">
		<expression tag="Math.Number" Value="6277101735386680763835789423207666416102355444464034512896"/>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Typesetting.Paragraph">
			<expression tag="String.Text" Value="Of course, giving one operand as decimal, the result will be decimal and rounded"/>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Math.Arithmetic.Exponentiation">
			<expression tag="Math.Number" Value="64"/>
			<expression tag="Math.Number" Value="32."/>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="1">
		<expression tag="Math.Number" Value="6277101735386680763800000000000000000000000000000000000000."/>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Typesetting.Paragraph">
			<expression tag="String.Text" Value="Of course, giving one operand as a decimal number, will result in a decimal number even if it has an integer value"/>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Math.Arithmetic.Exponentiation">
			<expression tag="Math.Number" Value="10."/>
			<expression tag="Math.Number" Value="3"/>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="1">
		<expression tag="Math.Number" Value="1000."/>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Typesetting.Paragraph">
			<expression tag="String.Text" Value="Sometimes, exponentiation of decimal numbers produce a complex one:"/>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Math.Arithmetic.Exponentiation">
			<expression tag="Math.Arithmetic.Negative">
				<expression tag="Math.Number" Value="14.5"/>
			</expression>
			<expression tag="Math.Number" Value="2.12"/>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="1">
		<expression tag="Math.Arithmetic.Addition">
			<expression tag="Math.Number" Value="269.45033221308145296"/>
			<expression tag="Math.Arithmetic.Multiplication">
				<expression tag="Math.Number" Value="106.68293350300982982"/>
				<expression tag="Math.Complex.ImaginaryUnit"/>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Typesetting.MultiParagraph">
			<expression tag="Typesetting.Paragraph">
				<expression tag="Typesetting.BoldChunk">
					<expression tag="String.Text" Value="Transcendental expressions"/>
				</expression>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="Expressions that correspond with"/>
				<expression tag="Internet.UniformResourceLocator" Value="https://en.wikipedia.org/wiki/Transcendental_function" Description="transcendental functions"/>
				<expression tag="String.Text" Value="are so called because they usually result in"/>
				<expression tag="Internet.UniformResourceLocator" Value="https://en.wikipedia.org/wiki/Transcendental_number" Description="transcendental numbers"/>
				<expression tag="String.Text" Value="and therefore, they would require a infinite numbers of digits to be represented exactly, so they always generate decimal numbers, rounded with the current precision and rounding mode."/>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="Examples of transcendental expressions:"/>
			</expression>
			<expression tag="Typesetting.BulletedList">
				<expression tag="Typesetting.Paragraph">
					<expression tag="String.Text" Value="The square root expression"/>
				</expression>
				<expression tag="Typesetting.Paragraph">
					<expression tag="String.Text" Value="The logarithm expressions"/>
				</expression>
				<expression tag="Typesetting.Paragraph">
					<expression tag="String.Text" Value="The trigonometric, inverse trigonometric, hyperbolic and inverse hyperbolic expressions"/>
				</expression>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="Transcendental expression will not terminate when its operand is integer or rational:"/>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Math.Trigonometric.Sine">
			<expression tag="Math.Number" Value="48"/>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="1">
		<expression tag="Math.Trigonometric.Sine">
			<expression tag="Math.Number" Value="48"/>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Typesetting.Paragraph">
			<expression tag="String.Text" Value="With decimal numbers they will terminate, with a result as decimal and rounded"/>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Math.Trigonometric.Sine">
			<expression tag="Math.Number" Value="48."/>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="1">
		<expression tag="Math.Arithmetic.Negative">
			<expression tag="Math.Number" Value="0.76825466132366679904"/>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Typesetting.Paragraph">
			<expression tag="String.Text" Value="With decimal numbers they will terminate, with a result as decimal even if it has an integer value:"/>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Math.Trigonometric.Tangent">
			<expression tag="Math.Number" Value="0."/>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="1">
		<expression tag="Math.Number" Value="0."/>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Math.Arithmetic.SquareRoot">
			<expression tag="Math.Number" Value="81."/>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="1">
		<expression tag="Math.Number" Value="9."/>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Typesetting.MultiParagraph">
			<expression tag="Typesetting.Paragraph">
				<expression tag="Typesetting.BoldChunk">
					<expression tag="String.Text" Value="Other mathematical expressions"/>
				</expression>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="Other expressions has every one its own rules. Let us show several examples:"/>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="The IntegerPart of a number, as its name says, extract the integer part of integer, decimal or rational numbers. Complex numbers has no integer part. It will always answer with an integer number, because it is just its expected functionallity:"/>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="List.List">
			<expression tag="Math.Arithmetic.IntegerPart">
				<expression tag="Math.Number" Value="35"/>
			</expression>
			<expression tag="Math.Arithmetic.IntegerPart">
				<expression tag="Math.Arithmetic.Division">
					<expression tag="Math.Number" Value="78"/>
					<expression tag="Math.Number" Value="23"/>
				</expression>
			</expression>
			<expression tag="Math.Arithmetic.IntegerPart">
				<expression tag="Math.Number" Value="123.456"/>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="1">
		<expression tag="List.List">
			<expression tag="Math.Number" Value="35"/>
			<expression tag="Math.Number" Value="3"/>
			<expression tag="Math.Number" Value="123"/>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Typesetting.Paragraph">
			<expression tag="String.Text" Value="Similarly, the FractionalPart expression always returns a decimal or rational number:"/>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="List.List">
			<expression tag="Math.Arithmetic.FractionalPart">
				<expression tag="Math.Number" Value="45"/>
			</expression>
			<expression tag="Math.Arithmetic.FractionalPart">
				<expression tag="Math.Arithmetic.Division">
					<expression tag="Math.Number" Value="78"/>
					<expression tag="Math.Number" Value="23"/>
				</expression>
			</expression>
			<expression tag="Math.Arithmetic.FractionalPart">
				<expression tag="Math.Number" Value="123.456"/>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="1">
		<expression tag="List.List">
			<expression tag="Math.Number" Value="0."/>
			<expression tag="Math.Arithmetic.Division">
				<expression tag="Math.Number" Value="9"/>
				<expression tag="Math.Number" Value="23"/>
			</expression>
			<expression tag="Math.Number" Value="0.456"/>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Typesetting.Rule"/>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Typesetting.MultiParagraph">
			<expression tag="Typesetting.Paragraph">
				<expression tag="Typesetting.BoldChunk">
					<expression tag="String.Text" Value="Numeric mode"/>
				</expression>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="Fōrmulæ is a symbolic system, if prefers managing expressions literally because it preserves accuracy."/>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="The opposite of"/>
				<expression tag="Typesetting.BoldChunk">
					<expression tag="String.Text" Value="symbolic computation"/>
				</expression>
				<expression tag="String.Text" Value="is"/>
				<expression tag="Typesetting.BoldChunk">
					<expression tag="String.Text" Value="numeric computation."/>
				</expression>
				<expression tag="String.Text" Value="In a numeric form of computation, it is imperative that mathematical expressions always evaluate, even if the results are not exact."/>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="Numeric computation is used by most of programming languages."/>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="In programming languajes, there is a data type for integer numbers, and another one for decimal numbers. The rules for combinig integer and decimal numbers in a mathematical operation are similar to Fōrmulæ: operations with integers usually result in a integer, operations with decimals usually result in a decimal, and combining both usually results in a decimal."/>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="If you want to use Fōrmulæ in the same way than numeric languages, you can change the mode from symbolic to numeric."/>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="To use the numeric mode, you use the"/>
				<expression tag="Visualization.Selected">
					<expression tag="Math.Numeric">
						<expression tag="Symbolic.Symbol" Name="e"/>
					</expression>
				</expression>
				<expression tag="String.Text" Value="expression. It  computes the expression"/>
				<expression tag="Visualization.Selected">
					<expression tag="Symbolic.Symbol" Name="e"/>
				</expression>
				<expression tag="String.Text" Value="in numeric mode."/>
			</expression>
			<expression tag="String.Text" Value="Examples:"/>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="In numeric mode, transcendental expressions always evaluate (as a decimal number, rounded), even if the operand is an integer or rational number:"/>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="List.List">
			<expression tag="Math.Trigonometric.Tangent">
				<expression tag="Math.Number" Value="3"/>
			</expression>
			<expression tag="Math.Numeric">
				<expression tag="Math.Trigonometric.Tangent">
					<expression tag="Math.Number" Value="3"/>
				</expression>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="1">
		<expression tag="List.List">
			<expression tag="Math.Trigonometric.Tangent">
				<expression tag="Math.Number" Value="3"/>
			</expression>
			<expression tag="Math.Arithmetic.Negative">
				<expression tag="Math.Number" Value="0.14254654307427780529"/>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="List.List">
			<expression tag="Math.Arithmetic.SquareRoot">
				<expression tag="Math.Number" Value="50"/>
			</expression>
			<expression tag="Math.Numeric">
				<expression tag="Math.Arithmetic.SquareRoot">
					<expression tag="Math.Number" Value="50"/>
				</expression>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="1">
		<expression tag="List.List">
			<expression tag="Math.Arithmetic.SquareRoot">
				<expression tag="Math.Number" Value="50"/>
			</expression>
			<expression tag="Math.Number" Value="7.071067811865475244"/>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Typesetting.Paragraph">
			<expression tag="String.Text" Value="However, mathematical expressions that return integer numbers keep doing the same:"/>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Math.Numeric">
			<expression tag="Math.Arithmetic.Addition">
				<expression tag="Math.Number" Value="88"/>
				<expression tag="Math.Number" Value="24"/>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="1">
		<expression tag="Math.Number" Value="112"/>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Typesetting.Paragraph">
			<expression tag="String.Text" Value="Complex mathematical expressions will always terminate, provided their inputs are always numbers:"/>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Math.Numeric">
			<expression tag="Math.Arithmetic.Division">
				<expression tag="Math.Trigonometric.Sine">
					<expression tag="Math.Arithmetic.Addition">
						<expression tag="Math.Number" Value="2"/>
						<expression tag="Math.Arithmetic.Division">
							<expression tag="Math.Number" Value="3"/>
							<expression tag="Math.Number" Value="4"/>
						</expression>
					</expression>
				</expression>
				<expression tag="Math.Transcendental.NaturalLogarithm">
					<expression tag="Math.Arithmetic.SquareRoot">
						<expression tag="Math.Arithmetic.Addition">
							<expression tag="Math.Arithmetic.Exponentiation">
								<expression tag="Math.Number" Value="88"/>
								<expression tag="Math.Number" Value="3.5"/>
							</expression>
							<expression tag="Math.Arithmetic.Negative">
								<expression tag="Math.Number" Value="48"/>
							</expression>
						</expression>
					</expression>
				</expression>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="1">
		<expression tag="Math.Number" Value="0.048710228645447358761"/>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Math.Numeric">
			<expression tag="Math.Arithmetic.Division">
				<expression tag="Math.Number" Value="7"/>
				<expression tag="Math.Number" Value="6"/>
			</expression>
			<expression tag="Math.Number" Value="50"/>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="1">
		<expression tag="Math.Number" Value="1.1666666666666666666666666666666666666666666666666"/>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Math.Numeric">
			<expression tag="Math.Constant.Euler"/>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="1">
		<expression tag="Math.Number" Value="2.7182818284590452353"/>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Math.Numeric">
			<expression tag="Math.Constant.Pi"/>
			<expression tag="Math.Number" Value="50"/>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="1">
		<expression tag="Math.Number" Value="3.1415926535897932384626433832795028841971693993751"/>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Math.Numeric">
			<expression tag="Math.Trigonometric.Cosine">
				<expression tag="Math.Arithmetic.Multiplication">
					<expression tag="Math.Number" Value="2"/>
					<expression tag="Math.Constant.Pi"/>
				</expression>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="1">
		<expression tag="Math.Number" Value="0.99999999999999999999"/>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Programming.Block" Description="Description" Expanded="True">
			<expression tag="Math.SetAsNumeric"/>
			<expression tag="Math.Arithmetic.Division">
				<expression tag="Math.Arithmetic.Addition">
					<expression tag="Math.Arithmetic.SquareRoot">
						<expression tag="Math.Number" Value="5"/>
					</expression>
					<expression tag="Math.Arithmetic.Negative">
						<expression tag="Math.Number" Value="1"/>
					</expression>
				</expression>
				<expression tag="Math.Number" Value="2"/>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="1">
		<expression tag="Math.Number" Value="0.6180339887498948482"/>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Typesetting.Rule"/>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Typesetting.MultiParagraph">
			<expression tag="Typesetting.Paragraph">
				<expression tag="Typesetting.BoldChunk">
					<expression tag="String.Text" Value="Subtraction"/>
				</expression>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="There is no expression for subtraction. The operation that we represent as"/>
				<expression tag="Math.Arithmetic.Addition">
					<expression tag="Symbolic.Symbol" Name="a"/>
					<expression tag="Math.Arithmetic.Negative">
						<expression tag="Symbolic.Symbol" Name="b"/>
					</expression>
				</expression>
				<expression tag="String.Text" Value="is a"/>
				<expression tag="Internet.UniformResourceLocator" Value="/?script=reference/Math.Arithmetic.Addition" Description="Addition"/>
				<expression tag="String.Text" Value="expression, where first subexpression is the minuend, and the second subexpression is a"/>
				<expression tag="Internet.UniformResourceLocator" Value="/?script=reference/Math.Arithmetic.Negative" Description="Negative"/>
				<expression tag="String.Text" Value="expression. containing the subtrahend, in other ords, it is"/>
				<expression tag="Math.Arithmetic.Addition">
					<expression tag="Symbolic.Symbol" Name="a"/>
					<expression tag="Visualization.Parentheses">
						<expression tag="Math.Arithmetic.Negative">
							<expression tag="Symbolic.Symbol" Name="b"/>
						</expression>
					</expression>
				</expression>
				<expression tag="String.Text" Value=", as it is shown:"/>
			</expression>
			<expression tag="Typesetting.Centering">
				<expression tag="Diagramming.Tree" Expanded="True">
					<expression tag="Internet.UniformResourceLocator" Value="/?script=reference/Math.Arithmetic.Addition" Description="Addition"/>
					<expression tag="Diagramming.Tree" Expanded="True">
						<expression tag="Symbolic.Symbol" Name="a"/>
					</expression>
					<expression tag="Diagramming.Tree" Expanded="True">
						<expression tag="Internet.UniformResourceLocator" Value="/?script=reference/Math.Arithmetic.Negative" Description="Negative"/>
						<expression tag="Diagramming.Tree" Expanded="True">
							<expression tag="Symbolic.Symbol" Name="b"/>
						</expression>
					</expression>
				</expression>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Typesetting.Rule"/>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Typesetting.MultiParagraph">
			<expression tag="Typesetting.Paragraph">
				<expression tag="Typesetting.BoldChunk">
					<expression tag="String.Text" Value="See also:"/>
				</expression>
			</expression>
			<expression tag="Typesetting.BulletedList">
				<expression tag="Typesetting.Paragraph">
					<expression tag="String.Text" Value="The"/>
					<expression tag="Internet.UniformResourceLocator" Value="/?script=reference/org.formulae.arithmetic" Description="Arithmetic package"/>
				</expression>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="Typesetting.BoldChunk">
					<expression tag="String.Text" Value="Categories:"/>
				</expression>
			</expression>
			<expression tag="Typesetting.BulletedList">
				<expression tag="Typesetting.Paragraph">
					<expression tag="Internet.UniformResourceLocator" Value="/?script=reference/Canons" Description="Fōrmulæ canons"/>
				</expression>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Typesetting.Rule"/>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Typesetting.MultiParagraph">
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="Author: Laurence R. Ugalde"/>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="Date of creation:"/>
				<expression tag="Time.Time" Value="1590607320000"/>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="Date of last modification:"/>
				<expression tag="Time.Time" Value="1743027420000"/>
			</expression>
		</expression>
	</expression>
</expression>