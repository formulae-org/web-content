<expression tag="Formulae.Script" Modules="org.formulae.typesetting,org.formulae.text.string,org.formulae.list,org.formulae.visualization,org.formulae.math.arithmetic,org.formulae.graphics.raster,org.formulae.symbolic,org.formulae.expression,org.formulae.time">
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Typesetting.MultiParagraph">
			<expression tag="Typesetting.Paragraph">
				<expression tag="Typesetting.BoldChunk">
					<expression tag="String.Text" Value="Math.Number"/>
				</expression>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="Typesetting.ItalicChunk">
					<expression tag="String.Text" Value="Math.Number"/>
				</expression>
				<expression tag="String.Text" Value="is the Fōrmulæ tag for the expression associated with an integer or decimal number."/>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Typesetting.Rule"/>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Typesetting.MultiParagraph">
			<expression tag="Typesetting.Paragraph">
				<expression tag="Typesetting.BoldChunk">
					<expression tag="String.Text" Value="Definition"/>
				</expression>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="According with the Fōrmulæ"/>
				<expression tag="String.Text" Value="Arithmetic canon,"/>
				<expression tag="String.Text" Value="number expressions must have the following properties:"/>
			</expression>
			<expression tag="Typesetting.BulletedList">
				<expression tag="Typesetting.Paragraph">
					<expression tag="String.Text" Value="They represent only either positive real numbers or zero. A negative number should be represented by a"/>
					<expression tag="Internet.UniformResourceLocator" Value="/?script=reference/Math.Arithmetic.Negative" Description="negative"/>
					<expression tag="String.Text" Value="expression containing a"/>
					<expression tag="Typesetting.BoldChunk">
						<expression tag="String.Text" Value="Math.Number"/>
					</expression>
					<expression tag="String.Text" Value="expression as its only subexpression."/>
				</expression>
				<expression tag="Typesetting.Paragraph">
					<expression tag="String.Text" Value="There are two types: Integer and decimal numbers. Integer numbers can represent only integer values, while decimal numbers can represent both integer and fractional values."/>
				</expression>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Typesetting.Rule"/>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Typesetting.MultiParagraph">
			<expression tag="Typesetting.Paragraph">
				<expression tag="Typesetting.BoldChunk">
					<expression tag="String.Text" Value="Subexpressions"/>
				</expression>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="This expression has no subexpressions."/>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Typesetting.Rule"/>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Typesetting.MultiParagraph">
			<expression tag="Typesetting.Paragraph">
				<expression tag="Typesetting.BoldChunk">
					<expression tag="String.Text" Value="Visualization"/>
				</expression>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="In the Fōrmulæ front-end, visualization of numbers is as follows:"/>
			</expression>
			<expression tag="Typesetting.BulletedList">
				<expression tag="Typesetting.Paragraph">
					<expression tag="String.Text" Value="Numbers are always shown in base 10."/>
				</expression>
				<expression tag="Typesetting.Paragraph">
					<expression tag="String.Text" Value="Numbers are always shown left to right. It is a common practice even in right-to-left written languages, such as Arabic or Hebrew."/>
				</expression>
				<expression tag="Typesetting.Paragraph">
					<expression tag="String.Text" Value="Numbers are shown with no leading zeroes before the integer part, unless its integer part is zero."/>
				</expression>
				<expression tag="Typesetting.Paragraph">
					<expression tag="String.Text" Value="Decimal numbers are shown with no trailing zeroes after the fractional part, unless they hold integer values, in such a case there is only one trailing zero, for example in 5.0"/>
				</expression>
				<expression tag="Typesetting.Paragraph">
					<expression tag="String.Text" Value="Number are not shorten in any way —i.e. scientific notation—, so be careful because either big numbers or numbers with many decimal places will could produce very wide results."/>
				</expression>
				<expression tag="Typesetting.Paragraph">
					<expression tag="String.Text" Value="In order to differentiate integer numbers from decimal numbers with no fractional part, the latter is always shown with a trailing decimal separator and a zero."/>
				</expression>
				<expression tag="Typesetting.Paragraph">
					<expression tag="String.Text" Value="The integer part of the number (if any) is shown separated by a group separator, usually every three places. The symbol used as a separator is locale dependent."/>
				</expression>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="Examples:"/>
			</expression>
			<expression tag="Typesetting.Centering">
				<expression tag="List.Table">
					<expression tag="List.List">
						<expression tag="List.List">
							<expression tag="Visualization.Bold" Value="True" Set="True">
								<expression tag="String.Text" Value="Fōrmulæ number"/>
							</expression>
							<expression tag="Visualization.Bold" Value="True" Set="True">
								<expression tag="String.Text" Value="Description"/>
							</expression>
						</expression>
						<expression tag="List.List">
							<expression tag="Math.Number" Value="12"/>
							<expression tag="String.Text" Value="Integer number"/>
						</expression>
						<expression tag="List.List">
							<expression tag="Math.Number" Value="12.35"/>
							<expression tag="String.Text" Value="Decimal number"/>
						</expression>
						<expression tag="List.List">
							<expression tag="Math.Number" Value="12."/>
							<expression tag="String.Text" Value="Decimal number with integer value"/>
						</expression>
						<expression tag="List.List">
							<expression tag="Math.Number" Value="3561243652465234"/>
							<expression tag="String.Text" Value="An integer number with many places"/>
						</expression>
						<expression tag="List.List">
							<expression tag="Math.Number" Value="12.7764532645725343353"/>
							<expression tag="String.Text" Value="A decimal number with many decimal places"/>
						</expression>
						<expression tag="List.List">
							<expression tag="Math.Number" Value="0"/>
							<expression tag="String.Text" Value="Integer zero"/>
						</expression>
						<expression tag="List.List">
							<expression tag="Math.Number" Value="0."/>
							<expression tag="String.Text" Value="Decimal zero"/>
						</expression>
						<expression tag="List.List">
							<expression tag="Math.Number" Value="0.15"/>
							<expression tag="String.Text" Value="A decimal number with no integer part"/>
						</expression>
					</expression>
				</expression>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Typesetting.Rule"/>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Typesetting.MultiParagraph">
			<expression tag="Typesetting.Paragraph">
				<expression tag="Typesetting.BoldChunk">
					<expression tag="String.Text" Value="Edition"/>
				</expression>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="Typesetting.BoldChunk">
					<expression tag="String.Text" Value="Creation"/>
				</expression>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="There is one edition associated with the creation of a number expression. The edition consists in showing a dialog box where the user introduces the value of the number expression."/>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="In the Fōrmulæ front-end, the edition is performed through two ways:"/>
			</expression>
			<expression tag="Typesetting.BulletedList">
				<expression tag="Typesetting.Paragraph">
					<expression tag="String.Text" Value="The edition panel at the left, in the path"/>
					<expression tag="Typesetting.BoldChunk">
						<expression tag="String.Text" Value="Math → Number"/>
					</expression>
				</expression>
				<expression tag="Typesetting.Paragraph">
					<expression tag="String.Text" Value="Pressing the"/>
					<expression tag="Visualization.Key">
						<expression tag="String.Text" Value="N"/>
					</expression>
					<expression tag="String.Text" Value="key."/>
				</expression>
			</expression>
			<expression tag="Typesetting.Centering">
				<expression tag="Graphics.RasterGraphics" Value=""/>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Typesetting.MultiParagraph">
			<expression tag="Typesetting.Paragraph">
				<expression tag="Typesetting.BoldChunk">
					<expression tag="String.Text" Value="Actions"/>
				</expression>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="There is one action associated with an already created number expression. This actions consists in showing a dialog box where the user can update the value of the number expression."/>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="In the Fōrmulæ front-end, this action is performed through two ways:"/>
			</expression>
			<expression tag="Typesetting.BulletedList">
				<expression tag="Typesetting.Paragraph">
					<expression tag="String.Text" Value="Right-clicking the number expression in order to show a popup menu, and selecting the"/>
					<expression tag="Typesetting.BoldChunk">
						<expression tag="String.Text" Value="Update number..."/>
					</expression>
					<expression tag="String.Text" Value="option in such that menu."/>
				</expression>
				<expression tag="Typesetting.Paragraph">
					<expression tag="String.Text" Value="Pressing the"/>
					<expression tag="Visualization.Key">
						<expression tag="String.Text" Value="SPACE"/>
					</expression>
					<expression tag="String.Text" Value="key once the number expression is selected."/>
				</expression>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Typesetting.MultiParagraph">
			<expression tag="Typesetting.Paragraph">
				<expression tag="Typesetting.BoldChunk">
					<expression tag="String.Text" Value="Deletion"/>
				</expression>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="Deleting a number expression (pressing the"/>
				<expression tag="Visualization.Key">
					<expression tag="String.Text" Value="DELETE"/>
				</expression>
				<expression tag="String.Text" Value="key when the selected expressions is a number expression) will replace the numer expression to the null expression, which becomes the new selected expression."/>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Typesetting.Rule"/>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Typesetting.MultiParagraph">
			<expression tag="Typesetting.Paragraph">
				<expression tag="Typesetting.BoldChunk">
					<expression tag="String.Text" Value="Reduction"/>
				</expression>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="Since this expression is not expected to be reduced to a different one, no reducers are currently known."/>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Typesetting.Rule"/>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Typesetting.MultiParagraph">
			<expression tag="Typesetting.Paragraph">
				<expression tag="Typesetting.BoldChunk">
					<expression tag="String.Text" Value="Attributes for serialization"/>
				</expression>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="The number expression has an attribute with name"/>
				<expression tag="Typesetting.BoldChunk">
					<expression tag="String.Text" Value="Value."/>
				</expression>
				<expression tag="String.Text" Value="This attribute contains the string representing the value of the number, with the folowing rules:"/>
			</expression>
			<expression tag="Typesetting.BulletedList">
				<expression tag="Typesetting.Paragraph">
					<expression tag="String.Text" Value="The number is always represented in Hindu-Arabic numerals (0, 1, 2, 3, 4, 5, 6, 7, 8, 9), independently if the number is visualized using other numerals."/>
				</expression>
				<expression tag="Typesetting.Paragraph">
					<expression tag="String.Text" Value="The decimal separator is always a dot."/>
				</expression>
				<expression tag="Typesetting.Paragraph">
					<expression tag="String.Text" Value="No group separator is used"/>
				</expression>
				<expression tag="Typesetting.Paragraph">
					<expression tag="String.Text" Value="The string always contains a dot for a decimal number, even if it has an integer value."/>
				</expression>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="Examples:"/>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="List.CreateTable">
			<expression tag="List.List">
				<expression tag="Symbolic.Symbol" Name="number"/>
				<expression tag="Expression.Serialize">
					<expression tag="Symbolic.Symbol" Name="number"/>
				</expression>
			</expression>
			<expression tag="Symbolic.Symbol" Name="number"/>
			<expression tag="List.List">
				<expression tag="Math.Number" Value="12"/>
				<expression tag="Math.Number" Value="336324354.8457648"/>
				<expression tag="Math.Number" Value="0"/>
				<expression tag="Math.Number" Value="0."/>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="1">
		<expression tag="List.Table">
			<expression tag="List.List">
				<expression tag="List.List">
					<expression tag="Symbolic.Symbol" Name="number"/>
					<expression tag="Expression.Serialize">
						<expression tag="Symbolic.Symbol" Name="number"/>
					</expression>
				</expression>
				<expression tag="List.List">
					<expression tag="Math.Number" Value="12"/>
					<expression tag="String.String" Value="&lt;expression tag=&quot;Math.Number&quot; Value=&quot;12&quot;/&gt;"/>
				</expression>
				<expression tag="List.List">
					<expression tag="Math.Number" Value="336324354.8457648"/>
					<expression tag="String.String" Value="&lt;expression tag=&quot;Math.Number&quot; Value=&quot;336324354.8457648&quot;/&gt;"/>
				</expression>
				<expression tag="List.List">
					<expression tag="Math.Number" Value="0"/>
					<expression tag="String.String" Value="&lt;expression tag=&quot;Math.Number&quot; Value=&quot;0&quot;/&gt;"/>
				</expression>
				<expression tag="List.List">
					<expression tag="Math.Number" Value="0."/>
					<expression tag="String.String" Value="&lt;expression tag=&quot;Math.Number&quot; Value=&quot;0.&quot;/&gt;"/>
				</expression>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Typesetting.Paragraph">
			<expression tag="String.Text" Value="Deserialization:"/>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Expression.Deserialize">
			<expression tag="String.String" Value="&lt;expression tag=&quot;Math.Number&quot; Value=&quot;12.345&quot;/&gt;"/>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="1">
		<expression tag="Math.Number" Value="12.345"/>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Typesetting.Paragraph">
			<expression tag="String.Text" Value="Deserialization attempt with invalid value:"/>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Expression.Deserialize">
			<expression tag="String.String" Value="&lt;expression tag=&quot;Math.Number&quot; Value=&quot;12,345&quot;/&gt;"/>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="1">
		<expression tag="Expression.Deserialize">
			<expression tag="Error" Description="Error: Invalid number">
				<expression tag="String.String" Value="&lt;expression tag=&quot;Math.Number&quot; Value=&quot;12,345&quot;/&gt;"/>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Typesetting.MultiParagraph">
			<expression tag="Typesetting.Paragraph">
				<expression tag="Typesetting.BoldChunk">
					<expression tag="String.Text" Value="See also:"/>
				</expression>
			</expression>
			<expression tag="Typesetting.BulletedList">
				<expression tag="Typesetting.Paragraph">
					<expression tag="String.Text" Value="The"/>
					<expression tag="Internet.UniformResourceLocator" Value="/?script=reference/Math.Arithmetic.Negative" Description="Math.Arithmetic.Negative"/>
					<expression tag="String.Text" Value="expression"/>
				</expression>
				<expression tag="Typesetting.Paragraph">
					<expression tag="String.Text" Value="The Arithmetic canon"/>
				</expression>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="Typesetting.BoldChunk">
					<expression tag="String.Text" Value="Categories:"/>
				</expression>
			</expression>
			<expression tag="Typesetting.BulletedList">
				<expression tag="Typesetting.Paragraph">
					<expression tag="String.Text" Value="Expression in the"/>
					<expression tag="Internet.UniformResourceLocator" Value="/?script=reference/org.formulae.arithmetic" Description="Arithmetic package"/>
				</expression>
				<expression tag="Internet.UniformResourceLocator" Value="/?script=reference/Categories/Expressions that can be created with keyboard shortcuts" Description="Expressions that can be created with keyboard shortcuts"/>
				<expression tag="Internet.UniformResourceLocator" Value="/?script=reference/Categories/Expressions with serialization attributes" Description="Expressions with serialization attributes"/>
				<expression tag="Internet.UniformResourceLocator" Value="/?script=reference/Categories/Expressions with interactive actions" Description="Expressions with interactive actions"/>
			</expression>
		</expression>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Typesetting.Rule"/>
	</expression>
	<expression tag="Formulae.Script.Row" type="0">
		<expression tag="Typesetting.MultiParagraph">
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="Author: Laurence R. Ugalde"/>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="Date of creation:"/>
				<expression tag="Time.Time" Value="1613368800000"/>
			</expression>
			<expression tag="Typesetting.Paragraph">
				<expression tag="String.Text" Value="Date of last modification:"/>
				<expression tag="Time.Time" Value="1722218460000"/>
			</expression>
		</expression>
	</expression>
</expression>